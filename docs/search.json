{"Structs/_MBScale.html#/c:@S@_MBScale@FI@scale":{"name":"scale","abstract":"<p>Undocumented</p>","parent_name":"_MBScale"},"Structs/_MBScale.html#/c:@S@_MBScale@FI@tolerance":{"name":"tolerance","abstract":"<p>Undocumented</p>","parent_name":"_MBScale"},"Structs/_MBRange.html#/c:@S@_MBRange@FI@start":{"name":"start","abstract":"<p>Undocumented</p>","parent_name":"_MBRange"},"Structs/_MBRange.html#/c:@S@_MBRange@FI@stop":{"name":"stop","abstract":"<p>Undocumented</p>","parent_name":"_MBRange"},"Structs/_MBRange.html":{"name":"_MBRange","abstract":"<p>Struct which defines a range on the image</p>"},"Structs/_MBScale.html":{"name":"_MBScale","abstract":"<p>Struct which defines a scale which detector searches on the image</p>"},"Functions.html#/c:MBDocumentSpecification.h@F@MBMakeRange":{"name":"MBMakeRange","abstract":"<p>Method which creates a range structure</p>"},"Functions.html#/c:MBDocumentSpecification.h@F@MBMakeScale":{"name":"MBMakeScale","abstract":"<p>Method which creates a scale structure</p>"},"Functions.html#/c:@F@CGDeltaMake":{"name":"CGDeltaMake","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGPointWithDelta":{"name":"CGPointWithDelta","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGPointDistance":{"name":"CGPointDistance","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGPointAlongLine":{"name":"CGPointAlongLine","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGPointRotatedAroundPoint":{"name":"CGPointRotatedAroundPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineMake":{"name":"CGLineMake","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineEqualToLine":{"name":"CGLineEqualToLine","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineMidPoint":{"name":"CGLineMidPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineDirection":{"name":"CGLineDirection","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLinesAngle":{"name":"CGLinesAngle","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLinesIntersectAtPoint":{"name":"CGLinesIntersectAtPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineLength":{"name":"CGLineLength","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineScale":{"name":"CGLineScale","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineTranslate":{"name":"CGLineTranslate","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineScaleOnMidPoint":{"name":"CGLineScaleOnMidPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineDelta":{"name":"CGLineDelta","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLinesAreParallel":{"name":"CGLinesAreParallel","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectTopLeftPoint":{"name":"CGRectTopLeftPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectTopRightPoint":{"name":"CGRectTopRightPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectBottomLeftPoint":{"name":"CGRectBottomLeftPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectBottomRightPoint":{"name":"CGRectBottomRightPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectResize":{"name":"CGRectResize","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectInsetEdge":{"name":"CGRectInsetEdge","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectStackedWithinRectFromEdge":{"name":"CGRectStackedWithinRectFromEdge","abstract":"<p>Calculates the stacking of rectangles within a larger rectangle."},"Functions.html#/c:@F@CGRectCenterPoint":{"name":"CGRectCenterPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGRectClosestTwoCornerPoints":{"name":"CGRectClosestTwoCornerPoints","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGLineIntersectsRectAtPoint":{"name":"CGLineIntersectsRectAtPoint","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@CGControlPointsForArcBetweenPointsWithRadius":{"name":"CGControlPointsForArcBetweenPointsWithRadius","abstract":"<p>Undocumented</p>"},"Functions.html#/c:@F@scanningRegionForFrameInBounds":{"name":"scanningRegionForFrameInBounds","abstract":"<p>Undocumented</p>"},"Type Definitions/CGLine/.html#/c:@SA@CGLine@FI@point1":{"name":"point1","abstract":"<p>Undocumented</p>"},"Type Definitions/CGLine/.html#/c:@SA@CGLine@FI@point2":{"name":"point2","abstract":"<p>Undocumented</p>"},"Type Definitions/MBScale/_MBScale.html#/c:@S@_MBScale@FI@scale":{"name":"scale","abstract":"<p>Undocumented</p>","parent_name":"_MBScale"},"Type Definitions/MBScale/_MBScale.html#/c:@S@_MBScale@FI@tolerance":{"name":"tolerance","abstract":"<p>Undocumented</p>","parent_name":"_MBScale"},"Type Definitions/MBScale/_MBScale.html":{"name":"_MBScale","abstract":"<p>Struct which defines a scale which detector searches on the image</p>","parent_name":"MBScale"},"Type Definitions/MBRange/_MBRange.html#/c:@S@_MBRange@FI@start":{"name":"start","abstract":"<p>Undocumented</p>","parent_name":"_MBRange"},"Type Definitions/MBRange/_MBRange.html#/c:@S@_MBRange@FI@stop":{"name":"stop","abstract":"<p>Undocumented</p>","parent_name":"_MBRange"},"Type Definitions/MBRange/_MBRange.html":{"name":"_MBRange","abstract":"<p>Struct which defines a range on the image</p>","parent_name":"MBRange"},"Type Definitions.html#/c:MBDateParser.h@T@MBDateFormatArray":{"name":"MBDateFormatArray","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MBDateParser.h@T@MBDateSeparatorCharsArray":{"name":"MBDateSeparatorCharsArray","abstract":"<p>Undocumented</p>"},"Type Definitions/MBRange.html":{"name":"MBRange","abstract":"<p>Undocumented</p>"},"Type Definitions/MBScale.html":{"name":"MBScale","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MBException.h@T@MBExceptionName":{"name":"MBExceptionName","abstract":"<p>Undocumented</p>"},"Type Definitions.html#/c:MBGeometry.h@T@CGDelta":{"name":"CGDelta","abstract":"<p>Undocumented</p>"},"Type Definitions/CGLine.html":{"name":"CGLine","abstract":"<p>Undocumented</p>"},"Protocols/MBTemplatingClassifier.html#/c:objc(pl)MBTemplatingClassifier(im)classify":{"name":"-classify","abstract":"<p>Undocumented</p>","parent_name":"MBTemplatingClassifier"},"Protocols/MBSubviewDelegate.html#/c:objc(pl)MBSubviewDelegate(im)subviewAnimationDidStart:":{"name":"-subviewAnimationDidStart:","abstract":"<p>Delegate method called when animation starts</p>","parent_name":"MBSubviewDelegate"},"Protocols/MBSubviewDelegate.html#/c:objc(pl)MBSubviewDelegate(im)subviewAnimationDidFinish:":{"name":"-subviewAnimationDidFinish:","abstract":"<p>Delegate method called when animation finishes</p>","parent_name":"MBSubviewDelegate"},"Protocols/MBStringProcessingRecognizerRunnerDelegate.html#/c:objc(pl)MBStringProcessingRecognizerRunnerDelegate(im)recognizerRunner:didFinishProcessingString:":{"name":"-recognizerRunner:didFinishProcessingString:","abstract":"<p>Called when MBRecognizerRunner finishes processing given string.","parent_name":"MBStringProcessingRecognizerRunnerDelegate"},"Protocols/MBSignatureImageResult.html#/c:objc(pl)MBSignatureImageResult(py)signatureImage":{"name":"signatureImage","abstract":"<p>image of the signature if enabled with <code>MBSignatureImage returnSignatureImage</code> property.</p>","parent_name":"MBSignatureImageResult"},"Protocols/MBSignatureImageDpi.html#/c:objc(pl)MBSignatureImageDpi(py)signatureImageDpi":{"name":"signatureImageDpi","abstract":"<p>Property for setting DPI for signature images","parent_name":"MBSignatureImageDpi"},"Protocols/MBSignatureImage.html#/c:objc(pl)MBSignatureImage(py)returnSignatureImage":{"name":"returnSignatureImage","abstract":"<p>Sets whether signature image from ID card should be extracted.</p>","parent_name":"MBSignatureImage"},"Protocols/MBScanningRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBScanningRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didFinishScanningWithState:":{"name":"-recognizerRunnerViewController:didFinishScanningWithState:","abstract":"<p>Scanning library did output scanning results</p>","parent_name":"MBScanningRecognizerRunnerViewControllerDelegate"},"Protocols/MBScanningRecognizerRunnerDelegate.html#/c:objc(pl)MBScanningRecognizerRunnerDelegate(im)recognizerRunner:didFinishScanningWithState:":{"name":"-recognizerRunner:didFinishScanningWithState:","abstract":"<p>Scanning library did output scanning results</p>","parent_name":"MBScanningRecognizerRunnerDelegate"},"Protocols/MBResultSubview.html#/c:objc(pl)MBResultSubview(im)scanningFinishedWithState:":{"name":"-scanningFinishedWithState:","abstract":"<p>This method should be called when MBRecognizerResultState is obtained and reslt state need to be drawn/redrawn.</p>","parent_name":"MBResultSubview"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerUnauthorizedCamera:":{"name":"-recognizerRunnerViewControllerUnauthorizedCamera:","abstract":"<p>Scanning library requested authorization for Camera access from the user, but the user declined it.","parent_name":"MBRecognizerRunnerViewControllerDelegate"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didFindError:":{"name":"-recognizerRunnerViewController:didFindError:","abstract":"<p>Scanning library found an error. The error object is returned and contains","parent_name":"MBRecognizerRunnerViewControllerDelegate"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerDidClose:":{"name":"-recognizerRunnerViewControllerDidClose:","abstract":"<p>Scanning library was closed, usually by the user pressing close button and cancelling the scan</p>","parent_name":"MBRecognizerRunnerViewControllerDelegate"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerWillPresentHelp:":{"name":"-recognizerRunnerViewControllerWillPresentHelp:","abstract":"<p>Called when Scanning library will display help. This can happen when the user presses","parent_name":"MBRecognizerRunnerViewControllerDelegate"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerDidResumeScanning:":{"name":"-recognizerRunnerViewControllerDidResumeScanning:","abstract":"<p>Called when Scanning library is resuming scanning.</p>","parent_name":"MBRecognizerRunnerViewControllerDelegate"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerDidStopScanning:":{"name":"-recognizerRunnerViewControllerDidStopScanning:","abstract":"<p>Called when Scanning library is stopped scanning.</p>","parent_name":"MBRecognizerRunnerViewControllerDelegate"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(py)autorotate":{"name":"autorotate","abstract":"<p>MBRecognizerRunnerViewController&rsquo;s shouldAutorotate will return this value.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(py)supportedOrientations":{"name":"supportedOrientations","abstract":"<p>MBRecognizerRunnerViewController&rsquo;s supportedInterfaceOrientations will return this value.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)pauseScanning":{"name":"-pauseScanning","abstract":"<p>Pause scanning without dismissing the camera view.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)isScanningPaused":{"name":"-isScanningPaused","abstract":"<p>Retrieve the current state of scanning.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)resumeScanningAndResetState:":{"name":"-resumeScanningAndResetState:","abstract":"<p>Resumes scanning. Optionally, internal state of recognizers can be reset in the process.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)resumeCamera":{"name":"-resumeCamera","abstract":"<p>Resumes camera session. This method is automatically called in viewWillAppear when ScanningViewController enters screen.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)pauseCamera":{"name":"-pauseCamera","abstract":"<p>Pauses camera session. This method is automatically called in viewDidDissapear when ScanningViewController exits screen.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)isCameraPaused":{"name":"-isCameraPaused","abstract":"<p>Retrieve the current state of camera.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)playScanSuccessSound":{"name":"-playScanSuccessSound","abstract":"<p>Play scan sound.</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)willSetTorchOn:":{"name":"-willSetTorchOn:","abstract":"<p>Call to turn on torch without camera overlay</p>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBRecognizerRunnerViewController.html#/c:objc(pl)MBRecognizerRunnerViewController(im)resetState":{"name":"-resetState","abstract":"<hr>","parent_name":"MBRecognizerRunnerViewController"},"Protocols/MBQuadDetectorSubview.html#/c:objc(pl)MBQuadDetectorSubview(im)detectionFinishedWithDisplayableQuad:":{"name":"-detectionFinishedWithDisplayableQuad:","abstract":"<p>This method should be called when MBDisplayableQuadDetection is obtained and quad need to be drawn/redrawn.</p>","parent_name":"MBQuadDetectorSubview"},"Protocols/MBPointDetectorSubview.html#/c:objc(pl)MBPointDetectorSubview(im)detectionFinishedWithDisplayablePoints:":{"name":"-detectionFinishedWithDisplayablePoints:","abstract":"<p>This method should be called when MBDisplayablePointsDetection is obtained and points need to be drawn/redrawn.</p>","parent_name":"MBPointDetectorSubview"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)overlayViewControllerWillCloseCamera:":{"name":"-overlayViewControllerWillCloseCamera:","abstract":"<p>Notification sent when Overlay View Controller wants to close camera, for example,","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)overlayViewControllerShouldDisplayTorch:":{"name":"-overlayViewControllerShouldDisplayTorch:","abstract":"<p>Overlay View Controller should ask it&rsquo;s delegete if it&rsquo;s necessary to display Torch (Light) button.","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)overlayViewController:willSetTorch:":{"name":"-overlayViewController:willSetTorch:","abstract":"<p>Overlay View Controller must notify it&rsquo;s delegete to set the torch mode to On or Off</p>","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)shouldDisplayHelpButton":{"name":"-shouldDisplayHelpButton","abstract":"<p>If help mechanism is implemented using PPScanDelegate&rsquo;s scanningViewControllerWillPresentHelp method,","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)isStatusBarPresented":{"name":"-isStatusBarPresented","abstract":"<p>Check if status bar is hidden or showed</p>","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)isTorchOn":{"name":"-isTorchOn","abstract":"<p>Overlay View Controller can ask it&rsquo;s delegete about the status of Torch</p>","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOverlayContainerViewController.html#/c:objc(pl)MBOverlayContainerViewController(im)isCameraAuthorized":{"name":"-isCameraAuthorized","abstract":"<p>Overlay View Controller can ask it&rsquo;s owner whether camera was authorized</p>","parent_name":"MBOverlayContainerViewController"},"Protocols/MBOcrRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBOcrRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didObtainOcrResult:withResultName:":{"name":"-recognizerRunnerViewController:didObtainOcrResult:withResultName:","abstract":"<p>Called when scanning library has MBOcrLayout ready to be displayed on UI.","parent_name":"MBOcrRecognizerRunnerViewControllerDelegate"},"Protocols/MBOcrRecognizerRunnerDelegate.html#/c:objc(pl)MBOcrRecognizerRunnerDelegate(im)recognizerRunner:didObtainOcrResult:withResultName:":{"name":"-recognizerRunner:didObtainOcrResult:withResultName:","abstract":"<p>Called when Scanning library has MBOcrLayout available and ready to be displayed on UI.","parent_name":"MBOcrRecognizerRunnerDelegate"},"Protocols/MBOcrLayoutSubview.html#/c:objc(pl)MBOcrLayoutSubview(im)ocrLayoutObtained:withIdentifier:":{"name":"-ocrLayoutObtained:withIdentifier:","abstract":"<p>This method should be called when MBOcrLayout is obtained and needs to be drawn/redrawn.</p>","parent_name":"MBOcrLayoutSubview"},"Protocols/MBNativeResult.html#/c:objc(pl)MBNativeResult(im)nativeResult":{"name":"-nativeResult","abstract":"<p>Returns the native object containing the result. For example, for MBDateResult, this method","parent_name":"MBNativeResult"},"Protocols/MBNativeResult.html#/c:objc(pl)MBNativeResult(im)stringResult":{"name":"-stringResult","abstract":"<p>Returns the string version of the result. For example, for MBDateResult, this method","parent_name":"MBNativeResult"},"Protocols/MBMrzImageResult.html#/c:objc(pl)MBMrzImageResult(py)mrzImage":{"name":"mrzImage","abstract":"<p>face image from the document if enabled with <code>MBMrzImage returnMrzImage</code> property.</p>","parent_name":"MBMrzImageResult"},"Protocols/MBMrzImage.html#/c:objc(pl)MBMrzImage(py)returnMrzImage":{"name":"returnMrzImage","abstract":"<p>Sets whether MRZ image from ID card should be extracted</p>","parent_name":"MBMrzImage"},"Protocols/MBMrzFilter.html#/c:objc(pl)MBMrzFilter(im)mrzFilter":{"name":"-mrzFilter","abstract":"<p>Determines whether document should be processed or it is filtered out.</p>","parent_name":"MBMrzFilter"},"Protocols/MBImageProcessingRecognizerRunnerDelegate.html#/c:objc(pl)MBImageProcessingRecognizerRunnerDelegate(im)recognizerRunner:didFinishProcessingImage:":{"name":"-recognizerRunner:didFinishProcessingImage:","abstract":"<p>Called when MBRecognizerRunner finishes processing given image.","parent_name":"MBImageProcessingRecognizerRunnerDelegate"},"Protocols/MBGlareRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBGlareRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didFinishGlareDetectionWithResult:":{"name":"-recognizerRunnerViewController:didFinishGlareDetectionWithResult:","abstract":"<p>Called when scanning library finishes glare detection.","parent_name":"MBGlareRecognizerRunnerViewControllerDelegate"},"Protocols/MBGlareRecognizerRunnerDelegate.html#/c:objc(pl)MBGlareRecognizerRunnerDelegate(im)recognizerRunner:didFinishGlareDetectionWithResult:":{"name":"-recognizerRunner:didFinishGlareDetectionWithResult:","abstract":"<p>Called when scanning library finishes glare detection.","parent_name":"MBGlareRecognizerRunnerDelegate"},"Protocols/MBGlareDetection.html#/c:objc(pl)MBGlareDetection(py)detectGlare":{"name":"detectGlare","abstract":"<p>Defines if glare detection should be turned on/off.</p>","parent_name":"MBGlareDetection"},"Protocols/MBFullDocumentImageResult.html#/c:objc(pl)MBFullDocumentImageResult(py)fullDocumentImage":{"name":"fullDocumentImage","abstract":"<p>full document image if enabled with <code>MBFullDocumentImage returnFullDocumentImage</code> property.</p>","parent_name":"MBFullDocumentImageResult"},"Protocols/MBFullDocumentImageDpi.html#/c:objc(pl)MBFullDocumentImageDpi(py)fullDocumentImageDpi":{"name":"fullDocumentImageDpi","abstract":"<p>Property for setting DPI for full document images","parent_name":"MBFullDocumentImageDpi"},"Protocols/MBFullDocumentImage.html#/c:objc(pl)MBFullDocumentImage(py)returnFullDocumentImage":{"name":"returnFullDocumentImage","abstract":"<p>Sets whether full document image of ID card should be extracted.</p>","parent_name":"MBFullDocumentImage"},"Protocols/MBFrameGrabberRecognizerDelegate.html#/c:objc(pl)MBFrameGrabberRecognizerDelegate(im)onFrameAvailable:isFocused:frameQuality:":{"name":"-onFrameAvailable:isFocused:frameQuality:","abstract":"<p>Called when {FrameGrabberRecognizer} received new frame for processing.","parent_name":"MBFrameGrabberRecognizerDelegate"},"Protocols/MBFirstSideFinishedRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBFirstSideFinishedRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerDidFinishRecognitionOfFirstSide:":{"name":"-recognizerRunnerViewControllerDidFinishRecognitionOfFirstSide:","abstract":"<p>Called when scanning library finishes performing recognition of the first side of the document.","parent_name":"MBFirstSideFinishedRecognizerRunnerViewControllerDelegate"},"Protocols/MBFirstSideFinishedRecognizerRunnerDelegate.html#/c:objc(pl)MBFirstSideFinishedRecognizerRunnerDelegate(im)recognizerRunnerDidFinishRecognitionOfFirstSide:":{"name":"-recognizerRunnerDidFinishRecognitionOfFirstSide:","abstract":"<p>Called when scanning library finishes performing recognition of the first side of the document.","parent_name":"MBFirstSideFinishedRecognizerRunnerDelegate"},"Protocols/MBFieldByFieldOverlayViewControllerDelegate.html#/c:objc(pl)MBFieldByFieldOverlayViewControllerDelegate(im)fieldByFieldOverlayViewControllerWillClose:":{"name":"-fieldByFieldOverlayViewControllerWillClose:","abstract":"<p>Called when Overlay will close. This can happen if the user pressed close button</p>","parent_name":"MBFieldByFieldOverlayViewControllerDelegate"},"Protocols/MBFieldByFieldOverlayViewControllerDelegate.html#/c:objc(pl)MBFieldByFieldOverlayViewControllerDelegate(im)fieldByFieldOverlayViewController:didFinishScanningWithElements:":{"name":"-fieldByFieldOverlayViewController:didFinishScanningWithElements:","abstract":"<p>Called when Scanning finishes and Overlay will dissapear.</p>","parent_name":"MBFieldByFieldOverlayViewControllerDelegate"},"Protocols/MBFieldByFieldOverlayViewControllerDelegate.html#/c:objc(pl)MBFieldByFieldOverlayViewControllerDelegate(im)fieldByFieldOverlayViewControllerWillPresentHelp:":{"name":"-fieldByFieldOverlayViewControllerWillPresentHelp:","abstract":"<p>Called when user pressed the help button on the overlay.</p>","parent_name":"MBFieldByFieldOverlayViewControllerDelegate"},"Protocols/MBFieldByFieldOverlayViewControllerDelegate.html#/c:objc(pl)MBFieldByFieldOverlayViewControllerDelegate(im)fieldByFieldOverlayViewController:didOutputCurrentImage:":{"name":"-fieldByFieldOverlayViewController:didOutputCurrentImage:","abstract":"<p>Outputs back each image processed by the SDK.</p>","parent_name":"MBFieldByFieldOverlayViewControllerDelegate"},"Protocols/MBFaceImageResult.html#/c:objc(pl)MBFaceImageResult(py)faceImage":{"name":"faceImage","abstract":"<p>face image from the document if enabled with <code>MBFaceImage returnFaceImage</code> property.</p>","parent_name":"MBFaceImageResult"},"Protocols/MBFaceImageDpi.html#/c:objc(pl)MBFaceImageDpi(py)faceImageDpi":{"name":"faceImageDpi","abstract":"<p>Property for setting DPI for face images","parent_name":"MBFaceImageDpi"},"Protocols/MBFaceImage.html#/c:objc(pl)MBFaceImage(py)returnFaceImage":{"name":"returnFaceImage","abstract":"<p>Sets whether face image from ID card should be extracted</p>","parent_name":"MBFaceImage"},"Protocols/MBEncodedSignatureImageResult.html#/c:objc(pl)MBEncodedSignatureImageResult(py)encodedSignatureImage":{"name":"encodedSignatureImage","abstract":"<p>JPEG-encoded image of the signature from the document. Available only if enabled with <code>MBEncodeSignatureImage encodeSignatureImage</code> property.</p>","parent_name":"MBEncodedSignatureImageResult"},"Protocols/MBEncodedMrzImageResult.html#/c:objc(pl)MBEncodedMrzImageResult(py)encodedMrzImage":{"name":"encodedMrzImage","abstract":"<p>JPEG-encoded MRZ image from the document if enabled with <code>MBEncodeMrzImage encodeMrzImage</code> property.</p>","parent_name":"MBEncodedMrzImageResult"},"Protocols/MBEncodedFullDocumentImageResult.html#/c:objc(pl)MBEncodedFullDocumentImageResult(py)encodedFullDocumentImage":{"name":"encodedFullDocumentImage","abstract":"<p>JPEG-encoded full document image if enabled with <code>MBEncodeFullDocumentImage encodeFullDocumentImage</code> property.</p>","parent_name":"MBEncodedFullDocumentImageResult"},"Protocols/MBEncodedFaceImageResult.html#/c:objc(pl)MBEncodedFaceImageResult(py)encodedFaceImage":{"name":"encodedFaceImage","abstract":"<p>JPEG-encoded face image from the document if enabled with <code>MBEncodeFaceImage encodeFaceImage</code> property.</p>","parent_name":"MBEncodedFaceImageResult"},"Protocols/MBEncodedCombinedFullDocumentImageResult.html#/c:objc(pl)MBEncodedCombinedFullDocumentImageResult(py)encodedFullDocumentFrontImage":{"name":"encodedFullDocumentFrontImage","abstract":"<p>JPEG-encoded full document image of the front side of the document. Available only if enabled with <code>MBEncodeFullDocumentImage encodeFullDocumentImage</code> property.</p>","parent_name":"MBEncodedCombinedFullDocumentImageResult"},"Protocols/MBEncodedCombinedFullDocumentImageResult.html#/c:objc(pl)MBEncodedCombinedFullDocumentImageResult(py)encodedFullDocumentBackImage":{"name":"encodedFullDocumentBackImage","abstract":"<p>JPEG-encoded full document image of the back side of the document. Available only if enabled with <code>MBEncodeFullDocumentImage encodeFullDocumentImage</code> property.</p>","parent_name":"MBEncodedCombinedFullDocumentImageResult"},"Protocols/MBEncodeSignatureImage.html#/c:objc(pl)MBEncodeSignatureImage(py)encodeSignatureImage":{"name":"encodeSignatureImage","abstract":"<p>Sets whether image of signature on document should be extracted and JPEG-encoded.</p>","parent_name":"MBEncodeSignatureImage"},"Protocols/MBEncodeMrzImage.html#/c:objc(pl)MBEncodeMrzImage(py)encodeMrzImage":{"name":"encodeMrzImage","abstract":"<p>Sets whether MRZ image should be extracted from document and JPEG-encoded.</p>","parent_name":"MBEncodeMrzImage"},"Protocols/MBEncodeFullDocumentImage.html#/c:objc(pl)MBEncodeFullDocumentImage(py)encodeFullDocumentImage":{"name":"encodeFullDocumentImage","abstract":"<p>Sets whether full document image should be extracted and JPEG-encoded.</p>","parent_name":"MBEncodeFullDocumentImage"},"Protocols/MBEncodeFaceImage.html#/c:objc(pl)MBEncodeFaceImage(py)encodeFaceImage":{"name":"encodeFaceImage","abstract":"<p>Sets whether face image should be extracted from document and JPEG-encoded.</p>","parent_name":"MBEncodeFaceImage"},"Protocols/MBDocumentVerificationSubviewDelegate.html#/c:objc(pl)MBDocumentVerificationSubviewDelegate(im)documentVerificationSubviewDidFinishAnimation:":{"name":"-documentVerificationSubviewDidFinishAnimation:","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationSubviewDelegate"},"Protocols/MBDocumentVerificationOverlayViewControllerDelegate.html#/c:objc(pl)MBDocumentVerificationOverlayViewControllerDelegate(im)documentVerificationOverlayViewControllerDidFinishScanning:state:":{"name":"-documentVerificationOverlayViewControllerDidFinishScanning:state:","abstract":"<p>Scanning library did output scanning results</p>","parent_name":"MBDocumentVerificationOverlayViewControllerDelegate"},"Protocols/MBDocumentVerificationOverlayViewControllerDelegate.html#/c:objc(pl)MBDocumentVerificationOverlayViewControllerDelegate(im)documentVerificationOverlayViewControllerDidTapClose:":{"name":"-documentVerificationOverlayViewControllerDidTapClose:","abstract":"<p>Scanning library was closed, usually by the user pressing close button and cancelling the scan</p>","parent_name":"MBDocumentVerificationOverlayViewControllerDelegate"},"Protocols/MBDocumentOverlayViewControllerDelegate.html#/c:objc(pl)MBDocumentOverlayViewControllerDelegate(im)documentOverlayViewControllerDidFinishScanning:state:":{"name":"-documentOverlayViewControllerDidFinishScanning:state:","abstract":"<p>Scanning library did output scanning results</p>","parent_name":"MBDocumentOverlayViewControllerDelegate"},"Protocols/MBDocumentOverlayViewControllerDelegate.html#/c:objc(pl)MBDocumentOverlayViewControllerDelegate(im)documentOverlayViewControllerDidTapClose:":{"name":"-documentOverlayViewControllerDidTapClose:","abstract":"<p>Scanning library was closed, usually by the user pressing close button and cancelling the scan</p>","parent_name":"MBDocumentOverlayViewControllerDelegate"},"Protocols/MBDigitalSignatureResult.html#/c:objc(pl)MBDigitalSignatureResult(py)digitalSignature":{"name":"digitalSignature","abstract":"<p>Digital signature of the recognition result. Available only if enabled with <code>MBDigitalSignature signResult</code> property.</p>","parent_name":"MBDigitalSignatureResult"},"Protocols/MBDigitalSignatureResult.html#/c:objc(pl)MBDigitalSignatureResult(py)digitalSignatureVersion":{"name":"digitalSignatureVersion","abstract":"<p>Version of the digital signature. Available only if enabled with <code>MBDigitalSignature signResult</code> property.</p>","parent_name":"MBDigitalSignatureResult"},"Protocols/MBDigitalSignature.html#/c:objc(pl)MBDigitalSignature(py)signResult":{"name":"signResult","abstract":"<p>Whether or not recognition result should be signed.</p>","parent_name":"MBDigitalSignature"},"Protocols/MBDetectionRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBDetectionRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didFinishDetectionWithDisplayableQuad:":{"name":"-recognizerRunnerViewController:didFinishDetectionWithDisplayableQuad:","abstract":"<p>Called when Scanning library finishes detection of objects.","parent_name":"MBDetectionRecognizerRunnerViewControllerDelegate"},"Protocols/MBDetectionRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBDetectionRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didFinishDetectionWithDisplayablePoints:":{"name":"-recognizerRunnerViewController:didFinishDetectionWithDisplayablePoints:","abstract":"<p>Called when Scanning library finishes detection of objects.","parent_name":"MBDetectionRecognizerRunnerViewControllerDelegate"},"Protocols/MBDetectionRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBDetectionRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewControllerDidFailDetection:":{"name":"-recognizerRunnerViewControllerDidFailDetection:","abstract":"<p>Called when Scanning library fails to detect any object with any of the currently active recognizers.</p>","parent_name":"MBDetectionRecognizerRunnerViewControllerDelegate"},"Protocols/MBDetectionRecognizerRunnerDelegate.html#/c:objc(pl)MBDetectionRecognizerRunnerDelegate(im)recognizerRunner:didFinishDetectionWithDisplayableQuad:":{"name":"-recognizerRunner:didFinishDetectionWithDisplayableQuad:","abstract":"<p>Called when Scanning library finishes detection of objects.","parent_name":"MBDetectionRecognizerRunnerDelegate"},"Protocols/MBDetectionRecognizerRunnerDelegate.html#/c:objc(pl)MBDetectionRecognizerRunnerDelegate(im)recognizerRunner:didFinishDetectionWithDisplayablePoints:":{"name":"-recognizerRunner:didFinishDetectionWithDisplayablePoints:","abstract":"<p>Called when Scanning library finishes detection of objects.","parent_name":"MBDetectionRecognizerRunnerDelegate"},"Protocols/MBDetectionRecognizerRunnerDelegate.html#/c:objc(pl)MBDetectionRecognizerRunnerDelegate(im)recognizerRunnerDidFailDetection:":{"name":"-recognizerRunnerDidFailDetection:","abstract":"<p>Called when Scanning library fails to detect any object with any of the currently active recognizers.</p>","parent_name":"MBDetectionRecognizerRunnerDelegate"},"Protocols/MBDebugRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBDebugRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didOutputDebugImage:":{"name":"-recognizerRunnerViewController:didOutputDebugImage:","abstract":"<p>Scanning library did output debug image","parent_name":"MBDebugRecognizerRunnerViewControllerDelegate"},"Protocols/MBDebugRecognizerRunnerViewControllerDelegate.html#/c:objc(pl)MBDebugRecognizerRunnerViewControllerDelegate(im)recognizerRunnerViewController:didOutputDebugText:":{"name":"-recognizerRunnerViewController:didOutputDebugText:","abstract":"<p>Scanning library did output debug text","parent_name":"MBDebugRecognizerRunnerViewControllerDelegate"},"Protocols/MBDebugRecognizerRunnerDelegate.html#/c:objc(pl)MBDebugRecognizerRunnerDelegate(im)recognizerRunner:didOutputDebugImage:":{"name":"-recognizerRunner:didOutputDebugImage:","abstract":"<p>Scanning library did output debug image","parent_name":"MBDebugRecognizerRunnerDelegate"},"Protocols/MBDebugRecognizerRunnerDelegate.html#/c:objc(pl)MBDebugRecognizerRunnerDelegate(im)recognizerRunner:didOutputDebugText:":{"name":"-recognizerRunner:didOutputDebugText:","abstract":"<p>Scanning library did output debug text","parent_name":"MBDebugRecognizerRunnerDelegate"},"Protocols/MBCombinedRecognizerResult.html#/c:objc(pl)MBCombinedRecognizerResult(py)documentDataMatch":{"name":"documentDataMatch","abstract":"<p>Returns YES if data from scanned parts/sides of the document match,","parent_name":"MBCombinedRecognizerResult"},"Protocols/MBCombinedRecognizerResult.html#/c:objc(pl)MBCombinedRecognizerResult(py)scanningFirstSideDone":{"name":"scanningFirstSideDone","abstract":"<p>Returns YES if recognizer has finished scanning first side and is now scanning back side,","parent_name":"MBCombinedRecognizerResult"},"Protocols/MBCombinedRecognizer.html#/c:objc(pl)MBCombinedRecognizer(py)combinedResult":{"name":"combinedResult","abstract":"<p>Combined result which is associated with this combined recognizer.</p>","parent_name":"MBCombinedRecognizer"},"Protocols/MBCombinedFullDocumentImageResult.html#/c:objc(pl)MBCombinedFullDocumentImageResult(py)fullDocumentFrontImage":{"name":"fullDocumentFrontImage","abstract":"<p>front side image of the document if enabled with <code>MBFullDocumentImage returnFullDocumentImage</code> property.</p>","parent_name":"MBCombinedFullDocumentImageResult"},"Protocols/MBCombinedFullDocumentImageResult.html#/c:objc(pl)MBCombinedFullDocumentImageResult(py)fullDocumentBackImage":{"name":"fullDocumentBackImage","abstract":"<p>back side image of the document if enabled with <code>MBFullDocumentImage returnFullDocumentImage</code> property.</p>","parent_name":"MBCombinedFullDocumentImageResult"},"Protocols/MBBarcodeOverlayViewControllerDelegate.html#/c:objc(pl)MBBarcodeOverlayViewControllerDelegate(im)barcodeOverlayViewControllerDidFinishScanning:state:":{"name":"-barcodeOverlayViewControllerDidFinishScanning:state:","abstract":"<p>Scanning library did output scanning results</p>","parent_name":"MBBarcodeOverlayViewControllerDelegate"},"Protocols/MBBarcodeOverlayViewControllerDelegate.html#/c:objc(pl)MBBarcodeOverlayViewControllerDelegate(im)barcodeOverlayViewControllerDidTapClose:":{"name":"-barcodeOverlayViewControllerDidTapClose:","abstract":"<p>Scanning library was closed, usually by the user pressing close button and cancelling the scan</p>","parent_name":"MBBarcodeOverlayViewControllerDelegate"},"Protocols/MBBarcodeOverlayViewControllerDelegate.html":{"name":"MBBarcodeOverlayViewControllerDelegate","abstract":"<p>Protocol for obtaining scanning results</p>"},"Protocols/MBCombinedFullDocumentImageResult.html":{"name":"MBCombinedFullDocumentImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBCombinedRecognizer.html":{"name":"MBCombinedRecognizer","abstract":"<p>Undocumented</p>"},"Protocols/MBCombinedRecognizerResult.html":{"name":"MBCombinedRecognizerResult","abstract":"<p>Undocumented</p>"},"Protocols/MBDebugRecognizerRunnerDelegate.html":{"name":"MBDebugRecognizerRunnerDelegate","abstract":"<p>Protocol for obtaining debug metadata</p>"},"Protocols/MBDebugRecognizerRunnerViewControllerDelegate.html":{"name":"MBDebugRecognizerRunnerViewControllerDelegate","abstract":"<p>Protocol for obtaining debug metadata</p>"},"Protocols/MBDetectionRecognizerRunnerDelegate.html":{"name":"MBDetectionRecognizerRunnerDelegate","abstract":"<p>Protocol for obtaining detection results</p>"},"Protocols/MBDetectionRecognizerRunnerViewControllerDelegate.html":{"name":"MBDetectionRecognizerRunnerViewControllerDelegate","abstract":"<p>Protocol for obtaining detection results</p>"},"Protocols/MBDigitalSignature.html":{"name":"MBDigitalSignature","abstract":"<p>Undocumented</p>"},"Protocols/MBDigitalSignatureResult.html":{"name":"MBDigitalSignatureResult","abstract":"<p>Undocumented</p>"},"Protocols/MBDocumentOverlayViewControllerDelegate.html":{"name":"MBDocumentOverlayViewControllerDelegate","abstract":"<p>Protocol for obtaining scanning results</p>"},"Protocols/MBDocumentVerificationOverlayViewControllerDelegate.html":{"name":"MBDocumentVerificationOverlayViewControllerDelegate","abstract":"<p>Protocol for obtaining scanning results</p>"},"Protocols/MBDocumentVerificationSubviewDelegate.html":{"name":"MBDocumentVerificationSubviewDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodeFaceImage.html":{"name":"MBEncodeFaceImage","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodeFullDocumentImage.html":{"name":"MBEncodeFullDocumentImage","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodeMrzImage.html":{"name":"MBEncodeMrzImage","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodeSignatureImage.html":{"name":"MBEncodeSignatureImage","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodedCombinedFullDocumentImageResult.html":{"name":"MBEncodedCombinedFullDocumentImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodedFaceImageResult.html":{"name":"MBEncodedFaceImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodedFullDocumentImageResult.html":{"name":"MBEncodedFullDocumentImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodedMrzImageResult.html":{"name":"MBEncodedMrzImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBEncodedSignatureImageResult.html":{"name":"MBEncodedSignatureImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBFaceImage.html":{"name":"MBFaceImage","abstract":"<p>Undocumented</p>"},"Protocols/MBFaceImageDpi.html":{"name":"MBFaceImageDpi","abstract":"<p>Undocumented</p>"},"Protocols/MBFaceImageResult.html":{"name":"MBFaceImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBFieldByFieldOverlayViewControllerDelegate.html":{"name":"MBFieldByFieldOverlayViewControllerDelegate","abstract":"<p>Protocol for observing important events with scanning</p>"},"Protocols/MBFirstSideFinishedRecognizerRunnerDelegate.html":{"name":"MBFirstSideFinishedRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBFirstSideFinishedRecognizerRunnerViewControllerDelegate.html":{"name":"MBFirstSideFinishedRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBFrameGrabberRecognizerDelegate.html":{"name":"MBFrameGrabberRecognizerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBFullDocumentImage.html":{"name":"MBFullDocumentImage","abstract":"<p>Undocumented</p>"},"Protocols/MBFullDocumentImageDpi.html":{"name":"MBFullDocumentImageDpi","abstract":"<p>Undocumented</p>"},"Protocols/MBFullDocumentImageResult.html":{"name":"MBFullDocumentImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBGlareDetection.html":{"name":"MBGlareDetection","abstract":"<p>Undocumented</p>"},"Protocols/MBGlareRecognizerRunnerDelegate.html":{"name":"MBGlareRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBGlareRecognizerRunnerViewControllerDelegate.html":{"name":"MBGlareRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBImageProcessingRecognizerRunnerDelegate.html":{"name":"MBImageProcessingRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBMrzFilter.html":{"name":"MBMrzFilter","abstract":"<p>Undocumented</p>"},"Protocols/MBMrzImage.html":{"name":"MBMrzImage","abstract":"<p>Undocumented</p>"},"Protocols/MBMrzImageResult.html":{"name":"MBMrzImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBNativeResult.html":{"name":"MBNativeResult","abstract":"<p>Undocumented</p>"},"Protocols/MBOcrLayoutSubview.html":{"name":"MBOcrLayoutSubview","abstract":"<p>Protocol for processing MBOcrLayout. Subviews implementing this protocol process and draw layout data on the screen (e.g. dots or OCR characters)</p>"},"Protocols/MBOcrRecognizerRunnerDelegate.html":{"name":"MBOcrRecognizerRunnerDelegate","abstract":"<p>Protocol for obtaining ocr results</p>"},"Protocols/MBOcrRecognizerRunnerViewControllerDelegate.html":{"name":"MBOcrRecognizerRunnerViewControllerDelegate","abstract":"<p>Protocol for obtaining ocr results</p>"},"Protocols/MBOverlayContainerViewController.html":{"name":"MBOverlayContainerViewController","abstract":"<p>Overlay View Controller also needs to notify CameraViewController on certain events."},"Protocols/MBPointDetectorSubview.html":{"name":"MBPointDetectorSubview","abstract":"<p>Protocol for processing MBDisplayablePointsDetection. Subviews implementing this protocol process and draw points on the screen (e.g. flashing dots)</p>"},"Protocols/MBQuadDetectorSubview.html":{"name":"MBQuadDetectorSubview","abstract":"<p>Protocol for processing MBDisplayableQuadDetection. Subviews implementing this protocol process and draw quad on the screen (e.g. viewfinder drawing document outlining)</p>"},"Protocols/MBRecognizerRunnerViewController.html":{"name":"MBRecognizerRunnerViewController","abstract":"<p>Protocol for View controllers which present camera and provide scanning features</p>"},"Protocols/MBRecognizerRunnerViewControllerDelegate.html":{"name":"MBRecognizerRunnerViewControllerDelegate","abstract":"<p>Protocol for MBRecognizerRunnerViewController actions</p>"},"Protocols/MBResultSubview.html":{"name":"MBResultSubview","abstract":"<p>Protocol for processing MBRecognizerResult. Subviews implementing this protocol process and draw result data on the screen (e.g. letting users know is scanning was successful)</p>"},"Protocols/MBScanningRecognizerRunnerDelegate.html":{"name":"MBScanningRecognizerRunnerDelegate","abstract":"<p>Protocol for obtaining scanning results</p>"},"Protocols/MBScanningRecognizerRunnerViewControllerDelegate.html":{"name":"MBScanningRecognizerRunnerViewControllerDelegate","abstract":"<p>Protocol for obtaining scanning results</p>"},"Protocols/MBSignatureImage.html":{"name":"MBSignatureImage","abstract":"<p>Undocumented</p>"},"Protocols/MBSignatureImageDpi.html":{"name":"MBSignatureImageDpi","abstract":"<p>Undocumented</p>"},"Protocols/MBSignatureImageResult.html":{"name":"MBSignatureImageResult","abstract":"<p>Undocumented</p>"},"Protocols/MBStringProcessingRecognizerRunnerDelegate.html":{"name":"MBStringProcessingRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>"},"Protocols/MBSubviewDelegate.html":{"name":"MBSubviewDelegate","abstract":"<p>Protocol which all objects interested in receiving information about overlay subviews need to implement</p>"},"Protocols/MBTemplatingClassifier.html":{"name":"MBTemplatingClassifier","abstract":"<p>Undocumented</p>"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DocumentType":{"name":"DocumentType","abstract":"<p>Mandatory on all driver&rsquo;s licenses. All barcodes which are using 3-track magnetic","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@StandardVersionNumber":{"name":"StandardVersionNumber","abstract":"<p>Mandatory on all driver&rsquo;s licenses.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CustomerFamilyName":{"name":"CustomerFamilyName","abstract":"<p>Mandatory on all AAMVA, Magnetic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CustomerFirstName":{"name":"CustomerFirstName","abstract":"<p>Mandatory on all AAMVA, Magnetic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CustomerFullName":{"name":"CustomerFullName","abstract":"<p>Mandatory on all AAMVA, Magnetic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DateOfBirth":{"name":"DateOfBirth","abstract":"<p>Mandatory on all AAMVA, Magentic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@Sex":{"name":"Sex","abstract":"<p>Mandatory on all AAMVA, Magentic barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@EyeColor":{"name":"EyeColor","abstract":"<p>Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AddressStreet":{"name":"AddressStreet","abstract":"<p>Mandatory on all AAMVA and Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AddressCity":{"name":"AddressCity","abstract":"<p>Mandatory on all AAMVA and Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AddressJurisdictionCode":{"name":"AddressJurisdictionCode","abstract":"<p>Mandatory on all AAMVA and Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AddressPostalCode":{"name":"AddressPostalCode","abstract":"<p>Mandatory on all AAMVA and Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@FullAddress":{"name":"FullAddress","abstract":"<p>Mandatory on all AAMVA and Magnetic barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@Height":{"name":"Height","abstract":"<p>Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@HeightIn":{"name":"HeightIn","abstract":"<p>Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@HeightCm":{"name":"HeightCm","abstract":"<p>Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 Compact barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CustomerMiddleName":{"name":"CustomerMiddleName","abstract":"<p>Mandatory on AAMVA 04, 05, 06, 07, 08.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@HairColor":{"name":"HairColor","abstract":"<p>Optional on all AAMVA, Magnetic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@NameSuffix":{"name":"NameSuffix","abstract":"<p>Mandatory on AAMVA 02 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKAFullName":{"name":"AKAFullName","abstract":"<p>Optional on all AAMVA and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKAFamilyName":{"name":"AKAFamilyName","abstract":"<p>Optional on all AAMVA and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKAGivenName":{"name":"AKAGivenName","abstract":"<p>Optional on all AAMVA and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKASuffixName":{"name":"AKASuffixName","abstract":"<p>Optional on all AAMVA and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@WeightRange":{"name":"WeightRange","abstract":"<p>Mandatory on AAMVA 02 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@WeightPounds":{"name":"WeightPounds","abstract":"<p>Mandatory on AAMVA 02 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@WeightKilograms":{"name":"WeightKilograms","abstract":"<p>Mandatory on AAMVA 02 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CustomerIdNumber":{"name":"CustomerIdNumber","abstract":"<p>Mandatory on all AAMVA and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@FamilyNameTruncation":{"name":"FamilyNameTruncation","abstract":"<p>Mandatory on AAMVA 04, 05, 06, 07, 08 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@FirstNameTruncation":{"name":"FirstNameTruncation","abstract":"<p>Mandatory on AAMVA 04, 05, 06, 07, 08 barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@MiddleNameTruncation":{"name":"MiddleNameTruncation","abstract":"<p>Mandatory on AAMVA 04, 05, 06, 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@PlaceOfBirth":{"name":"PlaceOfBirth","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AddressStreet2":{"name":"AddressStreet2","abstract":"<p>Optional on all AAMVA barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@RaceEthnicity":{"name":"RaceEthnicity","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@NamePrefix":{"name":"NamePrefix","abstract":"<p>Optional on AAMVA 01</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CountryIdentification":{"name":"CountryIdentification","abstract":"<p>Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ResidenceStreetAddress":{"name":"ResidenceStreetAddress","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ResidenceStreetAddress2":{"name":"ResidenceStreetAddress2","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ResidenceCity":{"name":"ResidenceCity","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ResidenceJurisdictionCode":{"name":"ResidenceJurisdictionCode","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ResidencePostalCode":{"name":"ResidencePostalCode","abstract":"<p>Optional on AAMVA 01 barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ResidenceFullAddress":{"name":"ResidenceFullAddress","abstract":"<p>Optional on AAMVA 01 barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@Under18":{"name":"Under18","abstract":"<p>Optional on AAMVA 05, 06, 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@Under19":{"name":"Under19","abstract":"<p>Optional on AAMVA 05, 06, 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@Under21":{"name":"Under21","abstract":"<p>Optional on AAMVA 05, 06, 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@SocialSecurityNumber":{"name":"SocialSecurityNumber","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKASocialSecurityNumber":{"name":"AKASocialSecurityNumber","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKAMiddleName":{"name":"AKAMiddleName","abstract":"<p>Optional on AAMVA 01</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKAPrefixName":{"name":"AKAPrefixName","abstract":"<p>Optional on AAMVA 01</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@OrganDonor":{"name":"OrganDonor","abstract":"<p>Optional on AAMVA 01, 06, 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@Veteran":{"name":"Veteran","abstract":"<p>Optional on AAMVA 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AKADateOfBirth":{"name":"AKADateOfBirth","abstract":"<p>Optional on AAMVA 01. (MMDDCCYY format)</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@IssuerIdentificationNumber":{"name":"IssuerIdentificationNumber","abstract":"<p>Mandatory on all AAMVA, Magnetic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DocumentExpirationDate":{"name":"DocumentExpirationDate","abstract":"<p>Mandatory on all AAMVA, Magnetic and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionVersionNumber":{"name":"JurisdictionVersionNumber","abstract":"<p>Mandatory on all AAMVA and Compact barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionVehicleClass":{"name":"JurisdictionVehicleClass","abstract":"<p>Mandatory on all AAMVA and Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionRestrictionCodes":{"name":"JurisdictionRestrictionCodes","abstract":"<p>Mandatory on all AAMVA barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionEndorsementCodes":{"name":"JurisdictionEndorsementCodes","abstract":"<p>Mandatory on all AAMVA barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DocumentIssueDate":{"name":"DocumentIssueDate","abstract":"<p>Mandatory on all AAMVA and Compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@FederalCommercialVehicleCodes":{"name":"FederalCommercialVehicleCodes","abstract":"<p>Mandatory on AAMVA versions 02 and 03.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@IssuingJurisdiction":{"name":"IssuingJurisdiction","abstract":"<p>Optional on all AAMVA barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@StandardVehicleClassification":{"name":"StandardVehicleClassification","abstract":"<p>Optional on all AAMVA barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@IssuingJurisdictionName":{"name":"IssuingJurisdictionName","abstract":"<p>Optional on all AAMVA and Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@StandardEndorsementCode":{"name":"StandardEndorsementCode","abstract":"<p>Optional on all AAMVA barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@StandardRestrictionCode":{"name":"StandardRestrictionCode","abstract":"<p>Optional on all AAMVA barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionVehicleClassificationDescription":{"name":"JurisdictionVehicleClassificationDescription","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionEndorsmentCodeDescription":{"name":"JurisdictionEndorsmentCodeDescription","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@JurisdictionRestrictionCodeDescription":{"name":"JurisdictionRestrictionCodeDescription","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@InventoryControlNumber":{"name":"InventoryControlNumber","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@CardRevisionDate":{"name":"CardRevisionDate","abstract":"<p>Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DocumentDiscriminator":{"name":"DocumentDiscriminator","abstract":"<p>Mandatory on AAMVA 02, 03, 04, 05, 06, 07, 08 and Magnetic barcodes.","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@LimitedDurationDocument":{"name":"LimitedDurationDocument","abstract":"<p>Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@AuditInformation":{"name":"AuditInformation","abstract":"<p>Optional on AAMVA 02, 03, 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@ComplianceType":{"name":"ComplianceType","abstract":"<p>Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@IssueTimestamp":{"name":"IssueTimestamp","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@PermitExpirationDate":{"name":"PermitExpirationDate","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@PermitIdentifier":{"name":"PermitIdentifier","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@PermitIssueDate":{"name":"PermitIssueDate","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@NumberOfDuplicates":{"name":"NumberOfDuplicates","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@HAZMATExpirationDate":{"name":"HAZMATExpirationDate","abstract":"<p>Optional on AAMVA 04, 05, 06, 07, 08 and Compact barcodes</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@MedicalIndicator":{"name":"MedicalIndicator","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@NonResident":{"name":"NonResident","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@UniqueCustomerId":{"name":"UniqueCustomerId","abstract":"<p>Optional on AAMVA version 01.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DataDiscriminator":{"name":"DataDiscriminator","abstract":"<p>Optional on compact barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DocumentExpirationMonth":{"name":"DocumentExpirationMonth","abstract":"<p>Optional on Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@DocumentNonexpiring":{"name":"DocumentNonexpiring","abstract":"<p>Optional on Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBUsdlKeys.html#/c:@E@MBUsdlKeys@SecurityVersion":{"name":"SecurityVersion","abstract":"<p>Optional on Magnetic barcodes.</p>","parent_name":"MBUsdlKeys"},"Enums/MBTopUpPreset.html#/c:@E@MBTopUpPreset@MBTopUp123":{"name":"MBTopUp123","abstract":"<p>For top ups which begin with <b><em>123</em></b> prefix and USSD code length is <b>14</b></p>","parent_name":"MBTopUpPreset"},"Enums/MBTopUpPreset.html#/c:@E@MBTopUpPreset@MBTopUp103":{"name":"MBTopUp103","abstract":"<p>For top ups which begin with <b><em>103</em></b> and USSD code length is <b>14</b></p>","parent_name":"MBTopUpPreset"},"Enums/MBTopUpPreset.html#/c:@E@MBTopUpPreset@MBTopUp131":{"name":"MBTopUp131","abstract":"<p>For top ups which begin with <b><em>131</em></b> and USSD code length is <b>13</b></p>","parent_name":"MBTopUpPreset"},"Enums/MBTopUpPreset.html#/c:@E@MBTopUpPreset@MBTopUpGeneric":{"name":"MBTopUpGeneric","abstract":"<p>For top ups with any prefix and USSD code length from interval {[13, 16]}</p>","parent_name":"MBTopUpPreset"},"Enums/MBRecognizerResultState.html#/c:@E@MBRecognizerResultState@MBRecognizerResultStateEmpty":{"name":"MBRecognizerResultStateEmpty","abstract":"<p>Empty</p>","parent_name":"MBRecognizerResultState"},"Enums/MBRecognizerResultState.html#/c:@E@MBRecognizerResultState@MBRecognizerResultStateUncertain":{"name":"MBRecognizerResultStateUncertain","abstract":"<p>Uncertain</p>","parent_name":"MBRecognizerResultState"},"Enums/MBRecognizerResultState.html#/c:@E@MBRecognizerResultState@MBRecognizerResultStateValid":{"name":"MBRecognizerResultStateValid","abstract":"<p>Valid</p>","parent_name":"MBRecognizerResultState"},"Enums/MBFrameQualityEstimationMode.html#/c:@E@MBFrameQualityEstimationMode@MBFrameQualityEstimationModeDefault":{"name":"MBFrameQualityEstimationModeDefault","abstract":"<p>Default. Frame quality estimation is ON if enabled recognizers require it by default.</p>","parent_name":"MBFrameQualityEstimationMode"},"Enums/MBFrameQualityEstimationMode.html#/c:@E@MBFrameQualityEstimationMode@MBFrameQualityEstimationModeOn":{"name":"MBFrameQualityEstimationModeOn","abstract":"<p>Frame quality estimation is always on</p>","parent_name":"MBFrameQualityEstimationMode"},"Enums/MBFrameQualityEstimationMode.html#/c:@E@MBFrameQualityEstimationMode@MBFrameQualityEstimationModeOff":{"name":"MBFrameQualityEstimationModeOff","abstract":"<p>Frame quality estimation is always off</p>","parent_name":"MBFrameQualityEstimationMode"},"Enums/MBRecognitionMode.html#/c:@E@MBRecognitionMode@MBRecognitionModeDefault":{"name":"MBRecognitionModeDefault","abstract":"<p>Classic, production mode. Results are returned after first valid scanning</p>","parent_name":"MBRecognitionMode"},"Enums/MBRecognitionMode.html#/c:@E@MBRecognitionMode@MBRecognitionModeTest":{"name":"MBRecognitionModeTest","abstract":"<p>Recognition Test. Results are never returned, recognition is performed repeatedly</p>","parent_name":"MBRecognitionMode"},"Enums/MBRecognitionMode.html#/c:@E@MBRecognitionMode@MBRecognitionModeDetectionTest":{"name":"MBRecognitionModeDetectionTest","abstract":"<p>Recognition Test. Results are never returned, only detection is performed repeatedly</p>","parent_name":"MBRecognitionMode"},"Enums/MBProcessorResultState.html#/c:@E@MBProcessorResultState@MBProcessorResultStateEmpty":{"name":"MBProcessorResultStateEmpty","abstract":"<p>Empty</p>","parent_name":"MBProcessorResultState"},"Enums/MBProcessorResultState.html#/c:@E@MBProcessorResultState@MBProcessorResultStateUncertain":{"name":"MBProcessorResultStateUncertain","abstract":"<p>Uncertain</p>","parent_name":"MBProcessorResultState"},"Enums/MBProcessorResultState.html#/c:@E@MBProcessorResultState@MBProcessorResultStateValid":{"name":"MBProcessorResultStateValid","abstract":"<p>Valid</p>","parent_name":"MBProcessorResultState"},"Enums/MBParserResultState.html#/c:@E@MBParserResultState@MBParserResultStateEmpty":{"name":"MBParserResultStateEmpty","abstract":"<p>Empty</p>","parent_name":"MBParserResultState"},"Enums/MBParserResultState.html#/c:@E@MBParserResultState@MBParserResultStateUncertain":{"name":"MBParserResultStateUncertain","abstract":"<p>Uncertain</p>","parent_name":"MBParserResultState"},"Enums/MBParserResultState.html#/c:@E@MBParserResultState@MBParserResultStateValid":{"name":"MBParserResultStateValid","abstract":"<p>Valid</p>","parent_name":"MBParserResultState"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_AKZIDENZ_GROTESK":{"name":"MB_OCR_FONT_AKZIDENZ_GROTESK","abstract":"<p>Akzidenz Grotesk font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ARIAL":{"name":"MB_OCR_FONT_ARIAL","abstract":"<p>Arial font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ARIAL_BLACK":{"name":"MB_OCR_FONT_ARIAL_BLACK","abstract":"<p>Arial black font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ARNHEM":{"name":"MB_OCR_FONT_ARNHEM","abstract":"<p>Arnhem font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_AVANT_GARDE":{"name":"MB_OCR_FONT_AVANT_GARDE","abstract":"<p>Avant garde font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_BEMBO":{"name":"MB_OCR_FONT_BEMBO","abstract":"<p>Bembo font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_BODONI":{"name":"MB_OCR_FONT_BODONI","abstract":"<p>Bodoni font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_CALIBRI":{"name":"MB_OCR_FONT_CALIBRI","abstract":"<p>Calibri font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_CALIBRI_BOLD":{"name":"MB_OCR_FONT_CALIBRI_BOLD","abstract":"<p>Calibri bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_CHAINPRINTER":{"name":"MB_OCR_FONT_CHAINPRINTER","abstract":"<p>Chainprinter font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COMIC_SANS":{"name":"MB_OCR_FONT_COMIC_SANS","abstract":"<p>Comic sans font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_CONCERTO_ROUNDED_SG":{"name":"MB_OCR_FONT_CONCERTO_ROUNDED_SG","abstract":"<p>Concerto rounded SG font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COURIER":{"name":"MB_OCR_FONT_COURIER","abstract":"<p>Courier font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COURIER_BOLD":{"name":"MB_OCR_FONT_COURIER_BOLD","abstract":"<p>Courier bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COURIER_MEDIUM_BOLD":{"name":"MB_OCR_FONT_COURIER_MEDIUM_BOLD","abstract":"<p>Courier medium bold","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COURIER_NEW_BOLD":{"name":"MB_OCR_FONT_COURIER_NEW_BOLD","abstract":"<p>Courier new bold","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COURIER_NEW_CE":{"name":"MB_OCR_FONT_COURIER_NEW_CE","abstract":"<p>Courier new ce font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COURIER_CONDENSED":{"name":"MB_OCR_FONT_COURIER_CONDENSED","abstract":"<p>Courier censored font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_DEJAVU_SANS_MONO":{"name":"MB_OCR_FONT_DEJAVU_SANS_MONO","abstract":"<p>Dejavu sans mono font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_DIN":{"name":"MB_OCR_FONT_DIN","abstract":"<p>Din font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_EUROPA_GROTESK_NO_2_SB_BOLD":{"name":"MB_OCR_FONT_EUROPA_GROTESK_NO_2_SB_BOLD","abstract":"<p>Europa grotesk no 2 SB bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_EUROSTILE":{"name":"MB_OCR_FONT_EUROSTILE","abstract":"<p>Eurostile font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_F25_BANK_PRINTER_BOLD":{"name":"MB_OCR_FONT_F25_BANK_PRINTER_BOLD","abstract":"<p>F25 bank printer bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_FRANKLIN_GOTHIC":{"name":"MB_OCR_FONT_FRANKLIN_GOTHIC","abstract":"<p>Franklin gothic font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_FRUTIGER":{"name":"MB_OCR_FONT_FRUTIGER","abstract":"<p>Frutiger font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_FUTURA":{"name":"MB_OCR_FONT_FUTURA","abstract":"<p>Futura font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_FUTURA_BOLD":{"name":"MB_OCR_FONT_FUTURA_BOLD","abstract":"<p>Futura bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_GARAMOND":{"name":"MB_OCR_FONT_GARAMOND","abstract":"<p>Garamond font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_GEORGIA":{"name":"MB_OCR_FONT_GEORGIA","abstract":"<p>Georgia font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_GILL_SANS":{"name":"MB_OCR_FONT_GILL_SANS","abstract":"<p>Gill sans font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_HANDWRITTEN":{"name":"MB_OCR_FONT_HANDWRITTEN","abstract":"<p>Handwritten font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_HELVETICA":{"name":"MB_OCR_FONT_HELVETICA","abstract":"<p>Helvetica font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_HELVETICA_BOLD":{"name":"MB_OCR_FONT_HELVETICA_BOLD","abstract":"<p>Helvetica bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_HELVETICA_CONDENSED_LIGHT":{"name":"MB_OCR_FONT_HELVETICA_CONDENSED_LIGHT","abstract":"<p>Helvetica condensed light font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_HYPERMARKET":{"name":"MB_OCR_FONT_HYPERMARKET","abstract":"<p>Hypermarket font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_INTERSTATE":{"name":"MB_OCR_FONT_INTERSTATE","abstract":"<p>Interstate font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_LATIN_MODERN":{"name":"MB_OCR_FONT_LATIN_MODERN","abstract":"<p>Latin modern math font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_LATIN_MODERN_ITALIC":{"name":"MB_OCR_FONT_LATIN_MODERN_ITALIC","abstract":"<p>Latin modern italic font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_LETTER_GOTHIC":{"name":"MB_OCR_FONT_LETTER_GOTHIC","abstract":"<p>Letter gothic font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_LUCIDA":{"name":"MB_OCR_FONT_LUCIDA","abstract":"<p>Lucida font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_LUCIDA_SANS":{"name":"MB_OCR_FONT_LUCIDA_SANS","abstract":"<p>Lucida sans font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_MATRIX":{"name":"MB_OCR_FONT_MATRIX","abstract":"<p>Matrix font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_META":{"name":"MB_OCR_FONT_META","abstract":"<p>Meta font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_MINION":{"name":"MB_OCR_FONT_MINION","abstract":"<p>Minion font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_OCRA":{"name":"MB_OCR_FONT_OCRA","abstract":"<p>OCR A font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_OCRB":{"name":"MB_OCR_FONT_OCRB","abstract":"<p>OCR B font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_OFFICINA":{"name":"MB_OCR_FONT_OFFICINA","abstract":"<p>Officina font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_OPTIMA":{"name":"MB_OCR_FONT_OPTIMA","abstract":"<p>Optima font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_PRINTF":{"name":"MB_OCR_FONT_PRINTF","abstract":"<p>Printf font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ROCKWELL":{"name":"MB_OCR_FONT_ROCKWELL","abstract":"<p>Rockwell font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ROTIS_SANS_SERIF":{"name":"MB_OCR_FONT_ROTIS_SANS_SERIF","abstract":"<p>Rotis sans serif font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ROTIS_SERIF":{"name":"MB_OCR_FONT_ROTIS_SERIF","abstract":"<p>Rotis serif font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_SABON":{"name":"MB_OCR_FONT_SABON","abstract":"<p>Sabon font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_STONE":{"name":"MB_OCR_FONT_STONE","abstract":"<p>Stone font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_SV_BASIC_MANUAL":{"name":"MB_OCR_FONT_SV_BASIC_MANUAL","abstract":"<p>SV basic manual font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TAHOMA":{"name":"MB_OCR_FONT_TAHOMA","abstract":"<p>Tahoma font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TAHOMA_BOLD":{"name":"MB_OCR_FONT_TAHOMA_BOLD","abstract":"<p>Tahoma bold font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TEX_GYRE_TERMES":{"name":"MB_OCR_FONT_TEX_GYRE_TERMES","abstract":"<p>Tex gyre termes font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TEX_GYRE_TERMES_ITALIC":{"name":"MB_OCR_FONT_TEX_GYRE_TERMES_ITALIC","abstract":"<p>Tex gyre termes italic font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_THE_SANS_MONO_CONDENSED_BLACK":{"name":"MB_OCR_FONT_THE_SANS_MONO_CONDENSED_BLACK","abstract":"<p>Sans mono condensed black font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_THESIS":{"name":"MB_OCR_FONT_THESIS","abstract":"<p>Thesis font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TICKET_DE_CAISSE":{"name":"MB_OCR_FONT_TICKET_DE_CAISSE","abstract":"<p>Ticket de caisse font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TIMES_NEW_ROMAN":{"name":"MB_OCR_FONT_TIMES_NEW_ROMAN","abstract":"<p>Times new roman font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TRAJAN":{"name":"MB_OCR_FONT_TRAJAN","abstract":"<p>Trajan font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_TRINITE":{"name":"MB_OCR_FONT_TRINITE","abstract":"<p>Trinite font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_UNIVERS":{"name":"MB_OCR_FONT_UNIVERS","abstract":"<p>Univers font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_VERDANA":{"name":"MB_OCR_FONT_VERDANA","abstract":"<p>Verdana font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_VOLTAIRE":{"name":"MB_OCR_FONT_VOLTAIRE","abstract":"<p>Voltaire font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_WALBAUM":{"name":"MB_OCR_FONT_WALBAUM","abstract":"<p>Walbaum font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_EUROPA_GRO_SB":{"name":"MB_OCR_FONT_EUROPA_GRO_SB","abstract":"<p>Europa gro sb font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_EUROPA_GRO_SB_LIGHT":{"name":"MB_OCR_FONT_EUROPA_GRO_SB_LIGHT","abstract":"<p>Europa gro sb light font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ANTONIO_REGULAR":{"name":"MB_OCR_FONT_ANTONIO_REGULAR","abstract":"<p>Antonio regular font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_CORPORATE_LIGHT":{"name":"MB_OCR_FONT_CORPORATE_LIGHT","abstract":"<p>Corporate S Light font","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_MICR":{"name":"MB_OCR_FONT_MICR","abstract":"<p>MICR font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ARABIC_NILE":{"name":"MB_OCR_FONT_ARABIC_NILE","abstract":"<p>Arabic font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_UNKNOWN":{"name":"MB_OCR_FONT_UNKNOWN","abstract":"<p>Unknown font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_XITS_MATH":{"name":"MB_OCR_FONT_XITS_MATH","abstract":"<p>XITS Math font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_ANY":{"name":"MB_OCR_FONT_ANY","abstract":"<p>Any of the other listed fonts</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_UNKNOWN_MATH":{"name":"MB_OCR_FONT_UNKNOWN_MATH","abstract":"<p>Unknown math font</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_UKDL_LIGHT":{"name":"MB_OCR_FONT_UKDL_LIGHT","abstract":"<p>Font found on UKDL licenses</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_COUNT":{"name":"MB_OCR_FONT_COUNT","abstract":"<p>Must be last as it holds the number of available fonts</p>","parent_name":"MBOcrFont"},"Enums/MBOcrFont.html#/c:@E@MBOcrFont@MB_OCR_FONT_FE_SCHRIFT":{"name":"MB_OCR_FONT_FE_SCHRIFT","abstract":"<p>German license plate font *</p>","parent_name":"MBOcrFont"},"Enums/PPDocumentType.html#/c:@E@PPDocumentType@PPBlinkOCRDocumentType":{"name":"PPBlinkOCRDocumentType","abstract":"<p>Document type for latin documents used with BlinkOCR recognizer</p>","parent_name":"PPDocumentType"},"Enums/PPDocumentType.html#/c:@E@PPDocumentType@PPMicrDocumentType":{"name":"PPMicrDocumentType","abstract":"<p>Document type for MICR font</p>","parent_name":"PPDocumentType"},"Enums/PPDocumentType.html#/c:@E@PPDocumentType@PPArabicDocumentType":{"name":"PPArabicDocumentType","abstract":"<p>Document type for Arabic characters</p>","parent_name":"PPDocumentType"},"Enums/PPDocumentType.html#/c:@E@PPDocumentType@PPHandwrittenDocumentType":{"name":"PPHandwrittenDocumentType","abstract":"<p>Document type for handwriting</p>","parent_name":"PPDocumentType"},"Enums/MBMrtdDocumentType.html#/c:@E@MBMrtdDocumentType@MBMrtdTypeUnknown":{"name":"MBMrtdTypeUnknown","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdDocumentType"},"Enums/MBMrtdDocumentType.html#/c:@E@MBMrtdDocumentType@MBMrtdTypeIdentityCard":{"name":"MBMrtdTypeIdentityCard","abstract":"<p>Identity card</p>","parent_name":"MBMrtdDocumentType"},"Enums/MBMrtdDocumentType.html#/c:@E@MBMrtdDocumentType@MBMrtdTypePassport":{"name":"MBMrtdTypePassport","abstract":"<p>Passport</p>","parent_name":"MBMrtdDocumentType"},"Enums/MBMrtdDocumentType.html#/c:@E@MBMrtdDocumentType@MBMrtdTypeVisa":{"name":"MBMrtdTypeVisa","abstract":"<p>Visa</p>","parent_name":"MBMrtdDocumentType"},"Enums/MBMrtdDocumentType.html#/c:@E@MBMrtdDocumentType@MBMrtdTypeGreenCard":{"name":"MBMrtdTypeGreenCard","abstract":"<p>US Green Card</p>","parent_name":"MBMrtdDocumentType"},"Enums/MBMrtdSpecificationPreset.html#/c:@E@MBMrtdSpecificationPreset@MBMrtdSpecificationTd1":{"name":"MBMrtdSpecificationTd1","abstract":"<p>Preset for detecting TD1 cards</p>","parent_name":"MBMrtdSpecificationPreset"},"Enums/MBMrtdSpecificationPreset.html#/c:@E@MBMrtdSpecificationPreset@MBMrtdSpecificationTd2":{"name":"MBMrtdSpecificationTd2","abstract":"<p>Preset for detecting TD2 cards</p>","parent_name":"MBMrtdSpecificationPreset"},"Enums/MBMrtdSpecificationPreset.html#/c:@E@MBMrtdSpecificationPreset@MBMrtdSpecificationTd3":{"name":"MBMrtdSpecificationTd3","abstract":"<p>Preset for detecting TD3 cards</p>","parent_name":"MBMrtdSpecificationPreset"},"Enums/MBProcessingOrientation.html#/c:@E@MBProcessingOrientation@MBProcessingOrientationUp":{"name":"MBProcessingOrientationUp","abstract":"<p>Text oriented same as picture</p>","parent_name":"MBProcessingOrientation"},"Enums/MBProcessingOrientation.html#/c:@E@MBProcessingOrientation@MBProcessingOrientationRight":{"name":"MBProcessingOrientationRight","abstract":"<p>Text is rotated 90 degrees clockwise</p>","parent_name":"MBProcessingOrientation"},"Enums/MBProcessingOrientation.html#/c:@E@MBProcessingOrientation@MBProcessingOrientationDown":{"name":"MBProcessingOrientationDown","abstract":"<p>Text is upside down</p>","parent_name":"MBProcessingOrientation"},"Enums/MBProcessingOrientation.html#/c:@E@MBProcessingOrientation@MBProcessingOrientationLeft":{"name":"MBProcessingOrientationLeft","abstract":"<p>Text is rotated 90 degrees counterclockwise</p>","parent_name":"MBProcessingOrientation"},"Enums/MBEudlCountry.html#/c:@E@MBEudlCountry@MBEudlCountryUnitedKingdom":{"name":"MBEudlCountryUnitedKingdom","abstract":"<p>UK driver&rsquo;s licenses</p>","parent_name":"MBEudlCountry"},"Enums/MBEudlCountry.html#/c:@E@MBEudlCountry@MBEudlCountryGermany":{"name":"MBEudlCountryGermany","abstract":"<p>German driver&rsquo;s licenses</p>","parent_name":"MBEudlCountry"},"Enums/MBEudlCountry.html#/c:@E@MBEudlCountry@MBEudlCountryAustria":{"name":"MBEudlCountryAustria","abstract":"<p>Austrian driver&rsquo;s licenses</p>","parent_name":"MBEudlCountry"},"Enums/MBEudlCountry.html#/c:@E@MBEudlCountry@MBEudlCountryAny":{"name":"MBEudlCountryAny","abstract":"<p>Any EU DL</p>","parent_name":"MBEudlCountry"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationId1Card":{"name":"MBDocumentSpecificationId1Card","abstract":"<p>Preset for detecting ID1 cards</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationId2Card":{"name":"MBDocumentSpecificationId2Card","abstract":"<p>Preset for detecting ID2 cards</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationCheque":{"name":"MBDocumentSpecificationCheque","abstract":"<p>Preset for detecting cheques</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationA4Portrait":{"name":"MBDocumentSpecificationA4Portrait","abstract":"<p>Preset for detecting A4 documents in portrait</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationA4Landscape":{"name":"MBDocumentSpecificationA4Landscape","abstract":"<p>Preset for detecting A4 documents in landscape</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationId1VerticalCard":{"name":"MBDocumentSpecificationId1VerticalCard","abstract":"<p>Preset for detecting vertical ID1 cards</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBDocumentSpecificationPreset.html#/c:@E@MBDocumentSpecificationPreset@MBDocumentSpecificationId2VerticalCard":{"name":"MBDocumentSpecificationId2VerticalCard","abstract":"<p>Preset for detecting vertical ID1 cards</p>","parent_name":"MBDocumentSpecificationPreset"},"Enums/MBScanningMode.html#/c:@E@MBScanningMode@MBScanningModeAuto":{"name":"MBScanningModeAuto","abstract":"<p>Detects document in both directions</p>","parent_name":"MBScanningMode"},"Enums/MBScanningMode.html#/c:@E@MBScanningMode@MBScanningModeLandscape":{"name":"MBScanningModeLandscape","abstract":"<p>Detects document in landscape direction</p>","parent_name":"MBScanningMode"},"Enums/MBScanningMode.html#/c:@E@MBScanningMode@MBScanningModePortrait":{"name":"MBScanningModePortrait","abstract":"<p>Detects document in portrait direction</p>","parent_name":"MBScanningMode"},"Enums/MBDocumentFaceDetectorType.html#/c:@E@MBDocumentFaceDetectorType@MBDocumentFaceDetectorTypeTD1":{"name":"MBDocumentFaceDetectorTypeTD1","abstract":"<p>Uses document detector for TD1 size identity cards</p>","parent_name":"MBDocumentFaceDetectorType"},"Enums/MBDocumentFaceDetectorType.html#/c:@E@MBDocumentFaceDetectorType@MBDocumentFaceDetectorTypeTD2":{"name":"MBDocumentFaceDetectorTypeTD2","abstract":"<p>Uses document detector for TD2 size identity cards</p>","parent_name":"MBDocumentFaceDetectorType"},"Enums/MBDocumentFaceDetectorType.html#/c:@E@MBDocumentFaceDetectorType@MBDocumentFaceDetectorTypePassportsAndVisas":{"name":"MBDocumentFaceDetectorTypePassportsAndVisas","abstract":"<p>Uses MRTD detector for detecting documents with MRZ</p>","parent_name":"MBDocumentFaceDetectorType"},"Enums/MBDetectionCode.html#/c:@E@MBDetectionCode@MBDetectionCodeFail":{"name":"MBDetectionCodeFail","abstract":"<p>Object detection has failed.</p>","parent_name":"MBDetectionCode"},"Enums/MBDetectionCode.html#/c:@E@MBDetectionCode@MBDetectionCodeFallback":{"name":"MBDetectionCodeFallback","abstract":"<p>Object was detected partially. Only some PhotoPay detectors support this.</p>","parent_name":"MBDetectionCode"},"Enums/MBDetectionCode.html#/c:@E@MBDetectionCode@MBDetectionCodeSuccess":{"name":"MBDetectionCodeSuccess","abstract":"<p>Object detection has succeded.</p>","parent_name":"MBDetectionCode"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusSuccess":{"name":"MBDetectionStatusSuccess","abstract":"<p>Object was successfuly detected.</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusFail":{"name":"MBDetectionStatusFail","abstract":"<p>Object was not detected</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusCameraTooHigh":{"name":"MBDetectionStatusCameraTooHigh","abstract":"<p>Object was successfully detected, but the camera was too far above the object for processing</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusCameraAtAngle":{"name":"MBDetectionStatusCameraAtAngle","abstract":"<p>Object was successfully detected, but the perspective angle of camera is too high</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusCameraRotated":{"name":"MBDetectionStatusCameraRotated","abstract":"<p>Object was successfully detected, but the object is rotated and not aligned to the camera edges</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusQRSuccess":{"name":"MBDetectionStatusQRSuccess","abstract":"<p>QR code was successfully detected</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusPdf417Success":{"name":"MBDetectionStatusPdf417Success","abstract":"<p>PDF417 barcode was successfully detected</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusFallbackSuccess":{"name":"MBDetectionStatusFallbackSuccess","abstract":"<p>Object was successfully detected using a fallback algorithm</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusPartialForm":{"name":"MBDetectionStatusPartialForm","abstract":"<p>Object was detected, but is only partially visible on screen</p>","parent_name":"MBDetectionStatus"},"Enums/MBDetectionStatus.html#/c:@E@MBDetectionStatus@MBDetectionStatusCameraTooNear":{"name":"MBDetectionStatusCameraTooNear","abstract":"<p>Object was successfully detected, but the camera is too near to the object for processing</p>","parent_name":"MBDetectionStatus"},"Enums/MBDeepOcrModel.html#/c:@E@MBDeepOcrModel@MBDeepOcrModelBlinkInput":{"name":"MBDeepOcrModelBlinkInput","abstract":"<p>Deep OCR model for Blink Input</p>","parent_name":"MBDeepOcrModel"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatDDMMYYYY":{"name":"MBDateFormatDDMMYYYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatDDMMYY":{"name":"MBDateFormatDDMMYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatMMDDYYYY":{"name":"MBDateFormatMMDDYYYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatMMDDYY":{"name":"MBDateFormatMMDDYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatYYYYMMDD":{"name":"MBDateFormatYYYYMMDD","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatYYMMDD":{"name":"MBDateFormatYYMMDD","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatDDMONTHYYYY":{"name":"MBDateFormatDDMONTHYYYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatDDMONTHYY":{"name":"MBDateFormatDDMONTHYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatMONTHDDYYYY":{"name":"MBDateFormatMONTHDDYYYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatMONTHDDYY":{"name":"MBDateFormatMONTHDDYY","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatYYYYMONTHDD":{"name":"MBDateFormatYYYYMONTHDD","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/MBDateFormat.html#/c:@E@MBDateFormat@MBDateFormatYYMONTHDD":{"name":"MBDateFormatYYMONTHDD","abstract":"<p>Undocumented</p>","parent_name":"MBDateFormat"},"Enums/PPCameraAutofocusRestriction.html#/c:@E@PPCameraAutofocusRestriction@PPCameraAutofocusRestrictionNone":{"name":"PPCameraAutofocusRestrictionNone","abstract":"<p>Default. Indicates that the autofocus system should not restrict the focus range.</p>","parent_name":"PPCameraAutofocusRestriction"},"Enums/PPCameraAutofocusRestriction.html#/c:@E@PPCameraAutofocusRestriction@PPCameraAutofocusRestrictionNear":{"name":"PPCameraAutofocusRestrictionNear","abstract":"<p>Indicates that the autofocus system should restrict the focus range for subject matter that is near to the camera.</p>","parent_name":"PPCameraAutofocusRestriction"},"Enums/PPCameraAutofocusRestriction.html#/c:@E@PPCameraAutofocusRestriction@PPCameraAutofocusRestrictionFar":{"name":"PPCameraAutofocusRestrictionFar","abstract":"<p>Indicates that the autofocus system should restrict the focus range for subject matter that is far from the camera.</p>","parent_name":"PPCameraAutofocusRestriction"},"Enums/PPCameraType.html#/c:@E@PPCameraType@PPCameraTypeBack":{"name":"PPCameraTypeBack","abstract":"<p>Back facing camera</p>","parent_name":"PPCameraType"},"Enums/PPCameraType.html#/c:@E@PPCameraType@PPCameraTypeFront":{"name":"PPCameraTypeFront","abstract":"<p>Front facing camera</p>","parent_name":"PPCameraType"},"Enums/PPCameraPreset.html#/c:@E@PPCameraPreset@PPCameraPreset480p":{"name":"PPCameraPreset480p","abstract":"<p>480p video will always be used</p>","parent_name":"PPCameraPreset"},"Enums/PPCameraPreset.html#/c:@E@PPCameraPreset@PPCameraPreset720p":{"name":"PPCameraPreset720p","abstract":"<p>720p video will always be used</p>","parent_name":"PPCameraPreset"},"Enums/PPCameraPreset.html#/c:@E@PPCameraPreset@PPCameraPresetOptimal":{"name":"PPCameraPresetOptimal","abstract":"<p>The library will calculate optimal resolution based on the use case and device used</p>","parent_name":"PPCameraPreset"},"Enums/PPCameraPreset.html#/c:@E@PPCameraPreset@PPCameraPresetMax":{"name":"PPCameraPresetMax","abstract":"<p>Device&rsquo;s maximal video resolution will be used.</p>","parent_name":"PPCameraPreset"},"Enums/PPCameraPreset.html#/c:@E@PPCameraPreset@PPCameraPresetPhoto":{"name":"PPCameraPresetPhoto","abstract":"<p>Device&rsquo;s photo preview resolution will be used</p>","parent_name":"PPCameraPreset"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeNone":{"name":"MBBarcodeNone","abstract":"<p>Undocumented</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeQR":{"name":"MBBarcodeTypeQR","abstract":"<p>QR code</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeDataMatrix":{"name":"MBBarcodeTypeDataMatrix","abstract":"<p>Data Matrix</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeUPCE":{"name":"MBBarcodeTypeUPCE","abstract":"<p>UPCE</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeUPCA":{"name":"MBBarcodeTypeUPCA","abstract":"<p>UPCA</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeEAN8":{"name":"MBBarcodeTypeEAN8","abstract":"<p>EAN 8</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeEAN13":{"name":"MBBarcodeTypeEAN13","abstract":"<p>EAN 13</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeCode128":{"name":"MBBarcodeTypeCode128","abstract":"<p>Code 128</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeCode39":{"name":"MBBarcodeTypeCode39","abstract":"<p>Code 39</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeITF":{"name":"MBBarcodeTypeITF","abstract":"<p>ITF</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypeAztec":{"name":"MBBarcodeTypeAztec","abstract":"<p>Code 39</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html#/c:@E@MBBarcodeType@MBBarcodeTypePdf417":{"name":"MBBarcodeTypePdf417","abstract":"<p>PDF 417</p>","parent_name":"MBBarcodeType"},"Enums/MBBarcodeType.html":{"name":"MBBarcodeType","abstract":"<p>Enumeration of possible barcode formats</p>"},"Enums/PPCameraPreset.html":{"name":"PPCameraPreset","abstract":"<p>Camera resolution preset</p>"},"Enums/PPCameraType.html":{"name":"PPCameraType","abstract":"<p>Camera type</p>"},"Enums/PPCameraAutofocusRestriction.html":{"name":"PPCameraAutofocusRestriction","abstract":"<p>Camera autofocus restricion mode</p>"},"Enums/MBDateFormat.html":{"name":"MBDateFormat","abstract":"<p>Available date formats for date parser. To activate parsing of dates with month names in"},"Enums/MBDeepOcrModel.html":{"name":"MBDeepOcrModel","abstract":"<p>Type of the document which recognizer scans</p>"},"Enums/MBDetectionStatus.html":{"name":"MBDetectionStatus","abstract":"<p>Status of the object detection in MicroBlink SDK</p>"},"Enums/MBDetectionCode.html":{"name":"MBDetectionCode","abstract":"<p>Enum for type of detection status.</p>"},"Enums/MBDocumentFaceDetectorType.html":{"name":"MBDocumentFaceDetectorType","abstract":"<p>Enumeration of all supported document types for MBDocumentFaceRecognizer</p>"},"Enums/MBScanningMode.html":{"name":"MBScanningMode","abstract":"<p>Enum of different scanning modes: Landscape, Portrait and Auto(both)</p>"},"Enums/MBDocumentSpecificationPreset.html":{"name":"MBDocumentSpecificationPreset","abstract":"<p>Presets which can be used to instantiate document specification for a specific document format</p>"},"Enums/MBEudlCountry.html":{"name":"MBEudlCountry","abstract":"<p>Enumeration of all supported countries in EUDL Recognizer</p>"},"Enums/MBProcessingOrientation.html":{"name":"MBProcessingOrientation","abstract":"<p>Enum which describes text orientation on an image.</p>"},"Enums/MBMrtdSpecificationPreset.html":{"name":"MBMrtdSpecificationPreset","abstract":"<p>Presets which can be used to instantiate mrtd specification for a specific mrtd format</p>"},"Enums/MBMrtdDocumentType.html":{"name":"MBMrtdDocumentType","abstract":"<p>Supported MRTD document types</p>"},"Enums/PPDocumentType.html":{"name":"PPDocumentType","abstract":"<p>Type of the document which recognizer scans</p>"},"Enums/MBOcrFont.html":{"name":"MBOcrFont","abstract":"<p>A list of fonts supported by BlinkOCR</p>"},"Enums/MBParserResultState.html":{"name":"MBParserResultState","abstract":"<p>Enumeration of posibble parser result state</p>"},"Enums/MBProcessorResultState.html":{"name":"MBProcessorResultState","abstract":"<p>Enumeration of posibble processor result state</p>"},"Enums/MBRecognitionMode.html":{"name":"MBRecognitionMode","abstract":"<p>Denotes the mode in which Recognizers performs recognition</p>"},"Enums/MBFrameQualityEstimationMode.html":{"name":"MBFrameQualityEstimationMode","abstract":"<p>Denotes the mode in which FrameQuality estimation works</p>"},"Enums/MBRecognizerResultState.html":{"name":"MBRecognizerResultState","abstract":"<p>Enumeration of posibble recognizer result state</p>"},"Enums/MBTopUpPreset.html":{"name":"MBTopUpPreset","abstract":"<p>Enumeration of posibble top up presets</p>"},"Enums/MBUsdlKeys.html":{"name":"MBUsdlKeys","abstract":"<p>Possible keys that can be used for obtaining USDL result elements.</p>"},"Constants.html#/c:@MBIllegalModificationException":{"name":"MBIllegalModificationException","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MBInvalidLicenseKeyException":{"name":"MBInvalidLicenseKeyException","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MBInvalidLicenseeKeyException":{"name":"MBInvalidLicenseeKeyException","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MBInvalidLicenseResourceException":{"name":"MBInvalidLicenseResourceException","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MBInvalidBundleException":{"name":"MBInvalidBundleException","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MBMissingSettingsException":{"name":"MBMissingSettingsException","abstract":"<p>Undocumented</p>"},"Constants.html#/c:@MBInvalidArgumentException":{"name":"MBInvalidArgumentException","abstract":"<p>Undocumented</p>"},"Classes/MBVinRecognizerResult.html#/c:objc(cs)MBVinRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBVinRecognizerResult"},"Classes/MBVinRecognizerResult.html#/c:objc(cs)MBVinRecognizerResult(py)vin":{"name":"vin","abstract":"<p>Returns the recognized VIN or empty string if recognition failed.</p>","parent_name":"MBVinRecognizerResult"},"Classes/MBVinRecognizer.html#/c:objc(cs)MBVinRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBVinRecognizer"},"Classes/MBVinRecognizer.html#/c:objc(cs)MBVinRecognizer(py)result":{"name":"result","abstract":"<p>Vin recognizer result</p>","parent_name":"MBVinRecognizer"},"Classes/MBVinParserResult.html#/c:objc(cs)MBVinParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBVinParserResult"},"Classes/MBVinParserResult.html#/c:objc(cs)MBVinParserResult(py)vin":{"name":"vin","abstract":"<p>Returns the recognized VIN number or empty string if recognition failed.</p>","parent_name":"MBVinParserResult"},"Classes/MBVinParser.html#/c:objc(cs)MBVinParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBVinParser"},"Classes/MBVinParser.html#/c:objc(cs)MBVinParser(py)result":{"name":"result","abstract":"<p>Vin parser result</p>","parent_name":"MBVinParser"},"Classes/MBViewControllerFactory.html#/c:objc(cs)MBViewControllerFactory(cm)recognizerRunnerViewControllerWithOverlayViewController:":{"name":"+recognizerRunnerViewControllerWithOverlayViewController:","abstract":"<p>Method creates a camera view controller which is responsible for displaying the","parent_name":"MBViewControllerFactory"},"Classes/MBUsdlRecognizerResult.html#/c:objc(cs)MBUsdlRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUsdlRecognizerResult"},"Classes/MBUsdlRecognizerResult.html#/c:objc(cs)MBUsdlRecognizerResult(im)data":{"name":"-data","abstract":"<p>Byte array with result of the scan</p>","parent_name":"MBUsdlRecognizerResult"},"Classes/MBUsdlRecognizerResult.html#/c:objc(cs)MBUsdlRecognizerResult(im)isUncertain":{"name":"-isUncertain","abstract":"<p>Flag indicating uncertain scanning data","parent_name":"MBUsdlRecognizerResult"},"Classes/MBUsdlRecognizerResult.html#/c:objc(cs)MBUsdlRecognizerResult(im)getField:":{"name":"-getField:","abstract":"<p>Returns a string value for a given key.</p>","parent_name":"MBUsdlRecognizerResult"},"Classes/MBUsdlRecognizerResult.html#/c:objc(cs)MBUsdlRecognizerResult(im)optionalElements":{"name":"-optionalElements","abstract":"<p>Array of elements that are not part of AAMVA standard and are specific to each US state.","parent_name":"MBUsdlRecognizerResult"},"Classes/MBUsdlRecognizer.html#/c:objc(cs)MBUsdlRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUsdlRecognizer"},"Classes/MBUsdlRecognizer.html#/c:objc(cs)MBUsdlRecognizer(py)result":{"name":"result","abstract":"<p>USDL recognizer results</p>","parent_name":"MBUsdlRecognizer"},"Classes/MBUsdlRecognizer.html#/c:objc(cs)MBUsdlRecognizer(py)scanUncertain":{"name":"scanUncertain","abstract":"<p>Set this to YES to scan even barcode not compliant with standards","parent_name":"MBUsdlRecognizer"},"Classes/MBUsdlRecognizer.html#/c:objc(cs)MBUsdlRecognizer(py)allowNullQuietZone":{"name":"allowNullQuietZone","abstract":"<p>Set this to YES to scan barcodes which don&rsquo;t have quiet zone (white area) around it</p>","parent_name":"MBUsdlRecognizer"},"Classes/MBUsdlCombinedRecognizerResult.html#/c:objc(cs)MBUsdlCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUsdlCombinedRecognizerResult"},"Classes/MBUsdlCombinedRecognizerResult.html#/c:objc(cs)MBUsdlCombinedRecognizerResult(im)data":{"name":"-data","abstract":"<p>Byte array with result of the scan</p>","parent_name":"MBUsdlCombinedRecognizerResult"},"Classes/MBUsdlCombinedRecognizerResult.html#/c:objc(cs)MBUsdlCombinedRecognizerResult(im)isUncertain":{"name":"-isUncertain","abstract":"<p>Flag indicating uncertain scanning data","parent_name":"MBUsdlCombinedRecognizerResult"},"Classes/MBUsdlCombinedRecognizerResult.html#/c:objc(cs)MBUsdlCombinedRecognizerResult(im)getField:":{"name":"-getField:","abstract":"<p>Returns a string value for a given key.</p>","parent_name":"MBUsdlCombinedRecognizerResult"},"Classes/MBUsdlCombinedRecognizerResult.html#/c:objc(cs)MBUsdlCombinedRecognizerResult(im)optionalElements":{"name":"-optionalElements","abstract":"<p>Array of elements that are not part of AAMVA standard and are specific to each US state.","parent_name":"MBUsdlCombinedRecognizerResult"},"Classes/MBUsdlCombinedRecognizer.html#/c:objc(cs)MBUsdlCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Result of scanning both sides of USDL</p>","parent_name":"MBUsdlCombinedRecognizer"},"Classes/MBUsdlCombinedRecognizer.html#/c:objc(cs)MBUsdlCombinedRecognizer(py)scanUncertain":{"name":"scanUncertain","abstract":"<p>Set this to YES to scan even barcode not compliant with standards","parent_name":"MBUsdlCombinedRecognizer"},"Classes/MBUsdlCombinedRecognizer.html#/c:objc(cs)MBUsdlCombinedRecognizer(py)allowNullQuietZone":{"name":"allowNullQuietZone","abstract":"<p>Set this to YES to scan barcodes which don&rsquo;t have quiet zone (white area) around it</p>","parent_name":"MBUsdlCombinedRecognizer"},"Classes/MBUsdlCombinedRecognizer.html#/c:objc(cs)MBUsdlCombinedRecognizer(py)type":{"name":"type","abstract":"<p>Type of document this recognizer will scan.</p>","parent_name":"MBUsdlCombinedRecognizer"},"Classes/MBUsdlCombinedRecognizer.html#/c:objc(cs)MBUsdlCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUsdlCombinedRecognizer"},"Classes/MBUnitedArabEmiratesIdFrontRecognizerResult.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizerResult"},"Classes/MBUnitedArabEmiratesIdFrontRecognizerResult.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizerResult(py)idNumber":{"name":"idNumber","abstract":"<p>The id Number of the front side of United Arab Emirates ID owner.</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizerResult"},"Classes/MBUnitedArabEmiratesIdFrontRecognizerResult.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The name of the front side of United Arab Emirates ID owner.</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizerResult"},"Classes/MBUnitedArabEmiratesIdFrontRecognizerResult.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the front side of United Arab Emirates ID owner.</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizerResult"},"Classes/MBUnitedArabEmiratesIdFrontRecognizer.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizer"},"Classes/MBUnitedArabEmiratesIdFrontRecognizer.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>United Arab Emirates ID Front recognizer result</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizer"},"Classes/MBUnitedArabEmiratesIdFrontRecognizer.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from front side of United Arab Emirates ID</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizer"},"Classes/MBUnitedArabEmiratesIdFrontRecognizer.html#/c:objc(cs)MBUnitedArabEmiratesIdFrontRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from front side of United Arab Emirates ID</p>","parent_name":"MBUnitedArabEmiratesIdFrontRecognizer"},"Classes/MBUnitedArabEmiratesIdBackRecognizerResult.html#/c:objc(cs)MBUnitedArabEmiratesIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUnitedArabEmiratesIdBackRecognizerResult"},"Classes/MBUnitedArabEmiratesIdBackRecognizerResult.html#/c:objc(cs)MBUnitedArabEmiratesIdBackRecognizerResult(py)mrzResult":{"name":"mrzResult","abstract":"<p>The mrz of the back side of United Arab Emirates ID owner.</p>","parent_name":"MBUnitedArabEmiratesIdBackRecognizerResult"},"Classes/MBUnitedArabEmiratesIdBackRecognizer.html#/c:objc(cs)MBUnitedArabEmiratesIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBUnitedArabEmiratesIdBackRecognizer"},"Classes/MBUnitedArabEmiratesIdBackRecognizer.html#/c:objc(cs)MBUnitedArabEmiratesIdBackRecognizer(py)result":{"name":"result","abstract":"<p>United Arab Emirates ID Back recognizer result</p>","parent_name":"MBUnitedArabEmiratesIdBackRecognizer"},"Classes/MBTopUpParserResult.html#/c:objc(cs)MBTopUpParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBTopUpParserResult"},"Classes/MBTopUpParserResult.html#/c:objc(cs)MBTopUpParserResult(py)topUp":{"name":"topUp","abstract":"<p>Returns the recognized Top Up number or empty string if recognition failed.</p>","parent_name":"MBTopUpParserResult"},"Classes/MBTopUpParser.html#/c:objc(cs)MBTopUpParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBTopUpParser"},"Classes/MBTopUpParser.html#/c:objc(cs)MBTopUpParser(py)result":{"name":"result","abstract":"<p>Top Up parser result</p>","parent_name":"MBTopUpParser"},"Classes/MBTopUpParser.html#/c:objc(cs)MBTopUpParser(py)allowNoPrefix":{"name":"allowNoPrefix","abstract":"<p>Indicates whether USSD codes without prefix are allowed.</p>","parent_name":"MBTopUpParser"},"Classes/MBTopUpParser.html#/c:objc(cs)MBTopUpParser(py)returnCodeWithoutPrefix":{"name":"returnCodeWithoutPrefix","abstract":"<p>Indicates whether digts prefix and # at the end of scanned USSD code will","parent_name":"MBTopUpParser"},"Classes/MBTopUpParser.html#/c:objc(cs)MBTopUpParser(im)setTopUpPreset:":{"name":"-setTopUpPreset:","abstract":"<p>Sets the top up prefix and USSD code length based on the given MBTopUpPreset. Only","parent_name":"MBTopUpParser"},"Classes/MBTopUpParser.html#/c:objc(cs)MBTopUpParser(im)setPrefix:andUssdCodeLength:":{"name":"-setPrefix:andUssdCodeLength:","abstract":"<p>Sets the given top up prefix and USSD code length. Only top ups with the chosen prefix and","parent_name":"MBTopUpParser"},"Classes/MBTemplatingRecognizerResult.html#/c:objc(cs)MBTemplatingRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBTemplatingRecognizerResult"},"Classes/MBTemplatingRecognizerResult.html#/c:objc(cs)MBTemplatingRecognizerResult(py)templatingClass":{"name":"templatingClass","abstract":"<p>Returns the MBTemplatingClass for recognized document. If classification failed,","parent_name":"MBTemplatingRecognizerResult"},"Classes/MBTemplatingRecognizer.html#/c:objc(cs)MBTemplatingRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBTemplatingRecognizer"},"Classes/MBTemplatingRecognizer.html#/c:objc(cs)MBTemplatingRecognizer(py)templatingResult":{"name":"templatingResult","abstract":"<p>Templating recognizer result</p>","parent_name":"MBTemplatingRecognizer"},"Classes/MBTemplatingRecognizer.html#/c:objc(cs)MBTemplatingRecognizer(py)useGlareDetector":{"name":"useGlareDetector","abstract":"<p>Defines if glare detection should be turned on/off for Templating Recognizer.</p>","parent_name":"MBTemplatingRecognizer"},"Classes/MBTemplatingRecognizer.html#/c:objc(cs)MBTemplatingRecognizer(py)templatingClasses":{"name":"templatingClasses","abstract":"<p>Returns all available templating classes</p>","parent_name":"MBTemplatingRecognizer"},"Classes/MBTemplatingClass.html#/c:objc(cs)MBTemplatingClass(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBTemplatingClass"},"Classes/MBTemplatingClass.html#/c:objc(cs)MBTemplatingClass(im)setClassificationProcessorGroups:":{"name":"-setClassificationProcessorGroups:","abstract":"<p>Sets processor groups that will be executed before classification</p>","parent_name":"MBTemplatingClass"},"Classes/MBTemplatingClass.html#/c:objc(cs)MBTemplatingClass(im)getClassificationProcessorGroups":{"name":"-getClassificationProcessorGroups","abstract":"<p>Returns the currently set array of classification processor groups.</p>","parent_name":"MBTemplatingClass"},"Classes/MBTemplatingClass.html#/c:objc(cs)MBTemplatingClass(im)setNonClassificationProcessorGroups:":{"name":"-setNonClassificationProcessorGroups:","abstract":"<p>Sets processor groups that will be executed if MBTemplatingClassifier&rsquo;s classify returns YES.</p>","parent_name":"MBTemplatingClass"},"Classes/MBTemplatingClass.html#/c:objc(cs)MBTemplatingClass(im)getNonClassificationProcessorGroups":{"name":"-getNonClassificationProcessorGroups","abstract":"<p>Returns the currently set array of non-classification processor groups.</p>","parent_name":"MBTemplatingClass"},"Classes/MBTemplatingClass.html#/c:objc(cs)MBTemplatingClass(im)setTemplatingClassifier:":{"name":"-setTemplatingClassifier:","abstract":"<p>Sets the classifier which will tell whether currently processed document belongs to this class.","parent_name":"MBTemplatingClass"},"Classes/MBTapToFocusSubview.html#/c:objc(cs)MBTapToFocusSubview(im)initWithFrame:":{"name":"-initWithFrame:","abstract":"<p>Designated initializer </p>","parent_name":"MBTapToFocusSubview"},"Classes/MBTapToFocusSubview.html#/c:objc(cs)MBTapToFocusSubview(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MBTapToFocusSubview"},"Classes/MBTapToFocusSubview.html#/c:objc(cs)MBTapToFocusSubview(im)willFocusAtPoint:":{"name":"-willFocusAtPoint:","abstract":"<p>Undocumented</p>","parent_name":"MBTapToFocusSubview"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The surname of the Swiss Passport owner.</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)givenName":{"name":"givenName","abstract":"<p>The name of the Swiss Passport owner.</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Swiss Passport owner</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>Raw date of issue, as written on the passport</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>Date of issue in NSDate object</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>Raw date of birth, as written on the passport</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>Date of birth in NSDate object</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>Raw date of expiry, as written on the passport</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>Date of expiry in NSDate object</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)authority":{"name":"authority","abstract":"<p>Issuing authority of the Passport</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)passportNumber":{"name":"passportNumber","abstract":"<p>Number of the Passport</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Swiss Passport owner</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizerResult.html#/c:objc(cs)MBSwitzerlandPassportRecognizerResult(py)height":{"name":"height","abstract":"<p>The height of the Swiss Passport owner</p>","parent_name":"MBSwitzerlandPassportRecognizerResult"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)result":{"name":"result","abstract":"<p>Swiss Passport recognizer result</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s surname should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractGivenName":{"name":"extractGivenName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of birth should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractAuthority":{"name":"extractAuthority","abstract":"<p>Defines if authority should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractPassportNumber":{"name":"extractPassportNumber","abstract":"<p>Defines if passport number should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandPassportRecognizer.html#/c:objc(cs)MBSwitzerlandPassportRecognizer(py)extractHeight":{"name":"extractHeight","abstract":"<p>Defines if height should be extracted from Swiss Passport</p>","parent_name":"MBSwitzerlandPassportRecognizer"},"Classes/MBSwitzerlandIdFrontRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwitzerlandIdFrontRecognizerResult"},"Classes/MBSwitzerlandIdFrontRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizerResult(py)givenName":{"name":"givenName","abstract":"<p>The first name of the Swiss ID owner.</p>","parent_name":"MBSwitzerlandIdFrontRecognizerResult"},"Classes/MBSwitzerlandIdFrontRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The last name of the Swiss ID owner.</p>","parent_name":"MBSwitzerlandIdFrontRecognizerResult"},"Classes/MBSwitzerlandIdFrontRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of the Swiss ID owner in dd.MM.yyyy format.</p>","parent_name":"MBSwitzerlandIdFrontRecognizerResult"},"Classes/MBSwitzerlandIdFrontRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Swiss ID owner.</p>","parent_name":"MBSwitzerlandIdFrontRecognizerResult"},"Classes/MBSwitzerlandIdFrontRecognizer.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwitzerlandIdFrontRecognizer"},"Classes/MBSwitzerlandIdFrontRecognizer.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Swiss ID Front recognizer result</p>","parent_name":"MBSwitzerlandIdFrontRecognizer"},"Classes/MBSwitzerlandIdFrontRecognizer.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizer(py)extracGivenName":{"name":"extracGivenName","abstract":"<p>Defines if owner&rsquo;s first name should be extracted from Swiss ID</p>","parent_name":"MBSwitzerlandIdFrontRecognizer"},"Classes/MBSwitzerlandIdFrontRecognizer.html#/c:objc(cs)MBSwitzerlandIdFrontRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s last name should be extracted from Swiss ID</p>","parent_name":"MBSwitzerlandIdFrontRecognizer"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)placeOfOrigin":{"name":"placeOfOrigin","abstract":"<p>The address of the Swiss ID owner.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)height":{"name":"height","abstract":"<p>The address of the Swiss ID owner.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Swiss ID.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)rawDocumentDateOfIssue":{"name":"rawDocumentDateOfIssue","abstract":"<p>The document date of issue of the Swiss ID in DD.MM.yyyy format.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The document date of issue of the Swiss ID.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)rawDocumentDateOfExpiry":{"name":"rawDocumentDateOfExpiry","abstract":"<p>The document date of issue of the Swiss ID in DD.MM.yyyy format.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)nonMrzDateOfExpiry":{"name":"nonMrzDateOfExpiry","abstract":"<p>The document date of issue of the Swiss ID.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizerResult.html#/c:objc(cs)MBSwitzerlandIdBackRecognizerResult(py)nonMrzSex":{"name":"nonMrzSex","abstract":"<p>The address of the Swiss ID owner.</p>","parent_name":"MBSwitzerlandIdBackRecognizerResult"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Swiss ID Back recognizer result</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)extractIssuingAuthority":{"name":"extractIssuingAuthority","abstract":"<p>Defines if issuing authority of Swiss ID should be extracted</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue of Swiss ID should be extracted</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry of Swiss ID should be extracted</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)extractPlaceOfOrigin":{"name":"extractPlaceOfOrigin","abstract":"<p>Defines if place of origin of Swiss ID holder should be extracted</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)extractHeight":{"name":"extractHeight","abstract":"<p>Defines if height of Swiss ID holder should be extracted</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwitzerlandIdBackRecognizer.html#/c:objc(cs)MBSwitzerlandIdBackRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Swiss ID folder should be extracted</p>","parent_name":"MBSwitzerlandIdBackRecognizer"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The Surname of the Sweden DL owner.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The Name of the Sweden DL owner.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The Date Of Birth of the Sweden DL owner.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The Date Of Issue of the Sweden DL.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The Date Of Expiry of the Sweden DL.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)issuingAgency":{"name":"issuingAgency","abstract":"<p>The Issuing Agency of the Sweden DL.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)referenceNumber":{"name":"referenceNumber","abstract":"<p>The Reference Number of the Sweden DL.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)licenceCategories":{"name":"licenceCategories","abstract":"<p>The Licence Categories of the Sweden DL.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizerResult.html#/c:objc(cs)MBSwedenDlFrontRecognizerResult(py)licenceNumber":{"name":"licenceNumber","abstract":"<p>The Licence Numer of the Sweden DL.</p>","parent_name":"MBSwedenDlFrontRecognizerResult"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)result":{"name":"result","abstract":"<p>Sweden Dl Front recognizer result</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s surname should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractIssuingAgency":{"name":"extractIssuingAgency","abstract":"<p>Defines if issuing agency should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractReferenceNumber":{"name":"extractReferenceNumber","abstract":"<p>Defines if reference number should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSwedenDlFrontRecognizer.html#/c:objc(cs)MBSwedenDlFrontRecognizer(py)extractLicenceCategories":{"name":"extractLicenceCategories","abstract":"<p>Defines iflicence categories should be extracted from Sweden DL</p>","parent_name":"MBSwedenDlFrontRecognizer"},"Classes/MBSuccessFrameGrabberRecognizerResult.html#/c:objc(cs)MBSuccessFrameGrabberRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSuccessFrameGrabberRecognizerResult"},"Classes/MBSuccessFrameGrabberRecognizerResult.html#/c:objc(cs)MBSuccessFrameGrabberRecognizerResult(py)successFrame":{"name":"successFrame","abstract":"<p>Success frame PPImage of successful frame</p>","parent_name":"MBSuccessFrameGrabberRecognizerResult"},"Classes/MBSuccessFrameGrabberRecognizer.html#/c:objc(cs)MBSuccessFrameGrabberRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSuccessFrameGrabberRecognizer"},"Classes/MBSuccessFrameGrabberRecognizer.html#/c:objc(cs)MBSuccessFrameGrabberRecognizer(im)initWithRecognizer:":{"name":"-initWithRecognizer:","abstract":"<p>Undocumented</p>","parent_name":"MBSuccessFrameGrabberRecognizer"},"Classes/MBSuccessFrameGrabberRecognizer.html#/c:objc(cs)MBSuccessFrameGrabberRecognizer(py)result":{"name":"result","abstract":"<p>SuccessFrameGrabber recognizer results</p>","parent_name":"MBSuccessFrameGrabberRecognizer"},"Classes/MBSuccessFrameGrabberRecognizer.html#/c:objc(cs)MBSuccessFrameGrabberRecognizer(py)slaveRecognizer":{"name":"slaveRecognizer","abstract":"<p>Slave recognizer that is wrapped with SuccessFrameGrabber</p>","parent_name":"MBSuccessFrameGrabberRecognizer"},"Classes/MBSubview.html#/c:objc(cs)MBSubview(py)delegate":{"name":"delegate","abstract":"<p>Delegate which is notified on Overlay events</p>","parent_name":"MBSubview"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of the Slovenian ID owner in dd.MM.yyyy format.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>The date of expiry of the Slovenian ID owner in dd.MM.yyyy format.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizerResult.html#/c:objc(cs)MBSloveniaIdFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdFrontRecognizerResult"},"Classes/MBSloveniaIdFrontRecognizer.html#/c:objc(cs)MBSloveniaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSloveniaIdFrontRecognizer"},"Classes/MBSloveniaIdFrontRecognizer.html#/c:objc(cs)MBSloveniaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Slovenian ID Front recognizer result</p>","parent_name":"MBSloveniaIdFrontRecognizer"},"Classes/MBSloveniaIdFrontRecognizer.html#/c:objc(cs)MBSloveniaIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Slovenian ID owner should be extracted</p>","parent_name":"MBSloveniaIdFrontRecognizer"},"Classes/MBSloveniaIdFrontRecognizer.html#/c:objc(cs)MBSloveniaIdFrontRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if nationality of Slovenian ID owner should be extracted</p>","parent_name":"MBSloveniaIdFrontRecognizer"},"Classes/MBSloveniaIdFrontRecognizer.html#/c:objc(cs)MBSloveniaIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of birth of Slovenian ID owner should be extracted</p>","parent_name":"MBSloveniaIdFrontRecognizer"},"Classes/MBSloveniaIdFrontRecognizer.html#/c:objc(cs)MBSloveniaIdFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry of Slovenian ID should be extracted</p>","parent_name":"MBSloveniaIdFrontRecognizer"},"Classes/MBSloveniaIdBackRecognizerResult.html#/c:objc(cs)MBSloveniaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSloveniaIdBackRecognizerResult"},"Classes/MBSloveniaIdBackRecognizerResult.html#/c:objc(cs)MBSloveniaIdBackRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Slovenian ID owner.</p>","parent_name":"MBSloveniaIdBackRecognizerResult"},"Classes/MBSloveniaIdBackRecognizerResult.html#/c:objc(cs)MBSloveniaIdBackRecognizerResult(py)authority":{"name":"authority","abstract":"<p>The authority of the Slovenian ID.</p>","parent_name":"MBSloveniaIdBackRecognizerResult"},"Classes/MBSloveniaIdBackRecognizerResult.html#/c:objc(cs)MBSloveniaIdBackRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>Date of issue of the Slovenian ID in dd.MM.yyyy format.</p>","parent_name":"MBSloveniaIdBackRecognizerResult"},"Classes/MBSloveniaIdBackRecognizerResult.html#/c:objc(cs)MBSloveniaIdBackRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>Date of issue of the Slovenian ID.</p>","parent_name":"MBSloveniaIdBackRecognizerResult"},"Classes/MBSloveniaIdBackRecognizer.html#/c:objc(cs)MBSloveniaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSloveniaIdBackRecognizer"},"Classes/MBSloveniaIdBackRecognizer.html#/c:objc(cs)MBSloveniaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Slovenian ID Back recognizer result</p>","parent_name":"MBSloveniaIdBackRecognizer"},"Classes/MBSloveniaIdBackRecognizer.html#/c:objc(cs)MBSloveniaIdBackRecognizer(py)extractAuthority":{"name":"extractAuthority","abstract":"<p>Defines if issuing authority of Slovenian ID should be extracted</p>","parent_name":"MBSloveniaIdBackRecognizer"},"Classes/MBSloveniaIdBackRecognizer.html#/c:objc(cs)MBSloveniaIdBackRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue of Slovenian ID should be extracted</p>","parent_name":"MBSloveniaIdBackRecognizer"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Slovenian ID owner.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Slovenian ID owner.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The identity card number of Slovenian ID.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Slovenian ID owner.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)citizenship":{"name":"citizenship","abstract":"<p>The nationality of the Slovenian ID owner.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Slovenian ID owner</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of Slovenian ID owner</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Slovenian ID owner.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)personalIdentificationNumber":{"name":"personalIdentificationNumber","abstract":"<p>The PIN of the Slovenian ID owner.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Slovenian ID.</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizerResult.html#/c:objc(cs)MBSloveniaCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of Slovenian ID owner</p>","parent_name":"MBSloveniaCombinedRecognizerResult"},"Classes/MBSloveniaCombinedRecognizer.html#/c:objc(cs)MBSloveniaCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSloveniaCombinedRecognizer"},"Classes/MBSloveniaCombinedRecognizer.html#/c:objc(cs)MBSloveniaCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Slovenian ID Combined recognizer result</p>","parent_name":"MBSloveniaCombinedRecognizer"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of the Slovakian ID owner in dd.MM.yyyy format.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>The date of expiry of the Slovakian ID in dd.MM.yyyy format.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of the Slovakian ID.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>The date of issue of the Slovakian ID in dd.MM.yyyy format.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of the Slovakian ID.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)issuedBy":{"name":"issuedBy","abstract":"<p>The issuing authority of the ID.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)personalNumber":{"name":"personalNumber","abstract":"<p>The personal number of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizerResult.html#/c:objc(cs)MBSlovakiaIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Slovakian ID.</p>","parent_name":"MBSlovakiaIdFrontRecognizerResult"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Slovak ID Front recognizer result</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if ID&rsquo;s date of expiry should be extracted</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if ID&rsquo;s date of issue should be extracted</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractIssuedBy":{"name":"extractIssuedBy","abstract":"<p>Defines if issuing authority should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdFrontRecognizer.html#/c:objc(cs)MBSlovakiaIdFrontRecognizer(py)extractDocumentNumber":{"name":"extractDocumentNumber","abstract":"<p>Defines if issuing document number should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdFrontRecognizer"},"Classes/MBSlovakiaIdBackRecognizerResult.html#/c:objc(cs)MBSlovakiaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSlovakiaIdBackRecognizerResult"},"Classes/MBSlovakiaIdBackRecognizerResult.html#/c:objc(cs)MBSlovakiaIdBackRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdBackRecognizerResult"},"Classes/MBSlovakiaIdBackRecognizerResult.html#/c:objc(cs)MBSlovakiaIdBackRecognizerResult(py)surnameAtBirth":{"name":"surnameAtBirth","abstract":"<p>The surname at birth of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdBackRecognizerResult"},"Classes/MBSlovakiaIdBackRecognizerResult.html#/c:objc(cs)MBSlovakiaIdBackRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdBackRecognizerResult"},"Classes/MBSlovakiaIdBackRecognizerResult.html#/c:objc(cs)MBSlovakiaIdBackRecognizerResult(py)specialRemarks":{"name":"specialRemarks","abstract":"<p>The special remarks of the Slovakian ID owner.</p>","parent_name":"MBSlovakiaIdBackRecognizerResult"},"Classes/MBSlovakiaIdBackRecognizer.html#/c:objc(cs)MBSlovakiaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSlovakiaIdBackRecognizer"},"Classes/MBSlovakiaIdBackRecognizer.html#/c:objc(cs)MBSlovakiaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Slovak ID Back recognizer result</p>","parent_name":"MBSlovakiaIdBackRecognizer"},"Classes/MBSlovakiaIdBackRecognizer.html#/c:objc(cs)MBSlovakiaIdBackRecognizer(py)extractSurnameAtBirth":{"name":"extractSurnameAtBirth","abstract":"<p>Defines if owner&rsquo;s surname at birth should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdBackRecognizer"},"Classes/MBSlovakiaIdBackRecognizer.html#/c:objc(cs)MBSlovakiaIdBackRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdBackRecognizer"},"Classes/MBSlovakiaIdBackRecognizer.html#/c:objc(cs)MBSlovakiaIdBackRecognizer(py)extractSpecialRemarks":{"name":"extractSpecialRemarks","abstract":"<p>Defines if owner&rsquo;s special remarks should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaIdBackRecognizer"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The identity card number of Slovak ID.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)personalIdentificationNumber":{"name":"personalIdentificationNumber","abstract":"<p>The PIN of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Slovak ID owner</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of Slovak ID owner</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Slovak ID.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of Slovak ID owner</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)surnameAtBirth":{"name":"surnameAtBirth","abstract":"<p>The surname at birth of Slovak ID.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)specialRemarks":{"name":"specialRemarks","abstract":"<p>The special remarks of Slovak ID.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizerResult.html#/c:objc(cs)MBSlovakiaCombinedRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Slovak ID owner.</p>","parent_name":"MBSlovakiaCombinedRecognizerResult"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Slovak ID Combined recognizer result</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if ID&rsquo;s date of expiry should be extracted</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if ID&rsquo;s date of issue should be extracted</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractIssuedBy":{"name":"extractIssuedBy","abstract":"<p>Defines if issuing authority should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractDocumentNumber":{"name":"extractDocumentNumber","abstract":"<p>Defines if issuing document number should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractSurnameAtBirth":{"name":"extractSurnameAtBirth","abstract":"<p>Defines if owner&rsquo;s surname at birth should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSlovakiaCombinedRecognizer.html#/c:objc(cs)MBSlovakiaCombinedRecognizer(py)extractSpecialRemarks":{"name":"extractSpecialRemarks","abstract":"<p>Defines if owner&rsquo;s special remarks should be extracted from Slovakian ID</p>","parent_name":"MBSlovakiaCombinedRecognizer"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(py)cardNumber":{"name":"cardNumber","abstract":"<p>The identity card number of the Singapore ID.</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The name of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(py)race":{"name":"race","abstract":"<p>The race of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizerResult.html#/c:objc(cs)MBSingaporeIdFrontRecognizerResult(py)countryOfBirth":{"name":"countryOfBirth","abstract":"<p>The country of birth of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdFrontRecognizerResult"},"Classes/MBSingaporeIdFrontRecognizer.html#/c:objc(cs)MBSingaporeIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSingaporeIdFrontRecognizer"},"Classes/MBSingaporeIdFrontRecognizer.html#/c:objc(cs)MBSingaporeIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Singapore ID Front recognizer result</p>","parent_name":"MBSingaporeIdFrontRecognizer"},"Classes/MBSingaporeIdFrontRecognizer.html#/c:objc(cs)MBSingaporeIdFrontRecognizer(py)extractRace":{"name":"extractRace","abstract":"<p>Defines if race of Singapore ID owner should be extracted</p>","parent_name":"MBSingaporeIdFrontRecognizer"},"Classes/MBSingaporeIdFrontRecognizer.html#/c:objc(cs)MBSingaporeIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of birth of Singapore ID owner should be extracted</p>","parent_name":"MBSingaporeIdFrontRecognizer"},"Classes/MBSingaporeIdFrontRecognizer.html#/c:objc(cs)MBSingaporeIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Singapore ID owner should be extracted</p>","parent_name":"MBSingaporeIdFrontRecognizer"},"Classes/MBSingaporeIdFrontRecognizer.html#/c:objc(cs)MBSingaporeIdFrontRecognizer(py)extractCountryOfBirth":{"name":"extractCountryOfBirth","abstract":"<p>Defines if country of birth of Singapore ID owner should be extracted</p>","parent_name":"MBSingaporeIdFrontRecognizer"},"Classes/MBSingaporeIdBackRecognizerResult.html#/c:objc(cs)MBSingaporeIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSingaporeIdBackRecognizerResult"},"Classes/MBSingaporeIdBackRecognizerResult.html#/c:objc(cs)MBSingaporeIdBackRecognizerResult(py)cardNumber":{"name":"cardNumber","abstract":"<p>The identity card number of the Singapore ID.</p>","parent_name":"MBSingaporeIdBackRecognizerResult"},"Classes/MBSingaporeIdBackRecognizerResult.html#/c:objc(cs)MBSingaporeIdBackRecognizerResult(py)bloodGroup":{"name":"bloodGroup","abstract":"<p>The blood group of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdBackRecognizerResult"},"Classes/MBSingaporeIdBackRecognizerResult.html#/c:objc(cs)MBSingaporeIdBackRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>The date of issue of the Singapore ID in dd-MM-yyyy format.</p>","parent_name":"MBSingaporeIdBackRecognizerResult"},"Classes/MBSingaporeIdBackRecognizerResult.html#/c:objc(cs)MBSingaporeIdBackRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of the Singapore ID.</p>","parent_name":"MBSingaporeIdBackRecognizerResult"},"Classes/MBSingaporeIdBackRecognizerResult.html#/c:objc(cs)MBSingaporeIdBackRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Singapore ID owner.</p>","parent_name":"MBSingaporeIdBackRecognizerResult"},"Classes/MBSingaporeIdBackRecognizer.html#/c:objc(cs)MBSingaporeIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSingaporeIdBackRecognizer"},"Classes/MBSingaporeIdBackRecognizer.html#/c:objc(cs)MBSingaporeIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Singapore ID Back recognizer result</p>","parent_name":"MBSingaporeIdBackRecognizer"},"Classes/MBSingaporeIdBackRecognizer.html#/c:objc(cs)MBSingaporeIdBackRecognizer(py)extractBloodGroup":{"name":"extractBloodGroup","abstract":"<p>Defines if blood group of Singapore ID owner should be extracted</p>","parent_name":"MBSingaporeIdBackRecognizer"},"Classes/MBSingaporeIdBackRecognizer.html#/c:objc(cs)MBSingaporeIdBackRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue of Singapore ID owner should be extracted</p>","parent_name":"MBSingaporeIdBackRecognizer"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)name":{"name":"name","abstract":"<p>The first name of the Singapore ID owner.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)address":{"name":"address","abstract":"<p>The name of the Singapore ID owner.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)bloodGroup":{"name":"bloodGroup","abstract":"<p>The blood group of the Singapore ID owner.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Singapore ID owner.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)countryOfBirth":{"name":"countryOfBirth","abstract":"<p>The country of birth of the Singapore ID owner.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)race":{"name":"race","abstract":"<p>The race of the Singapore ID owner.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)cardNumber":{"name":"cardNumber","abstract":"<p>The identity card number of Singapore ID.</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Singapore ID owner</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizerResult.html#/c:objc(cs)MBSingaporeCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of Singapore ID owner</p>","parent_name":"MBSingaporeCombinedRecognizerResult"},"Classes/MBSingaporeCombinedRecognizer.html#/c:objc(cs)MBSingaporeCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSingaporeCombinedRecognizer"},"Classes/MBSingaporeCombinedRecognizer.html#/c:objc(cs)MBSingaporeCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Singapore ID Combined recognizer result</p>","parent_name":"MBSingaporeCombinedRecognizer"},"Classes/MBSimNumberRecognizerResult.html#/c:objc(cs)MBSimNumberRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSimNumberRecognizerResult"},"Classes/MBSimNumberRecognizerResult.html#/c:objc(cs)MBSimNumberRecognizerResult(py)simNumber":{"name":"simNumber","abstract":"<p>Returns the recognized SIM number from barcode or empty string if recognition failed.</p>","parent_name":"MBSimNumberRecognizerResult"},"Classes/MBSimNumberRecognizer.html#/c:objc(cs)MBSimNumberRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSimNumberRecognizer"},"Classes/MBSimNumberRecognizer.html#/c:objc(cs)MBSimNumberRecognizer(py)result":{"name":"result","abstract":"<p>Sim number recognizer results</p>","parent_name":"MBSimNumberRecognizer"},"Classes/MBSerbiaIdFrontRecognizerResult.html#/c:objc(cs)MBSerbiaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSerbiaIdFrontRecognizerResult"},"Classes/MBSerbiaIdFrontRecognizerResult.html#/c:objc(cs)MBSerbiaIdFrontRecognizerResult(py)issuingDate":{"name":"issuingDate","abstract":"<p>The issuing date of the Serbian ID.</p>","parent_name":"MBSerbiaIdFrontRecognizerResult"},"Classes/MBSerbiaIdFrontRecognizerResult.html#/c:objc(cs)MBSerbiaIdFrontRecognizerResult(py)validUntil":{"name":"validUntil","abstract":"<p>The valid until date of the Serbian ID.</p>","parent_name":"MBSerbiaIdFrontRecognizerResult"},"Classes/MBSerbiaIdFrontRecognizerResult.html#/c:objc(cs)MBSerbiaIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of Serbian ID owner</p>","parent_name":"MBSerbiaIdFrontRecognizerResult"},"Classes/MBSerbiaIdFrontRecognizer.html#/c:objc(cs)MBSerbiaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSerbiaIdFrontRecognizer"},"Classes/MBSerbiaIdFrontRecognizer.html#/c:objc(cs)MBSerbiaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Serbian ID Front recognizer result</p>","parent_name":"MBSerbiaIdFrontRecognizer"},"Classes/MBSerbiaIdFrontRecognizer.html#/c:objc(cs)MBSerbiaIdFrontRecognizer(py)extractIssuingDate":{"name":"extractIssuingDate","abstract":"<p>Defines if issuing date of Serbian ID should be extracted</p>","parent_name":"MBSerbiaIdFrontRecognizer"},"Classes/MBSerbiaIdFrontRecognizer.html#/c:objc(cs)MBSerbiaIdFrontRecognizer(py)extractValidUntilDate":{"name":"extractValidUntilDate","abstract":"<p>Defines if valid until date of Serbian ID should be extracted</p>","parent_name":"MBSerbiaIdFrontRecognizer"},"Classes/MBSerbiaIdBackRecognizerResult.html#/c:objc(cs)MBSerbiaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSerbiaIdBackRecognizerResult"},"Classes/MBSerbiaIdBackRecognizer.html#/c:objc(cs)MBSerbiaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSerbiaIdBackRecognizer"},"Classes/MBSerbiaIdBackRecognizer.html#/c:objc(cs)MBSerbiaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Serbian ID Back recognizer result</p>","parent_name":"MBSerbiaIdBackRecognizer"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The identity card number of Serbian ID.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of Serbian ID owner</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of Serbian ID owner</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)jmbg":{"name":"jmbg","abstract":"<p>The JMBG of Serbian ID owner.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Serbian ID owner.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Serbian ID owner.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Serbian ID owner</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Serbian ID owner.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Serbian ID.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizerResult.html#/c:objc(cs)MBSerbiaCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Serbian ID owner.</p>","parent_name":"MBSerbiaCombinedRecognizerResult"},"Classes/MBSerbiaCombinedRecognizer.html#/c:objc(cs)MBSerbiaCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBSerbiaCombinedRecognizer"},"Classes/MBSerbiaCombinedRecognizer.html#/c:objc(cs)MBSerbiaCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Serbian ID Combined recognizer result</p>","parent_name":"MBSerbiaCombinedRecognizer"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(im)initWithIdentifier:parser:":{"name":"-initWithIdentifier:parser:","abstract":"<p>Designated initializer, defines the unique identifier for this canned element, and Parser factory for it.</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)identifier":{"name":"identifier","abstract":"<p>Unique name of the element</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)parser":{"name":"parser","abstract":"<p>Parser object which is reponsible scanning the text.</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)localizedTitle":{"name":"localizedTitle","abstract":"<p>Localized title (used in the Pivot control)</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)localizedTooltip":{"name":"localizedTooltip","abstract":"<p>Localized tooltip (used in the tooltip label above the viewfinder)</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)keyboardType":{"name":"keyboardType","abstract":"<p>Keyboard type used when editing</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)localizedTextfieldText":{"name":"localizedTextfieldText","abstract":"<p>Localized initial UITextField text (used in field segment scanning text fields)</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)scanned":{"name":"scanned","abstract":"<p>YES if the value was scanned, NO otherwise.","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)edited":{"name":"edited","abstract":"<p>YES if the value was manually edited, NO otherwise.","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)value":{"name":"value","abstract":"<p>Actual value for this element</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)scanningRegionWidth":{"name":"scanningRegionWidth","abstract":"<p>Width of scanning region used in UI. Values are between 0.0 and 1.0 where 1.0 is whole screen width and 0.5 is half width.</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)scanningRegionHeight":{"name":"scanningRegionHeight","abstract":"<p>Height of scanning region used in UI. Values are between 0.0 and 1.0 where 1.0 is whole screen height and 0.5 is half height.</p>","parent_name":"MBScanElement"},"Classes/MBScanElement.html#/c:objc(cs)MBScanElement(py)successfulScanImage":{"name":"successfulScanImage","abstract":"<p>Image of the scanned element.</p>","parent_name":"MBScanElement"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>Last name</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>First name</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)cardNumber":{"name":"cardNumber","abstract":"<p>Card number</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)idSeries":{"name":"idSeries","abstract":"<p>ID series</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)cnp":{"name":"cnp","abstract":"<p>CNP</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)parentNames":{"name":"parentNames","abstract":"<p>Parent names - missing if nationality exists</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)nonMRZNationality":{"name":"nonMRZNationality","abstract":"<p>Nationality - missing if parent names exists</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>Place of birth</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)address":{"name":"address","abstract":"<p>Address</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)issuedBy":{"name":"issuedBy","abstract":"<p>Issued by</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)nonMRZSex":{"name":"nonMRZSex","abstract":"<p>Sex</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)validFrom":{"name":"validFrom","abstract":"<p>Valid from</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)rawValidFrom":{"name":"rawValidFrom","abstract":"<p>Valid from date in format DD.MM.YYYY.</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)validUntil":{"name":"validUntil","abstract":"<p>Valid until</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizerResult.html#/c:objc(cs)MBRomaniaIdFrontRecognizerResult(py)rawValidUntil":{"name":"rawValidUntil","abstract":"<p>Valid until date in format DD.MM.YYYY.</p>","parent_name":"MBRomaniaIdFrontRecognizerResult"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Romanian ID Front recognizer result</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractFirstName":{"name":"extractFirstName","abstract":"<p>Defines if owner&rsquo;s first name should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractLastName":{"name":"extractLastName","abstract":"<p>Defines if owner&rsquo;s last name should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if the place of birth should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if the owner&rsquo;s address should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractIssuedBy":{"name":"extractIssuedBy","abstract":"<p>Defines if the issued ny data should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractValidFrom":{"name":"extractValidFrom","abstract":"<p>Defines if the valid from date should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractValidUntil":{"name":"extractValidUntil","abstract":"<p>Defines if the valid until date should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRomaniaIdFrontRecognizer.html#/c:objc(cs)MBRomaniaIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if the owner&rsquo;s sex information should be extracted from the ID</p>","parent_name":"MBRomaniaIdFrontRecognizer"},"Classes/MBRegexParserResult.html#/c:objc(cs)MBRegexParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRegexParserResult"},"Classes/MBRegexParserResult.html#/c:objc(cs)MBRegexParserResult(py)parsedString":{"name":"parsedString","abstract":"<p>Returns string containing parsed OCR result according to given regular expression.</p>","parent_name":"MBRegexParserResult"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(im)initWithRegex:":{"name":"-initWithRegex:","abstract":"<p>Initializes the regex parser</p>","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(py)result":{"name":"result","abstract":"<p>Regex parser result</p>","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(py)regex":{"name":"regex","abstract":"<p>Defines regex that will be used to parse OCR data. Note that not all java regex features","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(py)useSieve":{"name":"useSieve","abstract":"<p>Enable the usage of algorithm for combining consecutive OCR results between video frames","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(py)startWithWhitespace":{"name":"startWithWhitespace","abstract":"<p>If set to YES, regex will not be matched if there is no whitespace before matched string.","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(py)endWithWhitespace":{"name":"endWithWhitespace","abstract":"<p>If set to YES, regex will not be matched if there is no whitespace after matched string.","parent_name":"MBRegexParser"},"Classes/MBRegexParser.html#/c:objc(cs)MBRegexParser(py)ocrEngineOptions":{"name":"ocrEngineOptions","abstract":"<p>Sets the OCR engine options used in Regex OCR parser.","parent_name":"MBRegexParser"},"Classes/MBRecognizerRunnerViewControllerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerViewControllerMetadataDelegates(py)debugRecognizerRunnerViewControllerDelegate":{"name":"debugRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerViewControllerMetadataDelegates"},"Classes/MBRecognizerRunnerViewControllerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerViewControllerMetadataDelegates(py)detectionRecognizerRunnerViewControllerDelegate":{"name":"detectionRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerViewControllerMetadataDelegates"},"Classes/MBRecognizerRunnerViewControllerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerViewControllerMetadataDelegates(py)ocrRecognizerRunnerViewControllerDelegate":{"name":"ocrRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerViewControllerMetadataDelegates"},"Classes/MBRecognizerRunnerViewControllerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerViewControllerMetadataDelegates(py)glareRecognizerRunnerViewControllerDelegate":{"name":"glareRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerViewControllerMetadataDelegates"},"Classes/MBRecognizerRunnerViewControllerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerViewControllerMetadataDelegates(py)firstSideFinishedRecognizerRunnerViewControllerDelegate":{"name":"firstSideFinishedRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerViewControllerMetadataDelegates"},"Classes/MBRecognizerRunnerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerMetadataDelegates(py)debugRecognizerRunnerDelegate":{"name":"debugRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerMetadataDelegates"},"Classes/MBRecognizerRunnerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerMetadataDelegates(py)detectionRecognizerRunnerDelegate":{"name":"detectionRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerMetadataDelegates"},"Classes/MBRecognizerRunnerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerMetadataDelegates(py)ocrRecognizerRunnerDelegate":{"name":"ocrRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerMetadataDelegates"},"Classes/MBRecognizerRunnerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerMetadataDelegates(py)glareRecognizerRunnerDelegate":{"name":"glareRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerMetadataDelegates"},"Classes/MBRecognizerRunnerMetadataDelegates.html#/c:objc(cs)MBRecognizerRunnerMetadataDelegates(py)firstSideFinishedRecognizerRunnerDelegate":{"name":"firstSideFinishedRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunnerMetadataDelegates"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(py)metadataDelegates":{"name":"metadataDelegates","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(py)scanningRecognizerRunnerDelegate":{"name":"scanningRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(py)imageProcessingRecognizerRunnerDelegate":{"name":"imageProcessingRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(py)stringProcessingRecognizerRunnerDelegate":{"name":"stringProcessingRecognizerRunnerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(py)coordinator":{"name":"coordinator","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)initWithRecognizerCollection:":{"name":"-initWithRecognizerCollection:","abstract":"<p>Initializes the recognizer runner</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)resetState":{"name":"-resetState","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)resetState:":{"name":"-resetState:","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)cancelProcessing":{"name":"-cancelProcessing","abstract":"<p>Cancels all dispatched, but not yet processed image processing requests issued with processImage.","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)processImage:":{"name":"-processImage:","abstract":"<p>Processes a MBImage object synchronously using current settings.","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)processString:":{"name":"-processString:","abstract":"<p>Processes a NSString object synchronously using current settings.","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerRunner.html#/c:objc(cs)MBRecognizerRunner(im)reconfigureRecognizers:":{"name":"-reconfigureRecognizers:","abstract":"<p>Method which is used to apply MBSettings object given by currentSettings property</p>","parent_name":"MBRecognizerRunner"},"Classes/MBRecognizerResult.html#/c:objc(cs)MBRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerResult"},"Classes/MBRecognizerResult.html#/c:objc(cs)MBRecognizerResult(py)resultState":{"name":"resultState","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerResult"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(im)initWithRecognizers:":{"name":"-initWithRecognizers:","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(py)recognizerList":{"name":"recognizerList","abstract":"<p>Contains MBRecognizer objects - each individual recognizer.","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(py)allowMultipleResults":{"name":"allowMultipleResults","abstract":"<p>If NO, recognizer chain will stop when finds first valid scan results and will return just it.","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(py)partialRecognitionTimeout":{"name":"partialRecognitionTimeout","abstract":"<p>Timeout interval in which the partial scanning results in PhotoPay will be returned to the user.","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(py)recognitionMode":{"name":"recognitionMode","abstract":"<p>Recognition mode.</p>","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizerCollection.html#/c:objc(cs)MBRecognizerCollection(py)frameQualityEstimationMode":{"name":"frameQualityEstimationMode","abstract":"<p>Frame quality estimation mode. If frame quality estimation is on, some video frames will be skipped, if","parent_name":"MBRecognizerCollection"},"Classes/MBRecognizer.html#/c:objc(cs)MBRecognizer(py)enabled":{"name":"enabled","abstract":"<p>Property which determines if the recognizer is enabled</p>","parent_name":"MBRecognizer"},"Classes/MBRecognizer.html#/c:objc(cs)MBRecognizer(py)baseResult":{"name":"baseResult","abstract":"<p>Base recognizer result.</p>","parent_name":"MBRecognizer"},"Classes/MBRecognizer.html#/c:objc(cs)MBRecognizer(im)getOptimalHudOrientation":{"name":"-getOptimalHudOrientation","abstract":"<p>Undocumented</p>","parent_name":"MBRecognizer"},"Classes/MBRawParserResult.html#/c:objc(cs)MBRawParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRawParserResult"},"Classes/MBRawParserResult.html#/c:objc(cs)MBRawParserResult(py)rawText":{"name":"rawText","abstract":"<p>Extracted date string.</p>","parent_name":"MBRawParserResult"},"Classes/MBRawParser.html#/c:objc(cs)MBRawParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBRawParser"},"Classes/MBRawParser.html#/c:objc(cs)MBRawParser(py)result":{"name":"result","abstract":"<p>License plates parser result</p>","parent_name":"MBRawParser"},"Classes/MBRawParser.html#/c:objc(cs)MBRawParser(py)useSieve":{"name":"useSieve","abstract":"<p>Enable the usage of algorithm for combining consecutive OCR results between video frames","parent_name":"MBRawParser"},"Classes/MBRawParser.html#/c:objc(cs)MBRawParser(py)ocrEngineOptions":{"name":"ocrEngineOptions","abstract":"<p>Sets the OCR engine options used in Regex OCR parser.","parent_name":"MBRawParser"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(py)upperLeft":{"name":"upperLeft","abstract":"<p>Upper left point</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(py)upperRight":{"name":"upperRight","abstract":"<p>Upper right point</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(py)lowerLeft":{"name":"lowerLeft","abstract":"<p>Lower left point</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(py)lowerRight":{"name":"lowerRight","abstract":"<p>Lower right point</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(im)initWithUpperLeft:upperRight:lowerLeft:lowerRight:":{"name":"-initWithUpperLeft:upperRight:lowerLeft:lowerRight:","abstract":"<p>Designated initializer which initializes all four corners of the quadrangle</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(im)toPointsArray":{"name":"-toPointsArray","abstract":"<p>Returns points of the quadrangle in array in the following order:</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(im)quadrangleWithTransformation:":{"name":"-quadrangleWithTransformation:","abstract":"<p>Creates new quadrangle from this quadrangle, transformed by specified affine transformation.</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadrangle.html#/c:objc(cs)MBQuadrangle(im)center":{"name":"-center","abstract":"<p>Returns the center point of the Quadrangle</p>","parent_name":"MBQuadrangle"},"Classes/MBQuadWithSizeDetectorResult.html#/c:objc(cs)MBQuadWithSizeDetectorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBQuadWithSizeDetectorResult"},"Classes/MBQuadWithSizeDetectorResult.html#/c:objc(cs)MBQuadWithSizeDetectorResult(py)physicalHeightInInches":{"name":"physicalHeightInInches","abstract":"<p>Returns the physical height of the detected MBQuadrangle in inches.</p>","parent_name":"MBQuadWithSizeDetectorResult"},"Classes/MBQuadWithSizeDetector.html#/c:objc(cs)MBQuadWithSizeDetector(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBQuadWithSizeDetector"},"Classes/MBQuadWithSizeDetector.html#/c:objc(cs)MBQuadWithSizeDetector(py)quadWithSizeResult":{"name":"quadWithSizeResult","abstract":"<p>Quad with size detector result</p>","parent_name":"MBQuadWithSizeDetector"},"Classes/MBQuadDetectorResult.html#/c:objc(cs)MBQuadDetectorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBQuadDetectorResult"},"Classes/MBQuadDetectorResult.html#/c:objc(cs)MBQuadDetectorResult(py)quadrangle":{"name":"quadrangle","abstract":"<p>Returns the location of detected quadrilateral in coordinate system of image in which detection was performed.</p>","parent_name":"MBQuadDetectorResult"},"Classes/MBQuadDetector.html#/c:objc(cs)MBQuadDetector(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBQuadDetector"},"Classes/MBQuadDetector.html#/c:objc(cs)MBQuadDetector(py)quadResult":{"name":"quadResult","abstract":"<p>Quad detector result</p>","parent_name":"MBQuadDetector"},"Classes/MBProcessorResult.html#/c:objc(cs)MBProcessorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBProcessorResult"},"Classes/MBProcessorResult.html#/c:objc(cs)MBProcessorResult(py)resultState":{"name":"resultState","abstract":"<p>Undocumented</p>","parent_name":"MBProcessorResult"},"Classes/MBProcessorGroup.html#/c:objc(cs)MBProcessorGroup(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBProcessorGroup"},"Classes/MBProcessorGroup.html#/c:objc(cs)MBProcessorGroup(im)initWithProcessingLocation:dewarpPolicy:andProcessors:":{"name":"-initWithProcessingLocation:dewarpPolicy:andProcessors:","abstract":"<p>Constructor for MBProcessorGroup.</p>","parent_name":"MBProcessorGroup"},"Classes/MBProcessorGroup.html#/c:objc(cs)MBProcessorGroup(py)processors":{"name":"processors","abstract":"<p>Processors that are members of the processor group</p>","parent_name":"MBProcessorGroup"},"Classes/MBProcessor.html#/c:objc(cs)MBProcessor(py)baseResult":{"name":"baseResult","abstract":"<p>Base processor result</p>","parent_name":"MBProcessor"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)givenNames":{"name":"givenNames","abstract":"<p>The first name of the Polish ID owner.</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The last name of the Polish ID owner.</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)familyName":{"name":"familyName","abstract":"<p>The family name of Polish ID owner.</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)parentsGivenNames":{"name":"parentsGivenNames","abstract":"<p>The parents name of Polish ID owner.</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Polish ID owner.</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of Polish ID owner in DD.MM.yyyy format.</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizerResult.html#/c:objc(cs)MBPolandIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Polish ID owner</p>","parent_name":"MBPolandIdFrontRecognizerResult"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Polish ID Front recognizer result</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Polish ID owner should be extracted</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if citizenship of Polish ID owner should be extracted</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)extractGivenNames":{"name":"extractGivenNames","abstract":"<p>Defines if date of birth of Polish ID owner should be extracted</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)extractFamilyName":{"name":"extractFamilyName","abstract":"<p>Defines if date of expiry should be extracted from Polish ID</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)extractParentsGivenNames":{"name":"extractParentsGivenNames","abstract":"<p>Defines if date of expiry should be extracted from Polish ID</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdFrontRecognizer.html#/c:objc(cs)MBPolandIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of expiry should be extracted from Polish ID</p>","parent_name":"MBPolandIdFrontRecognizer"},"Classes/MBPolandIdBackRecognizerResult.html#/c:objc(cs)MBPolandIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPolandIdBackRecognizerResult"},"Classes/MBPolandIdBackRecognizer.html#/c:objc(cs)MBPolandIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPolandIdBackRecognizer"},"Classes/MBPolandIdBackRecognizer.html#/c:objc(cs)MBPolandIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Polish ID Back recognizer result</p>","parent_name":"MBPolandIdBackRecognizer"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)givenNames":{"name":"givenNames","abstract":"<p>The first name of the Polish ID owner.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The last name of the Polish ID owner.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)familyName":{"name":"familyName","abstract":"<p>The family name of Polish ID owner.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)parentsGivenNames":{"name":"parentsGivenNames","abstract":"<p>The parents name of Polish ID owner.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Polish ID owner.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Polish ID owner.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Polish ID.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The issuing authority of Polish ID.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)personalNumber":{"name":"personalNumber","abstract":"<p>The issuing authority of Polish ID.</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Polish ID owner</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizerResult.html#/c:objc(cs)MBPolandCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The document date of expiry of the Polish ID</p>","parent_name":"MBPolandCombinedRecognizerResult"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Polish ID Combined recognizer result</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Polish ID owner should be extracted</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if citizenship of Polish ID owner should be extracted</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)extractGivenNames":{"name":"extractGivenNames","abstract":"<p>Defines if date of birth of Polish ID owner should be extracted</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)extractFamilyName":{"name":"extractFamilyName","abstract":"<p>Defines if date of expiry should be extracted from Polish ID</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)extractParentsGivenNames":{"name":"extractParentsGivenNames","abstract":"<p>Defines if date of expiry should be extracted from Polish ID</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPolandCombinedRecognizer.html#/c:objc(cs)MBPolandCombinedRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of expiry should be extracted from Polish ID</p>","parent_name":"MBPolandCombinedRecognizer"},"Classes/MBPdf417RecognizerResult.html#/c:objc(cs)MBPdf417RecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPdf417RecognizerResult"},"Classes/MBPdf417RecognizerResult.html#/c:objc(cs)MBPdf417RecognizerResult(py)rawData":{"name":"rawData","abstract":"<p>Byte array with result of the scan</p>","parent_name":"MBPdf417RecognizerResult"},"Classes/MBPdf417RecognizerResult.html#/c:objc(cs)MBPdf417RecognizerResult(py)stringData":{"name":"stringData","abstract":"<p>Retrieves string content of scanned data</p>","parent_name":"MBPdf417RecognizerResult"},"Classes/MBPdf417RecognizerResult.html#/c:objc(cs)MBPdf417RecognizerResult(py)uncertain":{"name":"uncertain","abstract":"<p>Flag indicating uncertain scanning data","parent_name":"MBPdf417RecognizerResult"},"Classes/MBPdf417RecognizerResult.html#/c:objc(cs)MBPdf417RecognizerResult(py)barcodeType":{"name":"barcodeType","abstract":"<p>Type of the barcode scanned</p>","parent_name":"MBPdf417RecognizerResult"},"Classes/MBPdf417Recognizer.html#/c:objc(cs)MBPdf417Recognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPdf417Recognizer"},"Classes/MBPdf417Recognizer.html#/c:objc(cs)MBPdf417Recognizer(py)result":{"name":"result","abstract":"<p>PDF417 recognizer results</p>","parent_name":"MBPdf417Recognizer"},"Classes/MBPdf417Recognizer.html#/c:objc(cs)MBPdf417Recognizer(py)scanUncertain":{"name":"scanUncertain","abstract":"<p>Set this to YES to scan even barcode not compliant with standards","parent_name":"MBPdf417Recognizer"},"Classes/MBPdf417Recognizer.html#/c:objc(cs)MBPdf417Recognizer(py)nullQuietZoneAllowed":{"name":"nullQuietZoneAllowed","abstract":"<p>Set this to YES to scan barcodes which don&rsquo;t have quiet zone (white area) around it</p>","parent_name":"MBPdf417Recognizer"},"Classes/MBPdf417Recognizer.html#/c:objc(cs)MBPdf417Recognizer(py)scanInverse":{"name":"scanInverse","abstract":"<p>Set this to YES to allow scanning barcodes with inverted intensities","parent_name":"MBPdf417Recognizer"},"Classes/MBParserResult.html#/c:objc(cs)MBParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBParserResult"},"Classes/MBParserResult.html#/c:objc(cs)MBParserResult(py)resultState":{"name":"resultState","abstract":"<p>Undocumented</p>","parent_name":"MBParserResult"},"Classes/MBParserGroupProcessorResult.html#/c:objc(cs)MBParserGroupProcessorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBParserGroupProcessorResult"},"Classes/MBParserGroupProcessorResult.html#/c:objc(cs)MBParserGroupProcessorResult(py)ocrLayout":{"name":"ocrLayout","abstract":"<p>Undocumented</p>","parent_name":"MBParserGroupProcessorResult"},"Classes/MBParserGroupProcessor.html#/c:objc(cs)MBParserGroupProcessor(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBParserGroupProcessor"},"Classes/MBParserGroupProcessor.html#/c:objc(cs)MBParserGroupProcessor(im)initWithParsers:":{"name":"-initWithParsers:","abstract":"<p>Undocumented</p>","parent_name":"MBParserGroupProcessor"},"Classes/MBParserGroupProcessor.html#/c:objc(cs)MBParserGroupProcessor(py)parsers":{"name":"parsers","abstract":"<p>Getting array of readonly parsers</p>","parent_name":"MBParserGroupProcessor"},"Classes/MBParserGroupProcessor.html#/c:objc(cs)MBParserGroupProcessor(py)result":{"name":"result","abstract":"<p>MBParserGroupProcessor processor result</p>","parent_name":"MBParserGroupProcessor"},"Classes/MBParserGroupProcessor.html#/c:objc(cs)MBParserGroupProcessor(py)oneOptionalElementInGroupShouldBeValid":{"name":"oneOptionalElementInGroupShouldBeValid","abstract":"<p>Set if one optional element should be valid</p>","parent_name":"MBParserGroupProcessor"},"Classes/MBParser.html#/c:objc(cs)MBParser(py)baseResult":{"name":"baseResult","abstract":"<p>Base parser result</p>","parent_name":"MBParser"},"Classes/MBOverlayViewController.html#/c:objc(cs)MBOverlayViewController(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBOverlayViewController"},"Classes/MBOverlayViewController.html#/c:objc(cs)MBOverlayViewController(py)recognizerRunnerViewController":{"name":"recognizerRunnerViewController","abstract":"<p>Overlay View&rsquo;s delegate object. Responsible for sending messages to PhotoPay&rsquo;s","parent_name":"MBOverlayViewController"},"Classes/MBOverlayViewController.html#/c:objc(cs)MBOverlayViewController(py)cameraPausedView":{"name":"cameraPausedView","abstract":"<p>Label which is displayed on screen when camera is paused, but still exists on the screen.</p>","parent_name":"MBOverlayViewController"},"Classes/MBOverlaySettings.html#/c:objc(cs)MBOverlaySettings(py)language":{"name":"language","abstract":"<p>If default overlay contains textual information, text will be localized to this language</p>","parent_name":"MBOverlaySettings"},"Classes/MBOverlaySettings.html#/c:objc(cs)MBOverlaySettings(py)cameraSettings":{"name":"cameraSettings","abstract":"<p>Camera settings</p>","parent_name":"MBOverlaySettings"},"Classes/MBOverlaySettings.html#/c:objc(cs)MBOverlaySettings(im)init":{"name":"-init","abstract":"<p>Initializes the object with default settings (see above for defaults).</p>","parent_name":"MBOverlaySettings"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(py)ul":{"name":"ul","abstract":"<p>Upper left corner</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(py)ur":{"name":"ur","abstract":"<p>Upper right corner</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(py)ll":{"name":"ll","abstract":"<p>Lower left corner</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(py)lr":{"name":"lr","abstract":"<p>Lower right corner</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(im)initWithUpperLeft:upperRight:lowerLeft:lowerRight:":{"name":"-initWithUpperLeft:upperRight:lowerLeft:lowerRight:","abstract":"<p>Initializer</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(im)positionWithOffset:":{"name":"-positionWithOffset:","abstract":"<p>Creates a position with offset to a current position. Offset is added.</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(im)rect":{"name":"-rect","abstract":"<p>Helper method converting Position to CGRect</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(im)center":{"name":"-center","abstract":"<p>Helper method calculating the center of the Position</p>","parent_name":"MBPosition"},"Classes/MBPosition.html#/c:objc(cs)MBPosition(im)height":{"name":"-height","abstract":"<p>Helper method calculating the height of the position</p>","parent_name":"MBPosition"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(py)value":{"name":"value","abstract":"<p>Unicode value of the char</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(py)position":{"name":"position","abstract":"<p>Position of the char on the image, in the coordinate system of the image</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(py)height":{"name":"height","abstract":"<p>Height of the char</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(py)uncertain":{"name":"uncertain","abstract":"<p>YES if char is uncertain</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(py)quality":{"name":"quality","abstract":"<p>Integer value representing OCR quality of the char</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(py)font":{"name":"font","abstract":"<p>Font of the character</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBOcrChar"},"Classes/MBOcrChar.html#/c:objc(cs)MBOcrChar(im)initWithValue:position:height:":{"name":"-initWithValue:position:height:","abstract":"<p>Initializer for a char</p>","parent_name":"MBOcrChar"},"Classes/MBCharWithVariants.html#/c:objc(cs)MBCharWithVariants(py)character":{"name":"character","abstract":"<p>Character that was recognised</p>","parent_name":"MBCharWithVariants"},"Classes/MBCharWithVariants.html#/c:objc(cs)MBCharWithVariants(py)variants":{"name":"variants","abstract":"<p>Alternative characters which are possible instead of this character.</p>","parent_name":"MBCharWithVariants"},"Classes/MBCharWithVariants.html#/c:objc(cs)MBCharWithVariants(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCharWithVariants"},"Classes/MBCharWithVariants.html#/c:objc(cs)MBCharWithVariants(im)initWithValue:":{"name":"-initWithValue:","abstract":"<p>Initializer for a CharWithVariant</p>","parent_name":"MBCharWithVariants"},"Classes/MBOcrLine.html#/c:objc(cs)MBOcrLine(py)chars":{"name":"chars","abstract":"<p>Ocr chars of the line</p>","parent_name":"MBOcrLine"},"Classes/MBOcrLine.html#/c:objc(cs)MBOcrLine(py)position":{"name":"position","abstract":"<p>Position of the line on the image, in the coordinate system of the image</p>","parent_name":"MBOcrLine"},"Classes/MBOcrLine.html#/c:objc(cs)MBOcrLine(im)init":{"name":"-init","abstract":"<p>Please use designated initializer.</p>","parent_name":"MBOcrLine"},"Classes/MBOcrLine.html#/c:objc(cs)MBOcrLine(im)initWithOcrChars:position:":{"name":"-initWithOcrChars:position:","abstract":"<p>Initializer from chars</p>","parent_name":"MBOcrLine"},"Classes/MBOcrLine.html#/c:objc(cs)MBOcrLine(im)string":{"name":"-string","abstract":"<p>Helper method which returna a simple string representation of the ocr line</p>","parent_name":"MBOcrLine"},"Classes/MBOcrBlock.html#/c:objc(cs)MBOcrBlock(py)lines":{"name":"lines","abstract":"<p>Ocr lines of the block</p>","parent_name":"MBOcrBlock"},"Classes/MBOcrBlock.html#/c:objc(cs)MBOcrBlock(py)position":{"name":"position","abstract":"<p>Position of the block on the image, in the coordinate system of the image</p>","parent_name":"MBOcrBlock"},"Classes/MBOcrBlock.html#/c:objc(cs)MBOcrBlock(im)init":{"name":"-init","abstract":"<p>Please use designated initializer.</p>","parent_name":"MBOcrBlock"},"Classes/MBOcrBlock.html#/c:objc(cs)MBOcrBlock(im)initWithOcrLines:position:":{"name":"-initWithOcrLines:position:","abstract":"<p>Initializer from lines</p>","parent_name":"MBOcrBlock"},"Classes/MBOcrBlock.html#/c:objc(cs)MBOcrBlock(im)string":{"name":"-string","abstract":"<p>Helper method which returna a simple string representation of the ocr block</p>","parent_name":"MBOcrBlock"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(py)box":{"name":"box","abstract":"<p>Bounding box of the layout. Given in the coordinate system of the image on which OCR was performed.</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(py)blocks":{"name":"blocks","abstract":"<p>Ocr blocks of the layout</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(py)transform":{"name":"transform","abstract":"<p>Tranformation matrix which transforms the coordinate system in which the OCR layout is given","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(py)transformInvalid":{"name":"transformInvalid","abstract":"<p>YES if transform is not valid (e.g, there&rsquo;s no UI to which it can be calculated. NO otherwise.</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(py)position":{"name":"position","abstract":"<p>Position of layout on the image, in the coordinate system of the image</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(py)flipped":{"name":"flipped","abstract":"<p>OCR layout was recognized from flipped image</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(im)initWithOcrBlocks:transform:box:flipped:":{"name":"-initWithOcrBlocks:transform:box:flipped:","abstract":"<p>Initializer from blocks and transformation</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(im)initWithOcrBlocks:":{"name":"-initWithOcrBlocks:","abstract":"<p>Initializer from blocks</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrLayout.html#/c:objc(cs)MBOcrLayout(im)string":{"name":"-string","abstract":"<p>Helper method which returna a simple string representation of the ocr layout</p>","parent_name":"MBOcrLayout"},"Classes/MBOcrEngineOptions.html#/c:objc(cs)MBOcrEngineOptions(im)init":{"name":"-init","abstract":"<p>Creates MBOcrEngineOptions with default settings.</p>","parent_name":"MBOcrEngineOptions"},"Classes/MBOcrEngineOptions.html#/c:objc(cs)MBOcrEngineOptions(py)documentType":{"name":"documentType","abstract":"<p>Type of document scanned.</p>","parent_name":"MBOcrEngineOptions"},"Classes/MBOcrEngineOptions.html#/c:objc(cs)MBOcrEngineOptions(py)minimalLineHeight":{"name":"minimalLineHeight","parent_name":"MBOcrEngineOptions"},"Classes/MBOcrEngineOptions.html#/c:objc(cs)MBOcrEngineOptions(py)maximalLineHeight":{"name":"maximalLineHeight","parent_name":"MBOcrEngineOptions"},"Classes/MBOcrEngineOptions.html#/c:objc(cs)MBOcrEngineOptions(py)imageProcessingEnabled":{"name":"imageProcessingEnabled","abstract":"<p>Specifies if the image processing is performed on image</p>","parent_name":"MBOcrEngineOptions"},"Classes/MBOcrEngineOptions.html#/c:objc(cs)MBOcrEngineOptions(py)charWhitelist":{"name":"charWhitelist","abstract":"<p>Whitelist of characters used in the OCR process. The set must contain MBOcrCharKey objects.</p>","parent_name":"MBOcrEngineOptions"},"Classes/MBOcrCharKey.html#/c:objc(cs)MBOcrCharKey(py)code":{"name":"code","abstract":"<p>Unicode value of the char. For example, for char &lsquo;k&rsquo;, you can use either &lsquo;k&rsquo; or 107.</p>","parent_name":"MBOcrCharKey"},"Classes/MBOcrCharKey.html#/c:objc(cs)MBOcrCharKey(py)font":{"name":"font","abstract":"<p>Font of the char. Can be specific (for example MB_OCR_FONT_ARIAL), or any font (MB_OCR_FONT_ANY), which is the same","parent_name":"MBOcrCharKey"},"Classes/MBOcrCharKey.html#/c:objc(cs)MBOcrCharKey(im)initWithCode:font:":{"name":"-initWithCode:font:","abstract":"<p>Initializer which specifies the code and font of the char.</p>","parent_name":"MBOcrCharKey"},"Classes/MBOcrCharKey.html#/c:objc(cs)MBOcrCharKey(cm)keyWithCode:font:":{"name":"+keyWithCode:font:","abstract":"<p>Factory method for easier instantiation</p>","parent_name":"MBOcrCharKey"},"Classes/MBNoUpScalingDewarpPolicy.html#/c:objc(cs)MBNoUpScalingDewarpPolicy(im)init":{"name":"-init","abstract":"<p>Default max allowed dewarp height used when using default constructor.</p>","parent_name":"MBNoUpScalingDewarpPolicy"},"Classes/MBNoUpScalingDewarpPolicy.html#/c:objc(cs)MBNoUpScalingDewarpPolicy(im)initWithMaxAllowedDewarpHeight:":{"name":"-initWithMaxAllowedDewarpHeight:","parent_name":"MBNoUpScalingDewarpPolicy"},"Classes/MBNoUpScalingDewarpPolicy.html#/c:objc(cs)MBNoUpScalingDewarpPolicy(py)maxAllowedDewarpHeight":{"name":"maxAllowedDewarpHeight","abstract":"<p>Returns the max allowed dewarp height as specified by this policy.</p>","parent_name":"MBNoUpScalingDewarpPolicy"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)firstNames":{"name":"firstNames","abstract":"<p>The first name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The last name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The last name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)issueDate":{"name":"issueDate","abstract":"<p>The last name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)expiryDate":{"name":"expiryDate","abstract":"<p>The last name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)donorIndicator":{"name":"donorIndicator","abstract":"<p>The last name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)address":{"name":"address","abstract":"<p>The last name of the New Zealand Driver License owner.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)licenseNumber":{"name":"licenseNumber","abstract":"<p>The license number of the New Zealand Driver License.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizerResult.html#/c:objc(cs)MBNewZealandDlFrontRecognizerResult(py)cardVersion":{"name":"cardVersion","abstract":"<p>The card version of the New Zealand Driver License.</p>","parent_name":"MBNewZealandDlFrontRecognizerResult"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)result":{"name":"result","abstract":"<p>New Zealand DL Front recognizer result</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractFirstName":{"name":"extractFirstName","abstract":"<p>Defines if owner&rsquo;s first name should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s last name should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractIssueDate":{"name":"extractIssueDate","abstract":"<p>Defines if card&rsquo;s issue date should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractExpiryDate":{"name":"extractExpiryDate","abstract":"<p>Defines if card&rsquo;s expiry date should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractDonorIndicator":{"name":"extractDonorIndicator","abstract":"<p>Defines if owner&rsquo;s donor indicator should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBNewZealandDlFrontRecognizer.html#/c:objc(cs)MBNewZealandDlFrontRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if owner&rsquo;s address should be extracted from New Zealand Driver License</p>","parent_name":"MBNewZealandDlFrontRecognizer"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)nricNumber":{"name":"nricNumber","abstract":"<p>NRIC number (National Registration Identity Card Number)</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)armyNumber":{"name":"armyNumber","abstract":"<p>Owner army number</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerAddress":{"name":"ownerAddress","abstract":"<p>Owner address</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerAddressCity":{"name":"ownerAddressCity","abstract":"<p>Owner address city. Determined from owner address.</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerAddressState":{"name":"ownerAddressState","abstract":"<p>Owner address state. Determined from owner address.</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerAddressZipCode":{"name":"ownerAddressZipCode","abstract":"<p>Owner address Zip code. Determined from owner address.</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerAddressStreet":{"name":"ownerAddressStreet","abstract":"<p>Owner street. Determined from owner address.</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)rawOwnerBirthDate":{"name":"rawOwnerBirthDate","abstract":"<p>Owner birth date string, as written on the document (YYMMDD format)</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerBirthDate":{"name":"ownerBirthDate","abstract":"<p>Owner birth date converted in NSDate object</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerFullName":{"name":"ownerFullName","abstract":"<p>Owner full name</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerReligion":{"name":"ownerReligion","abstract":"<p>Owner religion if written on MyKad</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizerResult.html#/c:objc(cs)MBMyTenteraRecognizerResult(py)ownerSex":{"name":"ownerSex","abstract":"<p>Owner sex (M for male, F for female)</p>","parent_name":"MBMyTenteraRecognizerResult"},"Classes/MBMyTenteraRecognizer.html#/c:objc(cs)MBMyTenteraRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMyTenteraRecognizer"},"Classes/MBMyTenteraRecognizer.html#/c:objc(cs)MBMyTenteraRecognizer(py)result":{"name":"result","abstract":"<p>My Tentera recognizer result</p>","parent_name":"MBMyTenteraRecognizer"},"Classes/MBMyTenteraRecognizer.html#/c:objc(cs)MBMyTenteraRecognizer(py)extractReligion":{"name":"extractReligion","abstract":"<p>Defines if religion should be extracted from MyTentera</p>","parent_name":"MBMyTenteraRecognizer"},"Classes/MBMyTenteraRecognizer.html#/c:objc(cs)MBMyTenteraRecognizer(py)extractFullNameAndAddress":{"name":"extractFullNameAndAddress","abstract":"<p>Defines if full name and address should be extracted from MyTentera</p>","parent_name":"MBMyTenteraRecognizer"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)nricNumber":{"name":"nricNumber","abstract":"<p>NRIC number (National Registration Identity Card Number)</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerAddress":{"name":"ownerAddress","abstract":"<p>Owner address</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerAddressCity":{"name":"ownerAddressCity","abstract":"<p>Owner address city. Determined from owner address.</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerAddressState":{"name":"ownerAddressState","abstract":"<p>Owner address state. Determined from owner address.</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerAddressZipCode":{"name":"ownerAddressZipCode","abstract":"<p>Owner address Zip code. Determined from owner address.</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerAddressStreet":{"name":"ownerAddressStreet","abstract":"<p>Owner street. Determined from owner address.</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)rawOwnerBirthDate":{"name":"rawOwnerBirthDate","abstract":"<p>Owner birth date string, as written on the document (YYMMDD format)</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerBirthDate":{"name":"ownerBirthDate","abstract":"<p>Owner birth date converted in NSDate object</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerFullName":{"name":"ownerFullName","abstract":"<p>Owner full name</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerReligion":{"name":"ownerReligion","abstract":"<p>Owner religion if written on MyKad</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)ownerSex":{"name":"ownerSex","abstract":"<p>Owner sex (M for male, F for female)</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizerResult.html#/c:objc(cs)MBMyKadFrontRecognizerResult(py)armyNumber":{"name":"armyNumber","abstract":"<p>Owner army number on MyTentera documents</p>","parent_name":"MBMyKadFrontRecognizerResult"},"Classes/MBMyKadFrontRecognizer.html#/c:objc(cs)MBMyKadFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMyKadFrontRecognizer"},"Classes/MBMyKadFrontRecognizer.html#/c:objc(cs)MBMyKadFrontRecognizer(py)result":{"name":"result","abstract":"<p>My Kad Front recognizer result</p>","parent_name":"MBMyKadFrontRecognizer"},"Classes/MBMyKadFrontRecognizer.html#/c:objc(cs)MBMyKadFrontRecognizer(py)extractArmyNumber":{"name":"extractArmyNumber","abstract":"<p>Defines if army number should be extracted from MyTentera documents with MyKadRecognizer</p>","parent_name":"MBMyKadFrontRecognizer"},"Classes/MBMyKadBackRecognizerResult.html#/c:objc(cs)MBMyKadBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMyKadBackRecognizerResult"},"Classes/MBMyKadBackRecognizerResult.html#/c:objc(cs)MBMyKadBackRecognizerResult(py)extendedNric":{"name":"extendedNric","abstract":"<p>The Extended NRIC of the MyKad owner.</p>","parent_name":"MBMyKadBackRecognizerResult"},"Classes/MBMyKadBackRecognizerResult.html#/c:objc(cs)MBMyKadBackRecognizerResult(py)nric":{"name":"nric","abstract":"<p>The NRIC of the MyKad owner.</p>","parent_name":"MBMyKadBackRecognizerResult"},"Classes/MBMyKadBackRecognizerResult.html#/c:objc(cs)MBMyKadBackRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The Sex of the MyKad owner.</p>","parent_name":"MBMyKadBackRecognizerResult"},"Classes/MBMyKadBackRecognizerResult.html#/c:objc(cs)MBMyKadBackRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The Date Of Birth of the MyKad owner.</p>","parent_name":"MBMyKadBackRecognizerResult"},"Classes/MBMyKadBackRecognizer.html#/c:objc(cs)MBMyKadBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMyKadBackRecognizer"},"Classes/MBMyKadBackRecognizer.html#/c:objc(cs)MBMyKadBackRecognizer(py)result":{"name":"result","abstract":"<p>Result of scanning MyKad back side</p>","parent_name":"MBMyKadBackRecognizer"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)documentType":{"name":"documentType","abstract":"<p>Returns the MRTD document type of recognized document.</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)primaryID":{"name":"primaryID","abstract":"<p>Returns the primary indentifier. If there is more than one component, they are separated with space.</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)secondaryID":{"name":"secondaryID","abstract":"<p>Returns the secondary identifier. If there is more than one component, they are separated with space.</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)issuer":{"name":"issuer","abstract":"<p>Returns three-letter or two-letter code which indicate the issuing State. Three-letter codes are based","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>Returns holder&rsquo;s date of birth</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>Returns document number. Document number contains up to 9 characters.","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)nationality":{"name":"nationality","abstract":"<p>Returns nationality of the holder represented by a three-letter or two-letter code. Three-letter","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)gender":{"name":"gender","abstract":"<p>Returns gender of the card holder. Gender is specified by use of the single initial, capital letter F for female,","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)documentCode":{"name":"documentCode","abstract":"<p>Returns document code. Document code contains two characters. For MRTD the first character shall","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>Returns date of expiry</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)opt1":{"name":"opt1","abstract":"<p>Returns first optional data. Returns empty string if not available.","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)opt2":{"name":"opt2","abstract":"<p>Returns second optional data. Returns empty string if not available.","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)alienNumber":{"name":"alienNumber","abstract":"<p>Returns alien number. Returns empty string if not available.","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)applicationReceiptNumber":{"name":"applicationReceiptNumber","abstract":"<p>Returns application receipt number. Returns empty string if not available.","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)immigrantCaseNumber":{"name":"immigrantCaseNumber","abstract":"<p>Returns immigrant case number. Returns empty string if not available.","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)mrzText":{"name":"mrzText","abstract":"<p>Returns the entire Machine Readable Zone text from ID. This text is usually used for parsing","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)isParsed":{"name":"isParsed","abstract":"<p>Returns true if Machine Readable Zone has been parsed, false otherwise.</p>","parent_name":"MBMrzResult"},"Classes/MBMrzResult.html#/c:objc(cs)MBMrzResult(py)isVerified":{"name":"isVerified","abstract":"<p>Returns true if all check digits inside MRZ are correct, false otherwise.</p>","parent_name":"MBMrzResult"},"Classes/MBMrtdSpecification.html#/c:objc(cs)MBMrtdSpecification(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdSpecification"},"Classes/MBMrtdSpecification.html#/c:objc(cs)MBMrtdSpecification(cm)createFromPreset:":{"name":"+createFromPreset:","abstract":"<p>Factory method which creates MRTD specification based on a preset</p>","parent_name":"MBMrtdSpecification"},"Classes/MBMrtdRecognizerResult.html#/c:objc(cs)MBMrtdRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdRecognizerResult"},"Classes/MBMrtdRecognizerResult.html#/c:objc(cs)MBMrtdRecognizerResult(py)mrzResult":{"name":"mrzResult","abstract":"<p>Returns the Data extracted from the machine readable zone.</p>","parent_name":"MBMrtdRecognizerResult"},"Classes/MBMrtdRecognizerResult.html#/c:objc(cs)MBMrtdRecognizerResult(py)rawOcrLayout":{"name":"rawOcrLayout","abstract":"<p>Raw OCR layout from which the MRTD data was parsed.</p>","parent_name":"MBMrtdRecognizerResult"},"Classes/MBMrtdRecognizerResult.html#/c:objc(cs)MBMrtdRecognizerResult(py)mrzImage":{"name":"mrzImage","abstract":"<p>Image of the Machine Readable Zone or nil if not available.</p>","parent_name":"MBMrtdRecognizerResult"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(py)result":{"name":"result","abstract":"<p>Detector recognizer results</p>","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(py)allowUnparsedResults":{"name":"allowUnparsedResults","abstract":"<p>Whether returning of unparsed results is allowed</p>","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(py)allowUnverifiedResults":{"name":"allowUnverifiedResults","abstract":"<p>Whether returning of unverified results is allowed","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(py)returnMrzImage":{"name":"returnMrzImage","abstract":"<p>Whether cropped image of the Machine Readable Zone should be available in result.","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(py)saveImageDPI":{"name":"saveImageDPI","abstract":"<p>Desired DPI for MRZ and full document images (if saving of those is enabled)</p>","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(py)mrtdSpecifications":{"name":"mrtdSpecifications","abstract":"<p>Get the mrtd specifications.</p>","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdRecognizer.html#/c:objc(cs)MBMrtdRecognizer(im)setMrzFilter:":{"name":"-setMrzFilter:","abstract":"<p>Filter for MRTDs (Machine Readable Travel Documents) that is used to determine which documents","parent_name":"MBMrtdRecognizer"},"Classes/MBMrtdDetectorResult.html#/c:objc(cs)MBMrtdDetectorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdDetectorResult"},"Classes/MBMrtdDetectorResult.html#/c:objc(cs)MBMrtdDetectorResult(py)mrzLocation":{"name":"mrzLocation","abstract":"<p>Returns the location of Machine Readable Zone in coordinate system of image in which detection was performed.</p>","parent_name":"MBMrtdDetectorResult"},"Classes/MBMrtdDetectorResult.html#/c:objc(cs)MBMrtdDetectorResult(py)mrzPhysicalHeightInInches":{"name":"mrzPhysicalHeightInInches","abstract":"<p>Returns the physical height in inches of Machine Readable Zone.</p>","parent_name":"MBMrtdDetectorResult"},"Classes/MBMrtdDetector.html#/c:objc(cs)MBMrtdDetector(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdDetector"},"Classes/MBMrtdDetector.html#/c:objc(cs)MBMrtdDetector(py)result":{"name":"result","abstract":"<p>MRTD detector result</p>","parent_name":"MBMrtdDetector"},"Classes/MBMrtdDetector.html#/c:objc(cs)MBMrtdDetector(py)detectFullDocument":{"name":"detectFullDocument","abstract":"<p>Defines whether full document will be detected. If set to false, result will contain","parent_name":"MBMrtdDetector"},"Classes/MBMrtdDetector.html#/c:objc(cs)MBMrtdDetector(py)useCardDetector":{"name":"useCardDetector","abstract":"<p>Enable detection correction with card detector. When this option is enabled, after","parent_name":"MBMrtdDetector"},"Classes/MBMrtdDetector.html#/c:objc(cs)MBMrtdDetector(im)setMrtdSpecifications:":{"name":"-setMrtdSpecifications:","abstract":"<p>Sets the mrtd specifications. Mrtd specifications describe the images that should be returned by","parent_name":"MBMrtdDetector"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)isParsed":{"name":"isParsed","abstract":"<p>Boolean value which denotes that MRTD result is successfully parsed. When the result is parsed, all","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)documentType":{"name":"documentType","abstract":"<p>Returns the MRTD document type of recognized document.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)issuer":{"name":"issuer","abstract":"<p>Three-letter code which indicate the issuing State.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>Unique number of the document. Document number contains up to 9 characters.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)documentCode":{"name":"documentCode","abstract":"<p>The document code. Document code contains two characters. For MRTD the first character","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>Date of expiry of the document in format YYMMDD.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>Date of expiry of the document.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)primaryId":{"name":"primaryId","abstract":"<p>Returns the primary indentifier. If there is more than one component, they are separated with space.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)secondaryId":{"name":"secondaryId","abstract":"<p>Returns the secondary identifier. If there is more than one component, they are separated with space.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>Holder&rsquo;s date of birth in format YYMMDD.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>Holder&rsquo;s date of birth.</p>","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>Nationality of the holder represented by a three-letter code. Three-letter codes are based","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>Sex of the card holder. Sex is specified by use of the single initial, capital","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)opt1":{"name":"opt1","abstract":"<p>First optional data. Returns nil or empty string if not available.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)opt2":{"name":"opt2","abstract":"<p>Second optional data. Returns nil or empty string if not available.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)alienNumber":{"name":"alienNumber","abstract":"<p>Alien number. Returns nil or empty string if not available.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)applicationReceiptNumber":{"name":"applicationReceiptNumber","abstract":"<p>Application receipt number. Returns nil or empty string if not available.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)immigrantCaseNumber":{"name":"immigrantCaseNumber","abstract":"<p>Immigrant case number. Returns nil or empty string if not available.","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizerResult.html#/c:objc(cs)MBMrtdCombinedRecognizerResult(py)mrzText":{"name":"mrzText","abstract":"<p>The entire Machine Readable Zone text from ID. This text is usually used for parsing","parent_name":"MBMrtdCombinedRecognizerResult"},"Classes/MBMrtdCombinedRecognizer.html#/c:objc(cs)MBMrtdCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMrtdCombinedRecognizer"},"Classes/MBMrtdCombinedRecognizer.html#/c:objc(cs)MBMrtdCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Mrtd Combined recognizer result</p>","parent_name":"MBMrtdCombinedRecognizer"},"Classes/MBModernViewfinderSubview.html#/c:objc(cs)MBModernViewfinderSubview(py)moveable":{"name":"moveable","abstract":"<p>Denotes if view finder is moveable. Viewfinder will move whenever something is detected and will return to default position if no object","parent_name":"MBModernViewfinderSubview"},"Classes/MBModernViewfinderSubview.html#/c:objc(cs)MBModernViewfinderSubview(py)portraitMargins":{"name":"portraitMargins","abstract":"<p>Margins between overlay bounds and default corner positions while in portrait orientation.</p>","parent_name":"MBModernViewfinderSubview"},"Classes/MBModernViewfinderSubview.html#/c:objc(cs)MBModernViewfinderSubview(py)landscapeMargins":{"name":"landscapeMargins","abstract":"<p>Margins between overlay bounds and default corner positions while in landscape orientation.</p>","parent_name":"MBModernViewfinderSubview"},"Classes/MBModernViewfinderSubview.html#/c:objc(cs)MBModernViewfinderSubview(im)resetPositions":{"name":"-resetPositions","abstract":"<p>Resets the viewfinder position to it&rsquo;s initial position.</p>","parent_name":"MBModernViewfinderSubview"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(cm)sharedInstance":{"name":"+sharedInstance","abstract":"<p>Undocumented</p>","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(py)showLicenseKeyTimeLimitedWarning":{"name":"showLicenseKeyTimeLimitedWarning","abstract":"<p>If YES, tooltip limited license key warning messages will appear on screen</p>","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(py)resourcesBundle":{"name":"resourcesBundle","abstract":"<p>Bundle in which the resources for the scanning process should be found. Usually, by default, this","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(im)setLicenseBuffer:":{"name":"-setLicenseBuffer:","abstract":"<p>Set license buffer and unlock the SDK. Application package will be used to validate the license.</p>","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(im)setLicenseBuffer:andLicensee:":{"name":"-setLicenseBuffer:andLicensee:","abstract":"<p>Set license buffer and unlock the SDK. Also define licensee that will be used to validate the license.","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(im)setLicenseKey:":{"name":"-setLicenseKey:","abstract":"<p>Set license key and unlock the SDK. Application package will be used to validate the license.</p>","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(im)setLicenseKey:andLicensee:":{"name":"-setLicenseKey:andLicensee:","abstract":"<p>Set license key and unlock the SDK. Also define licensee that will be used to validate the license.","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(im)setLicenseResource:withExtension:inSubdirectory:forBundle:":{"name":"-setLicenseResource:withExtension:inSubdirectory:forBundle:","abstract":"<p>Set the license file and unlock the SDK. Application package will be used to validate the license.</p>","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(im)setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:":{"name":"-setLicenseResource:withExtension:inSubdirectory:forBundle:andLicensee:","abstract":"<p>Set the license file and unlock the SDK. Also define licensee that will be used to validate the license.","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkSDK.html#/c:objc(cs)MBMicroblinkSDK(cm)buildVersionString":{"name":"+buildVersionString","abstract":"<p>Returns the string that contains the library build version</p>","parent_name":"MBMicroblinkSDK"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(py)language":{"name":"language","abstract":"<p>Undocumented</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(py)resourcesBundle":{"name":"resourcesBundle","abstract":"<p>Bundle with resources used in framework</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(cm)instance":{"name":"+instance","abstract":"<p>Obtain the shared instance</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)init":{"name":"-init","abstract":"<p>Designated initializer</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)setDefaultLanguage":{"name":"-setDefaultLanguage","abstract":"<p>Sets the language to default (i.e. language specified in the user&rsquo;s device settings</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)pushStatusBarStyle:":{"name":"-pushStatusBarStyle:","abstract":"<p>Pushes the UIApplication status bar style to a internally handled stack</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)popStatusBarStyle":{"name":"-popStatusBarStyle","abstract":"<p>Returns the status bar style to the last saved value</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)pushStatusBarHidden:":{"name":"-pushStatusBarHidden:","abstract":"<p>Push the status bar hidden value</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)popStatusBarHidden":{"name":"-popStatusBarHidden","abstract":"<p>pops the status bar hidden value</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)setHelpShown:":{"name":"-setHelpShown:","abstract":"<p>Sets the key that the help was shown to true</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(im)isHelpShown":{"name":"-isHelpShown","abstract":"<p>Returns true if the help was already shown</p>","parent_name":"MBMicroblinkApp"},"Classes/MBMicroblinkApp.html#/c:objc(cs)MBMicroblinkApp(cm)verifyAndGetDefaultResourcesBundle":{"name":"+verifyAndGetDefaultResourcesBundle","abstract":"<p>This method check existance of the default resources bundle Microblink.bundle,","parent_name":"MBMicroblinkApp"},"Classes/MBMetadata.html#/c:objc(cs)MBMetadata(py)name":{"name":"name","abstract":"<p>Unique metadata name/Id</p>","parent_name":"MBMetadata"},"Classes/MBMetadata.html#/c:objc(cs)MBMetadata(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMetadata"},"Classes/MBMetadata.html#/c:objc(cs)MBMetadata(im)initWithName:":{"name":"-initWithName:","abstract":"<p>Undocumented</p>","parent_name":"MBMetadata"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The Name of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)identityNumber":{"name":"identityNumber","abstract":"<p>The Identity Number of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The Nationality of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)dlClass":{"name":"dlClass","abstract":"<p>The Class of the Malaysian DL.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)validFrom":{"name":"validFrom","abstract":"<p>The Valid From date of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)validUntil":{"name":"validUntil","abstract":"<p>The Valid Until date of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)street":{"name":"street","abstract":"<p>The Street of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)zipCode":{"name":"zipCode","abstract":"<p>The Zip Code of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)city":{"name":"city","abstract":"<p>The City of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)state":{"name":"state","abstract":"<p>The State of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizerResult.html#/c:objc(cs)MBMalaysiaDlFrontRecognizerResult(py)fullAddress":{"name":"fullAddress","abstract":"<p>The Full Address of the Malaysian DL owner.</p>","parent_name":"MBMalaysiaDlFrontRecognizerResult"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)result":{"name":"result","abstract":"<p>Malaysian DL Front recognizer result</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from Malaysian DL</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from Malaysian DL</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)extractClass":{"name":"extractClass","abstract":"<p>Defines if owner&rsquo;s class should be extracted from Malaysian DL</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)extractValidFrom":{"name":"extractValidFrom","abstract":"<p>Defines if owner&rsquo;s valid from should be extracted from Malaysian DL</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)extractValidUntil":{"name":"extractValidUntil","abstract":"<p>Defines if owner&rsquo;s valid until should be extracted from Malaysian DL</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBMalaysiaDlFrontRecognizer.html#/c:objc(cs)MBMalaysiaDlFrontRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if owner&rsquo;s address should be extracted from Malaysian DL</p>","parent_name":"MBMalaysiaDlFrontRecognizer"},"Classes/MBLicensePlatesParserResult.html#/c:objc(cs)MBLicensePlatesParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBLicensePlatesParserResult"},"Classes/MBLicensePlatesParserResult.html#/c:objc(cs)MBLicensePlatesParserResult(py)licensePlate":{"name":"licensePlate","abstract":"<p>Returns the recognized license plate number or empty string if recognition failed.</p>","parent_name":"MBLicensePlatesParserResult"},"Classes/MBLicensePlatesParser.html#/c:objc(cs)MBLicensePlatesParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBLicensePlatesParser"},"Classes/MBLicensePlatesParser.html#/c:objc(cs)MBLicensePlatesParser(py)result":{"name":"result","abstract":"<p>License plates parser result</p>","parent_name":"MBLicensePlatesParser"},"Classes/MBLegacyRecognizerResult.html#/c:objc(cs)MBLegacyRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBLegacyRecognizerResult"},"Classes/MBLegacyRecognizer.html#/c:objc(cs)MBLegacyRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBLegacyRecognizer"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)issuer":{"name":"issuer","abstract":"<p>Three-letter code which indicate the issuing State.","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>Unique number of the document. Document number contains up to 9 characters.","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)documentCode":{"name":"documentCode","abstract":"<p>The document code. Document code contains two characters. For MRTD the first character","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>Date of expiry of the document in format YYMMDD.</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>Date of expiry of the document.</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)primaryId":{"name":"primaryId","abstract":"<p>Returns the primary indentifier. If there is more than one component, they are separated with space.</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)secondaryId":{"name":"secondaryId","abstract":"<p>Returns the secondary identifier. If there is more than one component, they are separated with space.</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>Holder&rsquo;s date of birth in format YYMMDD.</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>Holder&rsquo;s date of birth.</p>","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>Nationality of the holder represented by a three-letter code. Three-letter codes are based","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)sex":{"name":"sex","abstract":"<p>Sex of the card holder. Sex is specified by use of the single initial, capital","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)opt1":{"name":"opt1","abstract":"<p>First optional data. Returns nil or empty string if not available.","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)opt2":{"name":"opt2","abstract":"<p>Second optional data. Returns nil or empty string if not available.","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBLegacyMRTDRecognizerResult.html#/c:objc(cs)MBLegacyMRTDRecognizerResult(py)mrzText":{"name":"mrzText","abstract":"<p>The entire Machine Readable Zone text from ID. This text is usually used for parsing","parent_name":"MBLegacyMRTDRecognizerResult"},"Classes/MBJordanIdFrontRecognizerResult.html#/c:objc(cs)MBJordanIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBJordanIdFrontRecognizerResult"},"Classes/MBJordanIdFrontRecognizerResult.html#/c:objc(cs)MBJordanIdFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The Name of the Jordan ID owner.</p>","parent_name":"MBJordanIdFrontRecognizerResult"},"Classes/MBJordanIdFrontRecognizerResult.html#/c:objc(cs)MBJordanIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The Sex of the Jordan ID owner.</p>","parent_name":"MBJordanIdFrontRecognizerResult"},"Classes/MBJordanIdFrontRecognizerResult.html#/c:objc(cs)MBJordanIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The Date Of Birth of the Jordan ID owner.</p>","parent_name":"MBJordanIdFrontRecognizerResult"},"Classes/MBJordanIdFrontRecognizerResult.html#/c:objc(cs)MBJordanIdFrontRecognizerResult(py)nationalNumber":{"name":"nationalNumber","abstract":"<p>The National Number of the Jordan ID.</p>","parent_name":"MBJordanIdFrontRecognizerResult"},"Classes/MBJordanIdFrontRecognizer.html#/c:objc(cs)MBJordanIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBJordanIdFrontRecognizer"},"Classes/MBJordanIdFrontRecognizer.html#/c:objc(cs)MBJordanIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Jordan ID Front recognizer result</p>","parent_name":"MBJordanIdFrontRecognizer"},"Classes/MBJordanIdFrontRecognizer.html#/c:objc(cs)MBJordanIdFrontRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from Jordan ID</p>","parent_name":"MBJordanIdFrontRecognizer"},"Classes/MBJordanIdFrontRecognizer.html#/c:objc(cs)MBJordanIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted from Jordan ID</p>","parent_name":"MBJordanIdFrontRecognizer"},"Classes/MBJordanIdFrontRecognizer.html#/c:objc(cs)MBJordanIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Jordan ID</p>","parent_name":"MBJordanIdFrontRecognizer"},"Classes/MBJordanIdBackRecognizerResult.html#/c:objc(cs)MBJordanIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBJordanIdBackRecognizerResult"},"Classes/MBJordanIdBackRecognizer.html#/c:objc(cs)MBJordanIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBJordanIdBackRecognizer"},"Classes/MBJordanIdBackRecognizer.html#/c:objc(cs)MBJordanIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Jordan ID Back recognizer result</p>","parent_name":"MBJordanIdBackRecognizer"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)name":{"name":"name","abstract":"<p>The Name of the Jordan ID owner.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The Sex of the Jordan ID owner.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The Date Of Birth of the Jordan ID owner.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)nationalNumber":{"name":"nationalNumber","abstract":"<p>The Document Number of the Jordan ID.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Jordan ID owner.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)issuer":{"name":"issuer","abstract":"<p>The issuer of the Jordan ID.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The Document Number of the Jordan ID.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizerResult.html#/c:objc(cs)MBJordanCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The Date of expiry of the Jordan ID.</p>","parent_name":"MBJordanCombinedRecognizerResult"},"Classes/MBJordanCombinedRecognizer.html#/c:objc(cs)MBJordanCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBJordanCombinedRecognizer"},"Classes/MBJordanCombinedRecognizer.html#/c:objc(cs)MBJordanCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Jordan ID Combined recognizer result</p>","parent_name":"MBJordanCombinedRecognizer"},"Classes/MBJordanCombinedRecognizer.html#/c:objc(cs)MBJordanCombinedRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from Jordan ID</p>","parent_name":"MBJordanCombinedRecognizer"},"Classes/MBJordanCombinedRecognizer.html#/c:objc(cs)MBJordanCombinedRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted from Jordan ID</p>","parent_name":"MBJordanCombinedRecognizer"},"Classes/MBJordanCombinedRecognizer.html#/c:objc(cs)MBJordanCombinedRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Jordan ID</p>","parent_name":"MBJordanCombinedRecognizer"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)province":{"name":"province","abstract":"<p>The province of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)city":{"name":"city","abstract":"<p>The city of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The name of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of Indonesian ID owner in DD.MM.yyyy format.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Indonesian ID owner</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)bloodType":{"name":"bloodType","abstract":"<p>The blood type of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)rt":{"name":"rt","abstract":"<p>The rt of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)rw":{"name":"rw","abstract":"<p>The rw of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)kelDesa":{"name":"kelDesa","abstract":"<p>The kel desa of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)district":{"name":"district","abstract":"<p>The district of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)religion":{"name":"religion","abstract":"<p>The religion of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)marriageStatus":{"name":"marriageStatus","abstract":"<p>The marriage status of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)occupation":{"name":"occupation","abstract":"<p>The occupation of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)citizenship":{"name":"citizenship","abstract":"<p>The occupation of the Indonesian ID owner.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)rawValidUntil":{"name":"rawValidUntil","abstract":"<p>The document date of expiry of the Indonesian ID in DD.MM.yyyy format.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)validUntil":{"name":"validUntil","abstract":"<p>The document date of expiry of the Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)validUntilPermanent":{"name":"validUntilPermanent","abstract":"<p>Check if date of expiry is permanent on the Indonesian ID.</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizerResult.html#/c:objc(cs)MBIndonesiaIdFrontRecognizerResult(py)documentClassifier":{"name":"documentClassifier","abstract":"<p>The document classifier of Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizerResult"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Indonesian ID Front recognizer result</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractCity":{"name":"extractCity","abstract":"<p>Defines if city of Indonesian ID owner should be extracted</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if name of Indonesian ID owner should be extracted</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if place of birth of Indonesian ID owner should be extracted</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractBloodType":{"name":"extractBloodType","abstract":"<p>Defines if blood type should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if address should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractRT":{"name":"extractRT","abstract":"<p>Defines if rt should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractRW":{"name":"extractRW","abstract":"<p>Defines if rw should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractKelDesa":{"name":"extractKelDesa","abstract":"<p>Defines if keldesa should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractDistrict":{"name":"extractDistrict","abstract":"<p>Defines if district should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractReligion":{"name":"extractReligion","abstract":"<p>Defines if religion should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractMaritalStatus":{"name":"extractMaritalStatus","abstract":"<p>Defines if marital status should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractWork":{"name":"extractWork","abstract":"<p>Defines if work should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractCitizenship":{"name":"extractCitizenship","abstract":"<p>Defines if citizenship should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBIndonesiaIdFrontRecognizer.html#/c:objc(cs)MBIndonesiaIdFrontRecognizer(py)extractValidUntil":{"name":"extractValidUntil","abstract":"<p>Defines if valid until should be extracted from Indonesian ID</p>","parent_name":"MBIndonesiaIdFrontRecognizer"},"Classes/MBImageReturnProcessorResult.html#/c:objc(cs)MBImageReturnProcessorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBImageReturnProcessorResult"},"Classes/MBImageReturnProcessorResult.html#/c:objc(cs)MBImageReturnProcessorResult(py)rawImage":{"name":"rawImage","abstract":"<p>Returns the raw image saved by the processor. If no image was saved by processor, returns null.","parent_name":"MBImageReturnProcessorResult"},"Classes/MBImageReturnProcessorResult.html#/c:objc(cs)MBImageReturnProcessorResult(py)encodedImage":{"name":"encodedImage","abstract":"<p>JPEG-encoded image or nil, depending on whether image encoding was enabled.</p>","parent_name":"MBImageReturnProcessorResult"},"Classes/MBImageReturnProcessor.html#/c:objc(cs)MBImageReturnProcessor(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBImageReturnProcessor"},"Classes/MBImageReturnProcessor.html#/c:objc(cs)MBImageReturnProcessor(py)result":{"name":"result","abstract":"<p>MBImageReturnProcessor processor result</p>","parent_name":"MBImageReturnProcessor"},"Classes/MBImageReturnProcessor.html#/c:objc(cs)MBImageReturnProcessor(py)encodeImage":{"name":"encodeImage","abstract":"<p>Defines whether saved image will also be encoded as JPEG. This is false by default, which","parent_name":"MBImageReturnProcessor"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)image":{"name":"image","abstract":"<p>UIImage of wrapped image.","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)roi":{"name":"roi","abstract":"<p>Region of the image used for scanning, where the whole image is specified with CGRectMake(0.0, 0.0, 1.0, 1.0).</p>","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)orientation":{"name":"orientation","abstract":"<p>Processing orientation of image. This is used in OCR where you can specify character orientation.</p>","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)mirroredHorizontally":{"name":"mirroredHorizontally","abstract":"<p>Tells whether camera input images should be mirrored horizontally before processing</p>","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)mirroredVertically":{"name":"mirroredVertically","abstract":"<p>Tells whether camera input images should be mirrored vertically before processing</p>","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)estimateFrameQuality":{"name":"estimateFrameQuality","abstract":"<p>If YES, the image will prior to processing go through frame quality estimation phase, which might discard the frame</p>","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(py)cameraFrame":{"name":"cameraFrame","abstract":"<p>Property which tells if this frame is a camera or a single photo frame.","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(cm)imageWithUIImage:":{"name":"+imageWithUIImage:","abstract":"<p>Creates PPImage around UIImage.</p>","parent_name":"MBImage"},"Classes/MBImage.html#/c:objc(cs)MBImage(cm)imageWithCmSampleBuffer:":{"name":"+imageWithCmSampleBuffer:","abstract":"<p>Creates PPImage around CVImageBufferRef.</p>","parent_name":"MBImage"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)name":{"name":"name","abstract":"<p>The name of the iKad owner.</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)passportNumber":{"name":"passportNumber","abstract":"<p>The passport number of the iKad owner.</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the iKad owner.</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of iKad owner, as written on the iKad (DD/MM/YYYY)</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of iKad owner, parsed in NSDate object</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the iKad owner</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)sector":{"name":"sector","abstract":"<p>The sector of the iKad owner</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)employer":{"name":"employer","abstract":"<p>The employer of the iKad owner</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the iKad owner</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)rawExpiryDate":{"name":"rawExpiryDate","abstract":"<p>The expiry date of the iKad, as written on the iKad (DD/MM/YYYY)</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizerResult.html#/c:objc(cs)MBIkadRecognizerResult(py)expiryDate":{"name":"expiryDate","abstract":"<p>The expiry date of the iKad, parsed in NSDate object</p>","parent_name":"MBIkadRecognizerResult"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)result":{"name":"result","abstract":"<p>i Kad recognizer result</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractSector":{"name":"extractSector","abstract":"<p>Defines if owner&rsquo;s sector should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractEmployer":{"name":"extractEmployer","abstract":"<p>Defines if owner&rsquo;s employer should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if owner&rsquo;s address should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractPassportNumber":{"name":"extractPassportNumber","abstract":"<p>Defines if owner&rsquo;s passport number should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractExpiryDate":{"name":"extractExpiryDate","abstract":"<p>Defines if expiry date should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if date of expiry should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIkadRecognizer.html#/c:objc(cs)MBIkadRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted from iKad</p>","parent_name":"MBIkadRecognizer"},"Classes/MBIbanParserResult.html#/c:objc(cs)MBIbanParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBIbanParserResult"},"Classes/MBIbanParserResult.html#/c:objc(cs)MBIbanParserResult(py)iban":{"name":"iban","abstract":"<p>Returns the rparsed IBAN or empty string if recognition failed.</p>","parent_name":"MBIbanParserResult"},"Classes/MBIbanParser.html#/c:objc(cs)MBIbanParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBIbanParser"},"Classes/MBIbanParser.html#/c:objc(cs)MBIbanParser(py)result":{"name":"result","abstract":"<p>Iban parser result</p>","parent_name":"MBIbanParser"},"Classes/MBIbanParser.html#/c:objc(cs)MBIbanParser(py)alwaysReturnPrefix":{"name":"alwaysReturnPrefix","abstract":"<p>Should prefix (country code) always be returned.</p>","parent_name":"MBIbanParser"},"Classes/MBIbanParser.html#/c:objc(cs)MBIbanParser(py)countryCodeWhitelist":{"name":"countryCodeWhitelist","abstract":"<p>Set of allowed country codes. If whitelist is defined, only IBANs with defined country codes","parent_name":"MBIbanParser"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(py)fullName":{"name":"fullName","abstract":"<p>The full name of the Hong Kong ID owner.</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(py)commercialCode":{"name":"commercialCode","abstract":"<p>The commerical Code of the Hong Kong ID.</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Hong Kong ID ownder.</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Hong Kong ID owner.</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The issue date of the Hong Kong ID owner.</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizerResult.html#/c:objc(cs)MBHongKongIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Hong Kong card.</p>","parent_name":"MBHongKongIdFrontRecognizerResult"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Hong Kong ID Front recognizer result</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(py)extractFullName":{"name":"extractFullName","abstract":"<p>Defines if owner&rsquo;s full name should be extracted from Hong Kong ID</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(py)extractCommercialCode":{"name":"extractCommercialCode","abstract":"<p>Defines if commercial code should be extracted from Hong Kong ID</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Hong Kong ID</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Undocumented</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBHongKongIdFrontRecognizer.html#/c:objc(cs)MBHongKongIdFrontRecognizer(py)extractIssueDate":{"name":"extractIssueDate","abstract":"<p>Defines if card&rsquo;s issue date should be extracted from Hong Kong ID</p>","parent_name":"MBHongKongIdFrontRecognizer"},"Classes/MBGlareStatusSubview.html#/c:objc(cs)MBGlareStatusSubview(py)label":{"name":"label","abstract":"<p>Undocumented</p>","parent_name":"MBGlareStatusSubview"},"Classes/MBGlareStatusSubview.html#/c:objc(cs)MBGlareStatusSubview(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGlareStatusSubview"},"Classes/MBGlareStatusSubview.html#/c:objc(cs)MBGlareStatusSubview(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MBGlareStatusSubview"},"Classes/MBGlareStatusSubview.html#/c:objc(cs)MBGlareStatusSubview(im)initWithFrame:":{"name":"-initWithFrame:","abstract":"<p>Undocumented</p>","parent_name":"MBGlareStatusSubview"},"Classes/MBGlareStatusSubview.html#/c:objc(cs)MBGlareStatusSubview(im)glareDetectionFinishedWithResult:":{"name":"-glareDetectionFinishedWithResult:","abstract":"<p>Undocumented</p>","parent_name":"MBGlareStatusSubview"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The surname of the German Passport owner.</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)name":{"name":"name","abstract":"<p>The name of the German Passport owner.</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the German Passport owner.</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the German Passport owner</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>Raw date of issue, as written on the passport</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>Date of issue in NSDate object</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizerResult.html#/c:objc(cs)MBGermanyPassportRecognizerResult(py)authority":{"name":"authority","abstract":"<p>Issuing authority of the Passport</p>","parent_name":"MBGermanyPassportRecognizerResult"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)result":{"name":"result","abstract":"<p>German Passport recognizer result</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s surname should be extracted from German ID</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)extractName":{"name":"extractName","abstract":"<p>Defines if owner&rsquo;s name should be extracted from German ID</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from German ID</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from German ID</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue should be extracted from German ID</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyPassportRecognizer.html#/c:objc(cs)MBGermanyPassportRecognizer(py)extractAuthority":{"name":"extractAuthority","abstract":"<p>Defines if authority should be extracted from German ID</p>","parent_name":"MBGermanyPassportRecognizer"},"Classes/MBGermanyOldIdRecognizerResult.html#/c:objc(cs)MBGermanyOldIdRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyOldIdRecognizerResult"},"Classes/MBGermanyOldIdRecognizerResult.html#/c:objc(cs)MBGermanyOldIdRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth on the German ID</p>","parent_name":"MBGermanyOldIdRecognizerResult"},"Classes/MBGermanyOldIdRecognizer.html#/c:objc(cs)MBGermanyOldIdRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyOldIdRecognizer"},"Classes/MBGermanyOldIdRecognizer.html#/c:objc(cs)MBGermanyOldIdRecognizer(py)result":{"name":"result","abstract":"<p>German Old ID recognizer result</p>","parent_name":"MBGermanyOldIdRecognizer"},"Classes/MBGermanyOldIdRecognizer.html#/c:objc(cs)MBGermanyOldIdRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from German ID</p>","parent_name":"MBGermanyOldIdRecognizer"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the German ID owner.</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the German ID owner.</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the German ID owner.</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of German ID owner in dd.MM.yyyy format.</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of German ID owner</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the German ID</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>The document date of expiry of the German ID in dd.MM.yyyy format.</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The document date of expiry of the German ID</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizerResult.html#/c:objc(cs)MBGermanyIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the German ID</p>","parent_name":"MBGermanyIdFrontRecognizerResult"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>German ID Front recognizer result</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(py)extractFirstName":{"name":"extractFirstName","abstract":"<p>Defines if owner&rsquo;s first name should be extracted from German ID</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(py)extractLastName":{"name":"extractLastName","abstract":"<p>Defines if owner&rsquo;s last name should be extracted from German ID</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from German ID</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from German ID</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdFrontRecognizer.html#/c:objc(cs)MBGermanyIdFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from German ID</p>","parent_name":"MBGermanyIdFrontRecognizer"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)eyeColor":{"name":"eyeColor","abstract":"<p>Eye colour</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)height":{"name":"height","abstract":"<p>Height in cm</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>Raw date of issue, as written on the ID</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>Date of issue</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)authority":{"name":"authority","abstract":"<p>Issuing authority of the ID</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)fullAddress":{"name":"fullAddress","abstract":"<p>Full address</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)addressZipCode":{"name":"addressZipCode","abstract":"<p>ZIP code</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)addressCity":{"name":"addressCity","abstract":"<p>City</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)addressStreet":{"name":"addressStreet","abstract":"<p>Stret name in single line</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizerResult.html#/c:objc(cs)MBGermanyIdBackRecognizerResult(py)addressHouseNumber":{"name":"addressHouseNumber","abstract":"<p>House number</p>","parent_name":"MBGermanyIdBackRecognizerResult"},"Classes/MBGermanyIdBackRecognizer.html#/c:objc(cs)MBGermanyIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyIdBackRecognizer"},"Classes/MBGermanyIdBackRecognizer.html#/c:objc(cs)MBGermanyIdBackRecognizer(py)result":{"name":"result","abstract":"<p>German ID Back recognizer result</p>","parent_name":"MBGermanyIdBackRecognizer"},"Classes/MBGermanyIdBackRecognizer.html#/c:objc(cs)MBGermanyIdBackRecognizer(py)extractEyeColour":{"name":"extractEyeColour","abstract":"<p>If eye color should be extracted, set this to YES</p>","parent_name":"MBGermanyIdBackRecognizer"},"Classes/MBGermanyIdBackRecognizer.html#/c:objc(cs)MBGermanyIdBackRecognizer(py)extractHeight":{"name":"extractHeight","abstract":"<p>If height should be extracted, set this to YES</p>","parent_name":"MBGermanyIdBackRecognizer"},"Classes/MBGermanyIdBackRecognizer.html#/c:objc(cs)MBGermanyIdBackRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>If date of issue should be extracted, set this to YES</p>","parent_name":"MBGermanyIdBackRecognizer"},"Classes/MBGermanyIdBackRecognizer.html#/c:objc(cs)MBGermanyIdBackRecognizer(py)extractAuthority":{"name":"extractAuthority","abstract":"<p>If authority should be extracted, set this to YES</p>","parent_name":"MBGermanyIdBackRecognizer"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of German ID owner</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of German ID owner</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of German ID owner</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The identity card number of German ID.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of German ID.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)height":{"name":"height","abstract":"<p>The height of German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizerResult.html#/c:objc(cs)MBGermanyCombinedRecognizerResult(py)eyeColor":{"name":"eyeColor","abstract":"<p>The eye color of German ID owner.</p>","parent_name":"MBGermanyCombinedRecognizerResult"},"Classes/MBGermanyCombinedRecognizer.html#/c:objc(cs)MBGermanyCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBGermanyCombinedRecognizer"},"Classes/MBGermanyCombinedRecognizer.html#/c:objc(cs)MBGermanyCombinedRecognizer(py)result":{"name":"result","abstract":"<p>German ID Combined recognizer result</p>","parent_name":"MBGermanyCombinedRecognizer"},"Classes/MBFrameGrabberRecognizer.html#/c:objc(cs)MBFrameGrabberRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBFrameGrabberRecognizer"},"Classes/MBFrameGrabberRecognizer.html#/c:objc(cs)MBFrameGrabberRecognizer(im)initWithFrameGrabberDelegate:":{"name":"-initWithFrameGrabberDelegate:","abstract":"<p>Undocumented</p>","parent_name":"MBFrameGrabberRecognizer"},"Classes/MBFrameGrabberRecognizer.html#/c:objc(cs)MBFrameGrabberRecognizer(py)grabFocusedFrames":{"name":"grabFocusedFrames","abstract":"<p>Allow sending focused camera frames to MBFrameGrabberRecognizerDelegate.</p>","parent_name":"MBFrameGrabberRecognizer"},"Classes/MBFrameGrabberRecognizer.html#/c:objc(cs)MBFrameGrabberRecognizer(py)grabUnfocusedFrames":{"name":"grabUnfocusedFrames","abstract":"<p>Allow sending unfocused camera frames to MBFrameGrabberRecognizerDelegate.</p>","parent_name":"MBFrameGrabberRecognizer"},"Classes/MBFixedDewarpPolicy.html#/c:objc(cs)MBFixedDewarpPolicy(im)init":{"name":"-init","abstract":"<p>Default dewarp height value used when using default constructor.</p>","parent_name":"MBFixedDewarpPolicy"},"Classes/MBFixedDewarpPolicy.html#/c:objc(cs)MBFixedDewarpPolicy(im)initWithDewarpHeight:":{"name":"-initWithDewarpHeight:","parent_name":"MBFixedDewarpPolicy"},"Classes/MBFixedDewarpPolicy.html#/c:objc(cs)MBFixedDewarpPolicy(py)dewarpHeight":{"name":"dewarpHeight","abstract":"<p>Returns the desired dewarp height (in pixels) as specified by this policy.</p>","parent_name":"MBFixedDewarpPolicy"},"Classes/MBFieldByFieldOverlayViewController.html#/c:objc(cs)MBFieldByFieldOverlayViewController(im)initWithSettings:delegate:":{"name":"-initWithSettings:delegate:","abstract":"<p>Designated initializer of the overlay. All scan settings from the recognizer runner will be removed and generated anew with passed MBScanElement array.</p>","parent_name":"MBFieldByFieldOverlayViewController"},"Classes/MBFieldByFieldOverlayViewController.html#/c:objc(cs)MBFieldByFieldOverlayViewController(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBFieldByFieldOverlayViewController"},"Classes/MBFieldByFieldOverlayViewController.html#/c:objc(cs)MBFieldByFieldOverlayViewController(im)initWithNibName:bundle:":{"name":"-initWithNibName:bundle:","abstract":"<p>Undocumented</p>","parent_name":"MBFieldByFieldOverlayViewController"},"Classes/MBFieldByFieldOverlayViewController.html#/c:objc(cs)MBFieldByFieldOverlayViewController(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MBFieldByFieldOverlayViewController"},"Classes/MBFieldByFieldOverlayViewController.html#/c:objc(cs)MBFieldByFieldOverlayViewController(py)delegate":{"name":"delegate","abstract":"<p>Delegate which is notified with important UI events</p>","parent_name":"MBFieldByFieldOverlayViewController"},"Classes/MBFieldByFieldOverlaySettings.html#/c:objc(cs)MBFieldByFieldOverlaySettings(im)initWithScanElements:":{"name":"-initWithScanElements:","abstract":"<p>Designated initializer for settings.</p>","parent_name":"MBFieldByFieldOverlaySettings"},"Classes/MBFieldByFieldOverlaySettings.html#/c:objc(cs)MBFieldByFieldOverlaySettings(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBFieldByFieldOverlaySettings"},"Classes/MBFieldByFieldOverlaySettings.html#/c:objc(cs)MBFieldByFieldOverlaySettings(py)scanElements":{"name":"scanElements","abstract":"<p>Array of MBScanElement objects which defines which Elements are scanned.</p>","parent_name":"MBFieldByFieldOverlaySettings"},"Classes/MBFieldByFieldOverlaySettings.html#/c:objc(cs)MBFieldByFieldOverlaySettings(py)showOcrDots":{"name":"showOcrDots","abstract":"<p>Property that enables showing of flashing dots over characters being scanned.</p>","parent_name":"MBFieldByFieldOverlaySettings"},"Classes/MBFieldByFieldOverlaySettings.html#/c:objc(cs)MBFieldByFieldOverlaySettings(py)outputSuccessfulImages":{"name":"outputSuccessfulImages","abstract":"<p>Property that enables outputting images of sucessful scans for each element scanned.</p>","parent_name":"MBFieldByFieldOverlaySettings"},"Classes/MBFieldByFieldOverlaySettings.html#/c:objc(cs)MBFieldByFieldOverlaySettings(py)consecutiveScanThreshold":{"name":"consecutiveScanThreshold","abstract":"<p>Number of times same parse result needs to be outputted to be considered valid</p>","parent_name":"MBFieldByFieldOverlaySettings"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first Name of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last Name of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)birthData":{"name":"birthData","abstract":"<p>The birth Data of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)issueDate":{"name":"issueDate","abstract":"<p>The issue Date of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)expiryDate":{"name":"expiryDate","abstract":"<p>The expiry Date of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing Authority of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)personalNumber":{"name":"personalNumber","abstract":"<p>The personal Number of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)driverNumber":{"name":"driverNumber","abstract":"<p>The driver Number of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizerResult.html#/c:objc(cs)MBEudlRecognizerResult(py)country":{"name":"country","abstract":"<p>The country of the EU Driver License owner.</p>","parent_name":"MBEudlRecognizerResult"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)result":{"name":"result","abstract":"<p>EU Driver License recognizer result</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if owner&rsquo;s date of issue should be extracted from EU Driver License</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if owner&rsquo;s date of expiry should be extracted from EU Driver License</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)extractPersonalNumber":{"name":"extractPersonalNumber","abstract":"<p>Defines if owner&rsquo;s personal number should be extracted from EU Driver License</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)extractIssuingAuthority":{"name":"extractIssuingAuthority","abstract":"<p>Defines if owner&rsquo;s issuing authority should be extracted from EU Driver License</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if owner&rsquo;s address should be extracted from EU Driver License</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEudlRecognizer.html#/c:objc(cs)MBEudlRecognizer(py)country":{"name":"country","abstract":"<p>Country of scanning Eudl. The default value of MBEudlCountryAny will scan all supported driver&rsquo;s licenses.</p>","parent_name":"MBEudlRecognizer"},"Classes/MBEmailParserResult.html#/c:objc(cs)MBEmailParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBEmailParserResult"},"Classes/MBEmailParserResult.html#/c:objc(cs)MBEmailParserResult(py)email":{"name":"email","abstract":"<p>Returns the recognized email or empty string if recognition failed.</p>","parent_name":"MBEmailParserResult"},"Classes/MBEmailParser.html#/c:objc(cs)MBEmailParser(py)result":{"name":"result","abstract":"<p>Email parser result</p>","parent_name":"MBEmailParser"},"Classes/MBEgyptIdFrontRecognizerResult.html#/c:objc(cs)MBEgyptIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBEgyptIdFrontRecognizerResult"},"Classes/MBEgyptIdFrontRecognizerResult.html#/c:objc(cs)MBEgyptIdFrontRecognizerResult(py)nationalNumber":{"name":"nationalNumber","abstract":"<p>The National Number of the Egypt ID owner.</p>","parent_name":"MBEgyptIdFrontRecognizerResult"},"Classes/MBEgyptIdFrontRecognizerResult.html#/c:objc(cs)MBEgyptIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Egypt ID.</p>","parent_name":"MBEgyptIdFrontRecognizerResult"},"Classes/MBEgyptIdFrontRecognizer.html#/c:objc(cs)MBEgyptIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBEgyptIdFrontRecognizer"},"Classes/MBEgyptIdFrontRecognizer.html#/c:objc(cs)MBEgyptIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Egypt ID Front recognizer result</p>","parent_name":"MBEgyptIdFrontRecognizer"},"Classes/MBEgyptIdFrontRecognizer.html#/c:objc(cs)MBEgyptIdFrontRecognizer(py)extractNationalNumber":{"name":"extractNationalNumber","abstract":"<p>Defines if owner&rsquo;s national number should be extracted from Egypt ID</p>","parent_name":"MBEgyptIdFrontRecognizer"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(py)dotsLayer":{"name":"dotsLayer","abstract":"<p>Undocumented</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(py)dotsColor":{"name":"dotsColor","abstract":"<p>Color of the dots</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(py)dotsStrokeWidth":{"name":"dotsStrokeWidth","abstract":"<p>Width of the dots</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(py)dotsRadius":{"name":"dotsRadius","abstract":"<p>Radius of dots</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(py)animationDuration":{"name":"animationDuration","abstract":"<p>Duration of the animation</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(im)initWithFrame:":{"name":"-initWithFrame:","abstract":"<p>Initializes the layer</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsSubview.html#/c:objc(cs)MBDotsSubview(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MBDotsSubview"},"Classes/MBDotsResultSubview.html#/c:objc(cs)MBDotsResultSubview(py)foregroundColor":{"name":"foregroundColor","abstract":"<p>Foreground color of dots.</p>","parent_name":"MBDotsResultSubview"},"Classes/MBDotsResultSubview.html#/c:objc(cs)MBDotsResultSubview(py)tintColor":{"name":"tintColor","abstract":"<p>Border and shadow color of dots.</p>","parent_name":"MBDotsResultSubview"},"Classes/MBDotsResultSubview.html#/c:objc(cs)MBDotsResultSubview(py)shouldIgnoreFastResults":{"name":"shouldIgnoreFastResults","abstract":"<p>If set YES, dots will not redraw until the animation is finished. This will make animation look much smoother on fast results.</p>","parent_name":"MBDotsResultSubview"},"Classes/MBDotsResultSubview.html#/c:objc(cs)MBDotsResultSubview(py)charFadeInDuration":{"name":"charFadeInDuration","abstract":"<p>Duration of fade animation for each dot.</p>","parent_name":"MBDotsResultSubview"},"Classes/MBDotsResultSubview.html#/c:objc(cs)MBDotsResultSubview(py)dotCount":{"name":"dotCount","abstract":"<p>Maximum number of dots shown on screen. This count has to be in range [20,50].</p>","parent_name":"MBDotsResultSubview"},"Classes/MBDocumentVerificationSubview.html#/c:objc(cs)MBDocumentVerificationSubview(py)helpLabel":{"name":"helpLabel","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationSubview"},"Classes/MBDocumentVerificationSubview.html#/c:objc(cs)MBDocumentVerificationSubview(py)helpImageView":{"name":"helpImageView","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationSubview"},"Classes/MBDocumentVerificationSubview.html#/c:objc(cs)MBDocumentVerificationSubview(im)animateHelp":{"name":"-animateHelp","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationSubview"},"Classes/MBDocumentVerificationSubview.html#/c:objc(cs)MBDocumentVerificationSubview(py)documentVerificationSubviewDelegate":{"name":"documentVerificationSubviewDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationSubview"},"Classes/MBDocumentVerificationOverlayViewController.html#/c:objc(cs)MBDocumentVerificationOverlayViewController(py)settings":{"name":"settings","abstract":"<p>Common settings</p>","parent_name":"MBDocumentVerificationOverlayViewController"},"Classes/MBDocumentVerificationOverlayViewController.html#/c:objc(cs)MBDocumentVerificationOverlayViewController(py)delegate":{"name":"delegate","abstract":"<p>Delegate</p>","parent_name":"MBDocumentVerificationOverlayViewController"},"Classes/MBDocumentVerificationOverlayViewController.html#/c:objc(cs)MBDocumentVerificationOverlayViewController(im)initWithSettings:recognizerCollection:delegate:":{"name":"-initWithSettings:recognizerCollection:delegate:","abstract":"<p>Designated intializer.</p>","parent_name":"MBDocumentVerificationOverlayViewController"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)firstSideInstructions":{"name":"firstSideInstructions","abstract":"<p>Returns/sets user instructions that are shown above camera preview while the first side of the","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)secondSideInstructions":{"name":"secondSideInstructions","abstract":"<p>Returns/sets user instructions that are shown above camera preview while the second side of the","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)firstSideSplashMessage":{"name":"firstSideSplashMessage","abstract":"<p>Returns/sets splash message that is shown before scanning the first side of the document,","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)secondSideSplashMessage":{"name":"secondSideSplashMessage","abstract":"<p>Returns/sets splash message that is shown before scanning the second side of the document,","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)firstSideSplashImage":{"name":"firstSideSplashImage","abstract":"<p>Returns/sets splash image which is shown below splash message, before scanning the first side of","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)secondSideSplashImage":{"name":"secondSideSplashImage","abstract":"<p>Returns/sets splash image which is shown below splash message, before scanning the second side of","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)firstSideInstructionsImage":{"name":"firstSideInstructionsImage","abstract":"<p>Returns image that is shown above camera preview, next to the user instructions message, while","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationOverlaySettings.html#/c:objc(cs)MBDocumentVerificationOverlaySettings(py)secondSideInstructionsImage":{"name":"secondSideInstructionsImage","abstract":"<p>Returns image that is shown above camera preview, next to the user instructions message, while","parent_name":"MBDocumentVerificationOverlaySettings"},"Classes/MBDocumentVerificationInstructionsSubview.html#/c:objc(cs)MBDocumentVerificationInstructionsSubview(py)instructionsLabel":{"name":"instructionsLabel","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationInstructionsSubview"},"Classes/MBDocumentVerificationInstructionsSubview.html#/c:objc(cs)MBDocumentVerificationInstructionsSubview(py)instructionsImageView":{"name":"instructionsImageView","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentVerificationInstructionsSubview"},"Classes/MBDocumentSubview.html#/c:objc(cs)MBDocumentSubview(py)viewfinderView":{"name":"viewfinderView","abstract":"<p>Default implementation draws a rectangle with aspect ratio of viewfinderAspectRatio,","parent_name":"MBDocumentSubview"},"Classes/MBDocumentSubview.html#/c:objc(cs)MBDocumentSubview(py)viewfinderWidthToHeightRatio":{"name":"viewfinderWidthToHeightRatio","abstract":"<p>Default aspect ratio of the viewfinder, calculated as width / height.</p>","parent_name":"MBDocumentSubview"},"Classes/MBDocumentSubview.html#/c:objc(cs)MBDocumentSubview(py)tooltipLabel":{"name":"tooltipLabel","abstract":"<p>Label displayed below the viewfinder view.</p>","parent_name":"MBDocumentSubview"},"Classes/MBDocumentSubview.html#/c:objc(cs)MBDocumentSubview(im)initWithFrame:":{"name":"-initWithFrame:","abstract":"<p>Initialize the overlay subview with a given frame</p>","parent_name":"MBDocumentSubview"},"Classes/MBDocumentSubview.html#/c:objc(cs)MBDocumentSubview(im)initWithCoder:":{"name":"-initWithCoder:","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentSubview"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(im)initWithAspectRatio:physicalSizeInInches:":{"name":"-initWithAspectRatio:physicalSizeInInches:","abstract":"<p>Use this initializer for specifiying a document format.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(cm)createFromPreset:":{"name":"+createFromPreset:","abstract":"<p>Factory method which creates Document specification based on a preset</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(im)setPortraitAndLandscapeScale:":{"name":"-setPortraitAndLandscapeScale:","abstract":"<p>Sets scale and scale tolerance that will be used when detecting document in both orientations.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)maxAngle":{"name":"maxAngle","abstract":"<p>Maximum angle for document detection</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)portraitScale":{"name":"portraitScale","abstract":"<p>Scale and scale tolerance that will be used when detecting document in portrait orientation.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)landscapeScale":{"name":"landscapeScale","abstract":"<p>Scale and scale tolerance that will be used when detecting document in landscape orientation.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)scanningMode":{"name":"scanningMode","abstract":"<p>Scanning mode that defines in which orientations can this document be detected.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)xRange":{"name":"xRange","abstract":"<p>Percentage of possible document offset on x axis.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)yRange":{"name":"yRange","abstract":"<p>Percentage of possible document offset on y axis.</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentSpecification.html#/c:objc(cs)MBDocumentSpecification(py)physicalSizeInInches":{"name":"physicalSizeInInches","abstract":"<p>Physical size of document in inches</p>","parent_name":"MBDocumentSpecification"},"Classes/MBDocumentOverlayViewController.html#/c:objc(cs)MBDocumentOverlayViewController(py)settings":{"name":"settings","abstract":"<p>Common settings</p>","parent_name":"MBDocumentOverlayViewController"},"Classes/MBDocumentOverlayViewController.html#/c:objc(cs)MBDocumentOverlayViewController(py)delegate":{"name":"delegate","abstract":"<p>Delegate</p>","parent_name":"MBDocumentOverlayViewController"},"Classes/MBDocumentOverlayViewController.html#/c:objc(cs)MBDocumentOverlayViewController(im)initWithSettings:recognizerCollection:delegate:":{"name":"-initWithSettings:recognizerCollection:delegate:","abstract":"<p>Designated intializer.</p>","parent_name":"MBDocumentOverlayViewController"},"Classes/MBDocumentOverlaySettings.html#/c:objc(cs)MBDocumentOverlaySettings(py)tooltipText":{"name":"tooltipText","abstract":"<p>Gets/sets tootlip text that is defines under document view finder</p>","parent_name":"MBDocumentOverlaySettings"},"Classes/MBDocumentOverlaySettings.html#/c:objc(cs)MBDocumentOverlaySettings(py)showTooltip":{"name":"showTooltip","abstract":"<p>Gets/sets tooltip visibility</p>","parent_name":"MBDocumentOverlaySettings"},"Classes/MBDocumentFaceRecognizerResult.html#/c:objc(cs)MBDocumentFaceRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentFaceRecognizerResult"},"Classes/MBDocumentFaceRecognizerResult.html#/c:objc(cs)MBDocumentFaceRecognizerResult(py)documentLocation":{"name":"documentLocation","abstract":"<p>Quadrangle represeting corner points of the document within the input image.</p>","parent_name":"MBDocumentFaceRecognizerResult"},"Classes/MBDocumentFaceRecognizerResult.html#/c:objc(cs)MBDocumentFaceRecognizerResult(py)faceLocation":{"name":"faceLocation","abstract":"<p>Quadrangle represeting corner points of the face image within the input image.</p>","parent_name":"MBDocumentFaceRecognizerResult"},"Classes/MBDocumentFaceRecognizer.html#/c:objc(cs)MBDocumentFaceRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentFaceRecognizer"},"Classes/MBDocumentFaceRecognizer.html#/c:objc(cs)MBDocumentFaceRecognizer(py)result":{"name":"result","abstract":"<p>Result of scanning Document Face Recognizer</p>","parent_name":"MBDocumentFaceRecognizer"},"Classes/MBDocumentFaceRecognizer.html#/c:objc(cs)MBDocumentFaceRecognizer(py)detectorType":{"name":"detectorType","abstract":"<p>Type of docment this recognizer will scan.</p>","parent_name":"MBDocumentFaceRecognizer"},"Classes/MBDocumentDetectorResult.html#/c:objc(cs)MBDocumentDetectorResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentDetectorResult"},"Classes/MBDocumentDetectorResult.html#/c:objc(cs)MBDocumentDetectorResult(py)aspectRatio":{"name":"aspectRatio","abstract":"<p>Aspect ratio of detected document.</p>","parent_name":"MBDocumentDetectorResult"},"Classes/MBDocumentDetector.html#/c:objc(cs)MBDocumentDetector(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDocumentDetector"},"Classes/MBDocumentDetector.html#/c:objc(cs)MBDocumentDetector(im)initWithDocumentSpecifications:":{"name":"-initWithDocumentSpecifications:","parent_name":"MBDocumentDetector"},"Classes/MBDocumentDetector.html#/c:objc(cs)MBDocumentDetector(py)result":{"name":"result","abstract":"<p>Document detector result</p>","parent_name":"MBDocumentDetector"},"Classes/MBDocumentDetector.html#/c:objc(cs)MBDocumentDetector(py)numStableDetectionsThreshold":{"name":"numStableDetectionsThreshold","abstract":"<p>Defines how many times the same document should be detected before the detector","parent_name":"MBDocumentDetector"},"Classes/MBDocumentDetector.html#/c:objc(cs)MBDocumentDetector(py)documentSpecifications":{"name":"documentSpecifications","abstract":"<p>Document specifications describe the documents that should be detected with","parent_name":"MBDocumentDetector"},"Classes/MBDisplayableQuadDetection.html#/c:objc(cs)MBDisplayableQuadDetection(py)detectionLocation":{"name":"detectionLocation","abstract":"<p>Exact location of detected object on image.","parent_name":"MBDisplayableQuadDetection"},"Classes/MBDisplayablePointsDetection.html#/c:objc(cs)MBDisplayablePointsDetection(py)points":{"name":"points","abstract":"<p>Coordinates of points (CGPoint) of a detected object.</p>","parent_name":"MBDisplayablePointsDetection"},"Classes/MBDisplayableObject.html#/c:objc(cs)MBDisplayableObject(py)transform":{"name":"transform","abstract":"<p>Tranformation matrix which transforms the coordinate system in which the OCR layout is given","parent_name":"MBDisplayableObject"},"Classes/MBDisplayableDetection.html#/c:objc(cs)MBDisplayableDetection(im)initWithDetectionStatus:":{"name":"-initWithDetectionStatus:","abstract":"<p>Initializes the displayable detection with matrix</p>","parent_name":"MBDisplayableDetection"},"Classes/MBDisplayableDetection.html#/c:objc(cs)MBDisplayableDetection(im)init":{"name":"-init","abstract":"<p>Please use designated initializer.</p>","parent_name":"MBDisplayableDetection"},"Classes/MBDisplayableDetection.html#/c:objc(cs)MBDisplayableDetection(py)detectionStatus":{"name":"detectionStatus","abstract":"<p>Detection status which describes the status of detection</p>","parent_name":"MBDisplayableDetection"},"Classes/MBDewarpPolicy.html#/c:objc(cs)MBDewarpPolicy(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDewarpPolicy"},"Classes/MBDetectorResult.html#/c:objc(cs)MBDetectorResult(py)detectionCode":{"name":"detectionCode","abstract":"<p>Undocumented</p>","parent_name":"MBDetectorResult"},"Classes/MBDetectorResult.html#/c:objc(cs)MBDetectorResult(py)detectionStatus":{"name":"detectionStatus","abstract":"<p>Undocumented</p>","parent_name":"MBDetectorResult"},"Classes/MBDetectorRecognizerResult.html#/c:objc(cs)MBDetectorRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDetectorRecognizerResult"},"Classes/MBDetectorRecognizer.html#/c:objc(cs)MBDetectorRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDetectorRecognizer"},"Classes/MBDetectorRecognizer.html#/c:objc(cs)MBDetectorRecognizer(im)initWithQuadWithSizeDetector:":{"name":"-initWithQuadWithSizeDetector:","abstract":"<p>Undocumented</p>","parent_name":"MBDetectorRecognizer"},"Classes/MBDetectorRecognizer.html#/c:objc(cs)MBDetectorRecognizer(py)result":{"name":"result","abstract":"<p>Detector recognizer results</p>","parent_name":"MBDetectorRecognizer"},"Classes/MBDetectorRecognizer.html#/c:objc(cs)MBDetectorRecognizer(py)allowFlipped":{"name":"allowFlipped","abstract":"<p>Set this to true to enable recognition of document also in upside down direction.","parent_name":"MBDetectorRecognizer"},"Classes/MBDetectorRecognizer.html#/c:objc(cs)MBDetectorRecognizer(py)detector":{"name":"detector","abstract":"<p>Returns the detector that will be used for performing the document detection during recognition</p>","parent_name":"MBDetectorRecognizer"},"Classes/MBDetector.html#/c:objc(cs)MBDetector(py)baseResult":{"name":"baseResult","abstract":"<p>Base detector result</p>","parent_name":"MBDetector"},"Classes/MBDeepOcrEngineOptions.html#/c:objc(cs)MBDeepOcrEngineOptions(py)deepOcrPostprocessorNmsThreshold":{"name":"deepOcrPostprocessorNmsThreshold","abstract":"<p>Returns or sets nms threshold for deep ocr postprocessing</p>","parent_name":"MBDeepOcrEngineOptions"},"Classes/MBDeepOcrEngineOptions.html#/c:objc(cs)MBDeepOcrEngineOptions(py)deepOcrPostprocessorScoreThreshold":{"name":"deepOcrPostprocessorScoreThreshold","abstract":"<p>Returns or sets score threshold for deep ocr postprocessing</p>","parent_name":"MBDeepOcrEngineOptions"},"Classes/MBDeepOcrEngineOptions.html#/c:objc(cs)MBDeepOcrEngineOptions(py)deepOcrModel":{"name":"deepOcrModel","abstract":"<p>Returns or sets model for deep ocr postprocessing</p>","parent_name":"MBDeepOcrEngineOptions"},"Classes/MBDeepOcrEngineOptions.html#/c:objc(cs)MBDeepOcrEngineOptions(py)deepOcrModelString":{"name":"deepOcrModelString","abstract":"<p>Returns or sets model for deep ocr postprocessing</p>","parent_name":"MBDeepOcrEngineOptions"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(im)initWithDay:month:year:originalDateString:":{"name":"-initWithDay:month:year:originalDateString:","abstract":"<p>Designated initializer</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(py)originalDateString":{"name":"originalDateString","abstract":"<p>The original string used to create the date result</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(py)date":{"name":"date","abstract":"<p>NSDate object which represents the same date as this result</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(py)day":{"name":"day","abstract":"<p>Day in month.</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(py)month":{"name":"month","abstract":"<p>Month in year.</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(py)year":{"name":"year","abstract":"<p>Year of the current date.</p>","parent_name":"MBDateResult"},"Classes/MBDateResult.html#/c:objc(cs)MBDateResult(cm)dateResultWithDay:month:year:originalDateString:":{"name":"+dateResultWithDay:month:year:originalDateString:","abstract":"<p>Factory method</p>","parent_name":"MBDateResult"},"Classes/MBDateParserResult.html#/c:objc(cs)MBDateParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDateParserResult"},"Classes/MBDateParserResult.html#/c:objc(cs)MBDateParserResult(py)date":{"name":"date","abstract":"<p>Extracted date.</p>","parent_name":"MBDateParserResult"},"Classes/MBDateParser.html#/c:objc(cs)MBDateParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBDateParser"},"Classes/MBDateParser.html#/c:objc(cs)MBDateParser(py)result":{"name":"result","abstract":"<p>Date parser result</p>","parent_name":"MBDateParser"},"Classes/MBDateParser.html#/c:objc(cs)MBDateParser(im)setDateFormats:":{"name":"-setDateFormats:","abstract":"<p>Specifies the date formats that will be accepted by date parser. By default, all available","parent_name":"MBDateParser"},"Classes/MBDateParser.html#/c:objc(cs)MBDateParser(im)setDateSeparatorChars:":{"name":"-setDateSeparatorChars:","abstract":"<p>Specifies the date separator characters between date parts (day, month, year) that will be","parent_name":"MBDateParser"},"Classes/MBDPIBasedDewarpPolicy.html#/c:objc(cs)MBDPIBasedDewarpPolicy(im)init":{"name":"-init","abstract":"<p>Default DPI that will be used with default constructor.</p>","parent_name":"MBDPIBasedDewarpPolicy"},"Classes/MBDPIBasedDewarpPolicy.html#/c:objc(cs)MBDPIBasedDewarpPolicy(im)initWithDesiredDPI:":{"name":"-initWithDesiredDPI:","parent_name":"MBDPIBasedDewarpPolicy"},"Classes/MBDPIBasedDewarpPolicy.html#/c:objc(cs)MBDPIBasedDewarpPolicy(py)desiredDPI":{"name":"desiredDPI","abstract":"<p>Returns the desired DPI as defined by this policy.</p>","parent_name":"MBDPIBasedDewarpPolicy"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The ID card number of the Czech ID.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of the Czech ID owner in dd.MM.yyyy format.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)rawDateOfIssue":{"name":"rawDateOfIssue","abstract":"<p>The date of issue of the Czech ID owner in dd.MM.yyyy format.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)rawDateOfExpiry":{"name":"rawDateOfExpiry","abstract":"<p>The date of expiry of the Czech ID owner in dd.MM.yyyy format.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizerResult.html#/c:objc(cs)MBCzechiaIdFrontRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Czech ID owner.</p>","parent_name":"MBCzechiaIdFrontRecognizerResult"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Cz ID Front recognizer result</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Czech ID owner should be extracted</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)extractLastName":{"name":"extractLastName","abstract":"<p>Defines if citizenship of Czech ID owner should be extracted</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)extractFirstName":{"name":"extractFirstName","abstract":"<p>Defines if date of birth of Czech ID owner should be extracted</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Czech ID</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue should be extracted from Czech ID</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdFrontRecognizer.html#/c:objc(cs)MBCzechiaIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of expiry should be extracted from Czech ID</p>","parent_name":"MBCzechiaIdFrontRecognizer"},"Classes/MBCzechiaIdBackRecognizerResult.html#/c:objc(cs)MBCzechiaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCzechiaIdBackRecognizerResult"},"Classes/MBCzechiaIdBackRecognizerResult.html#/c:objc(cs)MBCzechiaIdBackRecognizerResult(py)authority":{"name":"authority","abstract":"<p>The issuing authority of the Czech ID.</p>","parent_name":"MBCzechiaIdBackRecognizerResult"},"Classes/MBCzechiaIdBackRecognizerResult.html#/c:objc(cs)MBCzechiaIdBackRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Czech ID owner.</p>","parent_name":"MBCzechiaIdBackRecognizerResult"},"Classes/MBCzechiaIdBackRecognizerResult.html#/c:objc(cs)MBCzechiaIdBackRecognizerResult(py)personalNumber":{"name":"personalNumber","abstract":"<p>The personal number of the Czech ID owner.</p>","parent_name":"MBCzechiaIdBackRecognizerResult"},"Classes/MBCzechiaIdBackRecognizer.html#/c:objc(cs)MBCzechiaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCzechiaIdBackRecognizer"},"Classes/MBCzechiaIdBackRecognizer.html#/c:objc(cs)MBCzechiaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Cz ID Back recognizer result</p>","parent_name":"MBCzechiaIdBackRecognizer"},"Classes/MBCzechiaIdBackRecognizer.html#/c:objc(cs)MBCzechiaIdBackRecognizer(py)extractAuthority":{"name":"extractAuthority","abstract":"<p>Defines if citizenship of Czech ID authority should be extracted</p>","parent_name":"MBCzechiaIdBackRecognizer"},"Classes/MBCzechiaIdBackRecognizer.html#/c:objc(cs)MBCzechiaIdBackRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if address of Czech ID owner should be extracted</p>","parent_name":"MBCzechiaIdBackRecognizer"},"Classes/MBCzechiaIdBackRecognizer.html#/c:objc(cs)MBCzechiaIdBackRecognizer(py)extractPersonalNumber":{"name":"extractPersonalNumber","abstract":"<p>Defines if personal number should be extracted from Czech ID</p>","parent_name":"MBCzechiaIdBackRecognizer"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The document number of the Czech ID.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Czech ID owner</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of Czech ID owner</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)address":{"name":"address","abstract":"<p>The full address of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Czech ID.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date of issue of Czech ID owner</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizerResult.html#/c:objc(cs)MBCzechiaCombinedRecognizerResult(py)personalIdentificationNumber":{"name":"personalIdentificationNumber","abstract":"<p>The personal identification number of the Czech ID owner.</p>","parent_name":"MBCzechiaCombinedRecognizerResult"},"Classes/MBCzechiaCombinedRecognizer.html#/c:objc(cs)MBCzechiaCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCzechiaCombinedRecognizer"},"Classes/MBCzechiaCombinedRecognizer.html#/c:objc(cs)MBCzechiaCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Czech ID Combined recognizer result</p>","parent_name":"MBCzechiaCombinedRecognizer"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)recognizerCollection":{"name":"recognizerCollection","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)cameraSettings":{"name":"cameraSettings","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)metadataDelegates":{"name":"metadataDelegates","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)scanningRecognizerRunnerViewControllerDelegate":{"name":"scanningRecognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)recognizerRunnerViewControllerDelegate":{"name":"recognizerRunnerViewControllerDelegate","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(im)init":{"name":"-init","abstract":"<p>Convenience initializer used for use cases when overlay view controller is instantiated from storyboard.","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(im)initWithRecognizerCollection:cameraSettings:":{"name":"-initWithRecognizerCollection:cameraSettings:","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)scanningRegion":{"name":"scanningRegion","abstract":"<p>Scanning region","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)autorotateOverlay":{"name":"autorotateOverlay","abstract":"<p>If YES, Overlay View Controller will be autorotated independently of ScanningViewController.</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)showStatusBar":{"name":"showStatusBar","abstract":"<p>If YES, default camera overlay will display Status bar.","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(py)supportedOrientations":{"name":"supportedOrientations","abstract":"<p>Default: UIInterfaceOrientationMaskPortrait</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCustomOverlayViewController.html#/c:objc(cs)MBCustomOverlayViewController(im)reconfigureRecognizers:":{"name":"-reconfigureRecognizers:","abstract":"<p>Undocumented</p>","parent_name":"MBCustomOverlayViewController"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Croatian ID owner.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Croatian ID owner.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The identity card number of Croatian ID.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Croatian ID owner.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)citizenship":{"name":"citizenship","abstract":"<p>The citizenship of the Croatian ID owner.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of Croatian ID owner in DD.MM.yyyy format.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Croatian ID owner</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)rawDocumentDateOfExpiry":{"name":"rawDocumentDateOfExpiry","abstract":"<p>The document date of expiry of the Croatian ID in DD.MM.yyyy format.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The document date of expiry of the Croatian ID</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)dateOfExpiryPermanent":{"name":"dateOfExpiryPermanent","abstract":"<p>Check if date of expiry is permanent on the Croatian ID.</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizerResult.html#/c:objc(cs)MBCroatiaIdFrontRecognizerResult(py)documentBilingual":{"name":"documentBilingual","abstract":"<p>YES if the document is bilingual</p>","parent_name":"MBCroatiaIdFrontRecognizerResult"},"Classes/MBCroatiaIdFrontRecognizer.html#/c:objc(cs)MBCroatiaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCroatiaIdFrontRecognizer"},"Classes/MBCroatiaIdFrontRecognizer.html#/c:objc(cs)MBCroatiaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Croatian ID Front recognizer result</p>","parent_name":"MBCroatiaIdFrontRecognizer"},"Classes/MBCroatiaIdFrontRecognizer.html#/c:objc(cs)MBCroatiaIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Croatian ID owner should be extracted</p>","parent_name":"MBCroatiaIdFrontRecognizer"},"Classes/MBCroatiaIdFrontRecognizer.html#/c:objc(cs)MBCroatiaIdFrontRecognizer(py)extractCitizenship":{"name":"extractCitizenship","abstract":"<p>Defines if citizenship of Croatian ID owner should be extracted</p>","parent_name":"MBCroatiaIdFrontRecognizer"},"Classes/MBCroatiaIdFrontRecognizer.html#/c:objc(cs)MBCroatiaIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of birth of Croatian ID owner should be extracted</p>","parent_name":"MBCroatiaIdFrontRecognizer"},"Classes/MBCroatiaIdFrontRecognizer.html#/c:objc(cs)MBCroatiaIdFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Croatian ID</p>","parent_name":"MBCroatiaIdFrontRecognizer"},"Classes/MBCroatiaIdBackRecognizerResult.html#/c:objc(cs)MBCroatiaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCroatiaIdBackRecognizerResult"},"Classes/MBCroatiaIdBackRecognizerResult.html#/c:objc(cs)MBCroatiaIdBackRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Croatian ID owner.</p>","parent_name":"MBCroatiaIdBackRecognizerResult"},"Classes/MBCroatiaIdBackRecognizerResult.html#/c:objc(cs)MBCroatiaIdBackRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Croatian ID.</p>","parent_name":"MBCroatiaIdBackRecognizerResult"},"Classes/MBCroatiaIdBackRecognizerResult.html#/c:objc(cs)MBCroatiaIdBackRecognizerResult(py)rawDocumentDateOfIssue":{"name":"rawDocumentDateOfIssue","abstract":"<p>The document date of issue of the Croatian ID in DD.MM.yyyy format.</p>","parent_name":"MBCroatiaIdBackRecognizerResult"},"Classes/MBCroatiaIdBackRecognizerResult.html#/c:objc(cs)MBCroatiaIdBackRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The document date of issue of the Croatian ID.</p>","parent_name":"MBCroatiaIdBackRecognizerResult"},"Classes/MBCroatiaIdBackRecognizerResult.html#/c:objc(cs)MBCroatiaIdBackRecognizerResult(py)dateOfExpiryPermanent":{"name":"dateOfExpiryPermanent","abstract":"<p>Check if date of expiry is permanent on the Croatian ID.</p>","parent_name":"MBCroatiaIdBackRecognizerResult"},"Classes/MBCroatiaIdBackRecognizer.html#/c:objc(cs)MBCroatiaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCroatiaIdBackRecognizer"},"Classes/MBCroatiaIdBackRecognizer.html#/c:objc(cs)MBCroatiaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Croatian ID Back recognizer result</p>","parent_name":"MBCroatiaIdBackRecognizer"},"Classes/MBCroatiaIdBackRecognizer.html#/c:objc(cs)MBCroatiaIdBackRecognizer(py)extractIssuingAuthority":{"name":"extractIssuingAuthority","abstract":"<p>Defines if issuing authority of Croatian ID should be extracted</p>","parent_name":"MBCroatiaIdBackRecognizer"},"Classes/MBCroatiaIdBackRecognizer.html#/c:objc(cs)MBCroatiaIdBackRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue of Croatian ID should be extracted</p>","parent_name":"MBCroatiaIdBackRecognizer"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Croatian ID owner.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Croatian ID owner.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)identityCardNumber":{"name":"identityCardNumber","abstract":"<p>The identity card number of Croatian ID.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Croatian ID owner.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)citizenship":{"name":"citizenship","abstract":"<p>The citizenship of the Croatian ID owner.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Croatian ID owner</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The document date of expiry of the Croatian ID</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)dateOfExpiryPermanent":{"name":"dateOfExpiryPermanent","abstract":"<p>Check if date of expiry is permanent on the Croatian ID.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Croatian ID owner.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Croatian ID.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The document date of issue of the Croatian ID.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)personalIdentificationNumber":{"name":"personalIdentificationNumber","abstract":"<p>The OIB (PIN) of the Croatian ID owner.</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)nonResident":{"name":"nonResident","abstract":"<p>YES if the person is non Croatian resident</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizerResult.html#/c:objc(cs)MBCroatiaCombinedRecognizerResult(py)documentBilingual":{"name":"documentBilingual","abstract":"<p>YES if the document is bilingual</p>","parent_name":"MBCroatiaCombinedRecognizerResult"},"Classes/MBCroatiaCombinedRecognizer.html#/c:objc(cs)MBCroatiaCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBCroatiaCombinedRecognizer"},"Classes/MBCroatiaCombinedRecognizer.html#/c:objc(cs)MBCroatiaCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Croatian ID Combined recognizer result</p>","parent_name":"MBCroatiaCombinedRecognizer"},"Classes/MBColombiaIdFrontRecognizerResult.html#/c:objc(cs)MBColombiaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBColombiaIdFrontRecognizerResult"},"Classes/MBColombiaIdFrontRecognizerResult.html#/c:objc(cs)MBColombiaIdFrontRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Colombian ID owner.</p>","parent_name":"MBColombiaIdFrontRecognizerResult"},"Classes/MBColombiaIdFrontRecognizerResult.html#/c:objc(cs)MBColombiaIdFrontRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Colombian ID owner.</p>","parent_name":"MBColombiaIdFrontRecognizerResult"},"Classes/MBColombiaIdFrontRecognizerResult.html#/c:objc(cs)MBColombiaIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Colombian ID card.</p>","parent_name":"MBColombiaIdFrontRecognizerResult"},"Classes/MBColombiaIdFrontRecognizer.html#/c:objc(cs)MBColombiaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBColombiaIdFrontRecognizer"},"Classes/MBColombiaIdFrontRecognizer.html#/c:objc(cs)MBColombiaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Colombia ID Front recognizer result</p>","parent_name":"MBColombiaIdFrontRecognizer"},"Classes/MBColombiaIdFrontRecognizer.html#/c:objc(cs)MBColombiaIdFrontRecognizer(py)extractFirstName":{"name":"extractFirstName","abstract":"<p>Defines if owner&rsquo;s first name should be extracted from Colombian ID</p>","parent_name":"MBColombiaIdFrontRecognizer"},"Classes/MBColombiaIdFrontRecognizer.html#/c:objc(cs)MBColombiaIdFrontRecognizer(py)extractLastName":{"name":"extractLastName","abstract":"<p>Defines if owner&rsquo;s last name should be extracted from Colombian ID</p>","parent_name":"MBColombiaIdFrontRecognizer"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)firstName":{"name":"firstName","abstract":"<p>The first name of the Colombian ID owner.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Colombian ID owner.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Colombian ID owner.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Colombian ID owner.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)bloodGroup":{"name":"bloodGroup","abstract":"<p>The blood group of the Colombian ID owner.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)fingerprint":{"name":"fingerprint","abstract":"<p>The fingerprint of the Colombian ID owner.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizerResult.html#/c:objc(cs)MBColombiaIdBackRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Colombian ID card.</p>","parent_name":"MBColombiaIdBackRecognizerResult"},"Classes/MBColombiaIdBackRecognizer.html#/c:objc(cs)MBColombiaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBColombiaIdBackRecognizer"},"Classes/MBColombiaIdBackRecognizer.html#/c:objc(cs)MBColombiaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Colombia ID Back recognizer result</p>","parent_name":"MBColombiaIdBackRecognizer"},"Classes/MBColombiaIdBackRecognizer.html#/c:objc(cs)MBColombiaIdBackRecognizer(py)scanUncertain":{"name":"scanUncertain","abstract":"<p>Set this to YES to scan even barcode not compliant with standards","parent_name":"MBColombiaIdBackRecognizer"},"Classes/MBColombiaIdBackRecognizer.html#/c:objc(cs)MBColombiaIdBackRecognizer(py)allowNullQuietZone":{"name":"allowNullQuietZone","abstract":"<p>Set this to YES to scan barcodes which don&rsquo;t have quiet zone (white area) around it</p>","parent_name":"MBColombiaIdBackRecognizer"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)cameraPreset":{"name":"cameraPreset","abstract":"<p>Camera preset. With this property you can set the resolution of the camera</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)cameraType":{"name":"cameraType","abstract":"<p>Camera type. You can choose between front and back facing.</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)autofocusInterval":{"name":"autofocusInterval","abstract":"<p>Interval between forcing two camera focuses. If &lt;= 0, forced focuses arent performed","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)cameraAutofocusRestriction":{"name":"cameraAutofocusRestriction","abstract":"<p>Range restriction for camera autofocus.</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)videoGravity":{"name":"videoGravity","abstract":"<p>Gravity of Camera preview on screen.</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)focusPoint":{"name":"focusPoint","abstract":"<p>Point against which the autofocus will be performed</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)cameraMirroredHorizontally":{"name":"cameraMirroredHorizontally","abstract":"<p>Tells whether camera input images should be mirrored horizontally before processing</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(py)cameraMirroredVertically":{"name":"cameraMirroredVertically","abstract":"<p>Tells whether camera input images should be mirrored vertically before processing</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(im)init":{"name":"-init","abstract":"<p>Designated initializer. Initializes the object with default settings (see above for defaults)</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(im)calcSessionPreset":{"name":"-calcSessionPreset","abstract":"<p>Returns an optimal AVFoundation session preset based on cameraPreset value.</p>","parent_name":"MBCameraSettings"},"Classes/MBCameraSettings.html#/c:objc(cs)MBCameraSettings(im)calcAutofocusRangeRestriction":{"name":"-calcAutofocusRangeRestriction","abstract":"<p>Returns an optimal AVFoundation autofocus range restriction value based on cameraAutofocusRestriction.</p>","parent_name":"MBCameraSettings"},"Classes/MBBlinkInputRecognizerResult.html#/c:objc(cs)MBBlinkInputRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBBlinkInputRecognizerResult"},"Classes/MBBlinkInputRecognizer.html#/c:objc(cs)MBBlinkInputRecognizer(im)initWithProcessors:":{"name":"-initWithProcessors:","abstract":"<p>Undocumented</p>","parent_name":"MBBlinkInputRecognizer"},"Classes/MBBlinkInputRecognizer.html#/c:objc(cs)MBBlinkInputRecognizer(py)processors":{"name":"processors","abstract":"<p>Getting array of readonly processors</p>","parent_name":"MBBlinkInputRecognizer"},"Classes/MBBlinkInputRecognizer.html#/c:objc(cs)MBBlinkInputRecognizer(py)result":{"name":"result","abstract":"<p>BlinkInput recognizer results</p>","parent_name":"MBBlinkInputRecognizer"},"Classes/MBBaseOverlaySettings.html#/c:objc(cs)MBBaseOverlaySettings(py)autorotateOverlay":{"name":"autorotateOverlay","abstract":"<p>If YES, Overlay View Controller will be autorotated independently of ScanningViewController.</p>","parent_name":"MBBaseOverlaySettings"},"Classes/MBBaseOverlaySettings.html#/c:objc(cs)MBBaseOverlaySettings(py)showStatusBar":{"name":"showStatusBar","abstract":"<p>If YES, default camera overlay will display Status bar.","parent_name":"MBBaseOverlaySettings"},"Classes/MBBaseOverlaySettings.html#/c:objc(cs)MBBaseOverlaySettings(py)supportedOrientations":{"name":"supportedOrientations","abstract":"<p>Default: UIInterfaceOrientationMaskPortrait</p>","parent_name":"MBBaseOverlaySettings"},"Classes/MBBaseOverlaySettings.html#/c:objc(cs)MBBaseOverlaySettings(py)soundFilePath":{"name":"soundFilePath","abstract":"<p>Full path to the sound file which is played when the valid result is scanned.</p>","parent_name":"MBBaseOverlaySettings"},"Classes/MBBaseOverlaySettings.html#/c:objc(cs)MBBaseOverlaySettings(py)displayCancelButton":{"name":"displayCancelButton","abstract":"<p>Default: YES.</p>","parent_name":"MBBaseOverlaySettings"},"Classes/MBBaseOverlaySettings.html#/c:objc(cs)MBBaseOverlaySettings(py)displayTorchButton":{"name":"displayTorchButton","abstract":"<p>Default: YES.</p>","parent_name":"MBBaseOverlaySettings"},"Classes/MBBaseOcrOverlaySettings.html#/c:objc(cs)MBBaseOcrOverlaySettings(py)showOcrDots":{"name":"showOcrDots","abstract":"<p>Property that enables showing of flashing dots over characters being scanned.</p>","parent_name":"MBBaseOcrOverlaySettings"},"Classes/MBBaseOcrEngineOptions.html#/c:objc(cs)MBBaseOcrEngineOptions(py)maxCharsExpected":{"name":"maxCharsExpected","abstract":"<p>Maximal chars expected on the image.</p>","parent_name":"MBBaseOcrEngineOptions"},"Classes/MBBaseOcrEngineOptions.html#/c:objc(cs)MBBaseOcrEngineOptions(py)colorDropoutEnabled":{"name":"colorDropoutEnabled","abstract":"<p>Specifies if the additional image processing which drops the background colors should be performed.</p>","parent_name":"MBBaseOcrEngineOptions"},"Classes/MBBarcodeRecognizerResult.html#/c:objc(cs)MBBarcodeRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBBarcodeRecognizerResult"},"Classes/MBBarcodeRecognizerResult.html#/c:objc(cs)MBBarcodeRecognizerResult(py)rawData":{"name":"rawData","abstract":"<p>Byte array with result of the scan</p>","parent_name":"MBBarcodeRecognizerResult"},"Classes/MBBarcodeRecognizerResult.html#/c:objc(cs)MBBarcodeRecognizerResult(py)stringData":{"name":"stringData","abstract":"<p>Retrieves string content of scanned data</p>","parent_name":"MBBarcodeRecognizerResult"},"Classes/MBBarcodeRecognizerResult.html#/c:objc(cs)MBBarcodeRecognizerResult(py)uncertain":{"name":"uncertain","abstract":"<p>Flag indicating uncertain scanning data","parent_name":"MBBarcodeRecognizerResult"},"Classes/MBBarcodeRecognizerResult.html#/c:objc(cs)MBBarcodeRecognizerResult(cm)toTypeName:":{"name":"+toTypeName:","abstract":"<p>Method which gives string representation for a given PPBarcodeType enum value.</p>","parent_name":"MBBarcodeRecognizerResult"},"Classes/MBBarcodeRecognizerResult.html#/c:objc(cs)MBBarcodeRecognizerResult(py)barcodeType":{"name":"barcodeType","abstract":"<p>Type of the barcode scanned</p>","parent_name":"MBBarcodeRecognizerResult"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)result":{"name":"result","abstract":"<p>Barcode recognizer results</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanAztecCode":{"name":"scanAztecCode","abstract":"<p>Set this to YES to scan Aztec 2D barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanCode128":{"name":"scanCode128","abstract":"<p>Set this to YES to scan Code 128 1D barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanCode39":{"name":"scanCode39","abstract":"<p>Set this to YES to scan Code 39 1D barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanDataMatrix":{"name":"scanDataMatrix","abstract":"<p>Set this to YES to scan DataMatrix 2D barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanEan13":{"name":"scanEan13","abstract":"<p>Set this to YES to scan EAN 13 barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanEan8":{"name":"scanEan8","abstract":"<p>Set this to YES to scan EAN8 barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanItf":{"name":"scanItf","abstract":"<p>Set this to YES to scan ITF barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanQrCode":{"name":"scanQrCode","abstract":"<p>Set this to YES to scan QR barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanUpca":{"name":"scanUpca","abstract":"<p>Set this to YES to scan UPCA barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanUpce":{"name":"scanUpce","abstract":"<p>Set this to YES to scan UPCE barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanPdf417":{"name":"scanPdf417","abstract":"<p>Set this to YES to scan Pdf417 barcodes</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)slowerThoroughScan":{"name":"slowerThoroughScan","abstract":"<p>Set this to YES to allow slower, but better image processing.</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)autoScaleDetection":{"name":"autoScaleDetection","abstract":"<p>Allow enabling the autodetection of image scale when scanning barcodes.","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)readCode39AsExtendedData":{"name":"readCode39AsExtendedData","abstract":"<p>Enable reading code39 barcode contents as extended data. For more information about code39","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanInverse":{"name":"scanInverse","abstract":"<p>Set this to YES to allow scanning barcodes with inverted intensities","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)scanUncertain":{"name":"scanUncertain","abstract":"<p>Set this to YES to scan even barcode not compliant with standards","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)nullQuietZoneAllowed":{"name":"nullQuietZoneAllowed","abstract":"<p>Set this to YES to scan barcodes which don&rsquo;t have quiet zone (white area) around it</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeRecognizer.html#/c:objc(cs)MBBarcodeRecognizer(py)manateeLicenseKey":{"name":"manateeLicenseKey","abstract":"<p>Set manatee license key and unlock the aztec scanning feature.</p>","parent_name":"MBBarcodeRecognizer"},"Classes/MBBarcodeOverlayViewController.html#/c:objc(cs)MBBarcodeOverlayViewController(py)settings":{"name":"settings","abstract":"<p>Common settings</p>","parent_name":"MBBarcodeOverlayViewController"},"Classes/MBBarcodeOverlayViewController.html#/c:objc(cs)MBBarcodeOverlayViewController(py)delegate":{"name":"delegate","abstract":"<p>Delegate</p>","parent_name":"MBBarcodeOverlayViewController"},"Classes/MBBarcodeOverlayViewController.html#/c:objc(cs)MBBarcodeOverlayViewController(im)initWithSettings:recognizerCollection:delegate:":{"name":"-initWithSettings:recognizerCollection:delegate:","abstract":"<p>Designated intializer.</p>","parent_name":"MBBarcodeOverlayViewController"},"Classes/MBBarcodeOverlaySettings.html#/c:objc(cs)MBBarcodeOverlaySettings(py)displayBarcodeDots":{"name":"displayBarcodeDots","abstract":"<p>Undocumented</p>","parent_name":"MBBarcodeOverlaySettings"},"Classes/MBBarcodeOverlaySettings.html#/c:objc(cs)MBBarcodeOverlaySettings(py)displayViewfinder":{"name":"displayViewfinder","abstract":"<p>Undocumented</p>","parent_name":"MBBarcodeOverlaySettings"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)mrzResult":{"name":"mrzResult","abstract":"<p>The mrz of the back side of Austria Passport.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The surname of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)givenName":{"name":"givenName","abstract":"<p>The given Name of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationality of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place Of Birth of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing Authority of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)height":{"name":"height","abstract":"<p>The height of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)passportNumber":{"name":"passportNumber","abstract":"<p>The passport Number of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)dateOfIssue":{"name":"dateOfIssue","abstract":"<p>The date Of Issue of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date Of Birth of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizerResult.html#/c:objc(cs)MBAustriaPassportRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date Of Expiry of the Aus Passport owner.</p>","parent_name":"MBAustriaPassportRecognizerResult"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)result":{"name":"result","abstract":"<p>Result of scanning Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s surname should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractGivenName":{"name":"extractGivenName","abstract":"<p>Defines if owner&rsquo;s given name should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractIssuingAuthority":{"name":"extractIssuingAuthority","abstract":"<p>Defines if issuing authority should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractHeight":{"name":"extractHeight","abstract":"<p>Defines if owner&rsquo;s height should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractPassportNumber":{"name":"extractPassportNumber","abstract":"<p>Defines if passport number should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if owner&rsquo;s date of birth should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaPassportRecognizer.html#/c:objc(cs)MBAustriaPassportRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Austrian Passport</p>","parent_name":"MBAustriaPassportRecognizer"},"Classes/MBAustriaIdFrontRecognizerResult.html#/c:objc(cs)MBAustriaIdFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaIdFrontRecognizerResult"},"Classes/MBAustriaIdFrontRecognizerResult.html#/c:objc(cs)MBAustriaIdFrontRecognizerResult(py)givenName":{"name":"givenName","abstract":"<p>The first name of the Austrian Id owner.</p>","parent_name":"MBAustriaIdFrontRecognizerResult"},"Classes/MBAustriaIdFrontRecognizerResult.html#/c:objc(cs)MBAustriaIdFrontRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The last name of the Austrian Id owner.</p>","parent_name":"MBAustriaIdFrontRecognizerResult"},"Classes/MBAustriaIdFrontRecognizerResult.html#/c:objc(cs)MBAustriaIdFrontRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Austrian Id.</p>","parent_name":"MBAustriaIdFrontRecognizerResult"},"Classes/MBAustriaIdFrontRecognizerResult.html#/c:objc(cs)MBAustriaIdFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of the Austrian Id owner.</p>","parent_name":"MBAustriaIdFrontRecognizerResult"},"Classes/MBAustriaIdFrontRecognizerResult.html#/c:objc(cs)MBAustriaIdFrontRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Austrian Id owner.</p>","parent_name":"MBAustriaIdFrontRecognizerResult"},"Classes/MBAustriaIdFrontRecognizer.html#/c:objc(cs)MBAustriaIdFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaIdFrontRecognizer"},"Classes/MBAustriaIdFrontRecognizer.html#/c:objc(cs)MBAustriaIdFrontRecognizer(py)result":{"name":"result","abstract":"<p>Austrian Id Front recognizer result</p>","parent_name":"MBAustriaIdFrontRecognizer"},"Classes/MBAustriaIdFrontRecognizer.html#/c:objc(cs)MBAustriaIdFrontRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if sex of Austrian Id owner should be extracted</p>","parent_name":"MBAustriaIdFrontRecognizer"},"Classes/MBAustriaIdFrontRecognizer.html#/c:objc(cs)MBAustriaIdFrontRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if surname of Austrian Id owner should be extracted</p>","parent_name":"MBAustriaIdFrontRecognizer"},"Classes/MBAustriaIdFrontRecognizer.html#/c:objc(cs)MBAustriaIdFrontRecognizer(py)extractGivenName":{"name":"extractGivenName","abstract":"<p>Defines if given name of Austrian Id owner should be extracted</p>","parent_name":"MBAustriaIdFrontRecognizer"},"Classes/MBAustriaIdFrontRecognizer.html#/c:objc(cs)MBAustriaIdFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of birth should be extracted from Austrian ID</p>","parent_name":"MBAustriaIdFrontRecognizer"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)mrzResult":{"name":"mrzResult","abstract":"<p>The mrz on the back side of Austrian ID.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The Document Number of Austrian ID.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The Issuing Authority of Austrian ID.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The Place Of Birth of Austrian ID owner.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)principalResidence":{"name":"principalResidence","abstract":"<p>The Principal Residence of Austrian ID owner.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)height":{"name":"height","abstract":"<p>The Height of Austrian ID owner.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)dateOfIssuance":{"name":"dateOfIssuance","abstract":"<p>The Date Of Issuance of Austrian ID.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizerResult.html#/c:objc(cs)MBAustriaIdBackRecognizerResult(py)eyeColour":{"name":"eyeColour","abstract":"<p>The Eye Colour of Austrian ID owner.</p>","parent_name":"MBAustriaIdBackRecognizerResult"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(py)result":{"name":"result","abstract":"<p>Result of scanning back of the Austrian ID</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(py)extractIssuingAuthority":{"name":"extractIssuingAuthority","abstract":"<p>Defines if issuing authority should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(py)extractDateOfIssuance":{"name":"extractDateOfIssuance","abstract":"<p>Defines if date of issuance should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(py)extractPrincipalResidence":{"name":"extractPrincipalResidence","abstract":"<p>Defines if owner&rsquo;s principal residence should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaIdBackRecognizer.html#/c:objc(cs)MBAustriaIdBackRecognizer(py)extractHeight":{"name":"extractHeight","abstract":"<p>Defines if owner&rsquo;s height should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaIdBackRecognizer"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)givenName":{"name":"givenName","abstract":"<p>The gien name of the Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)surname":{"name":"surname","abstract":"<p>The surname of the Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)documentNumber":{"name":"documentNumber","abstract":"<p>The document number of the Austrian ID.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)nationality":{"name":"nationality","abstract":"<p>The nationaliy of the Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)sex":{"name":"sex","abstract":"<p>The sex of the Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Austrian ID owner</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)placeOfBirth":{"name":"placeOfBirth","abstract":"<p>The place of birth of the Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)issuingAuthority":{"name":"issuingAuthority","abstract":"<p>The issuing authority of Austrian ID.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)principalResidence":{"name":"principalResidence","abstract":"<p>The principal residence of the Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)height":{"name":"height","abstract":"<p>The height of Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)dateOfIssuance":{"name":"dateOfIssuance","abstract":"<p>The date of issuance of the Austrian ID</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The date of expiry of Austrian ID</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)eyeColour":{"name":"eyeColour","abstract":"<p>The eye eyeColour of Austrian ID owner.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizerResult.html#/c:objc(cs)MBAustriaCombinedRecognizerResult(py)mrtdVerified":{"name":"mrtdVerified","abstract":"<p>Whether check digits in machine readable zone of the Austrian ID are OK.</p>","parent_name":"MBAustriaCombinedRecognizerResult"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)result":{"name":"result","abstract":"<p>Austrian ID Combined recognizer result</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractIssuingAuthority":{"name":"extractIssuingAuthority","abstract":"<p>Defines if issuing authority should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractDateOfIssuance":{"name":"extractDateOfIssuance","abstract":"<p>Defines if date of issuance should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractPlaceOfBirth":{"name":"extractPlaceOfBirth","abstract":"<p>Defines if owner&rsquo;s place of birth should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractPrincipalResidence":{"name":"extractPrincipalResidence","abstract":"<p>Defines if owner&rsquo;s principal residence should be extracted from back side of Austrian ID</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractHeight":{"name":"extractHeight","abstract":"<p>Defines if owner&rsquo;s height should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractSex":{"name":"extractSex","abstract":"<p>Defines if owner&rsquo;s sex should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractSurname":{"name":"extractSurname","abstract":"<p>Defines if owner&rsquo;s surname should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractGivenName":{"name":"extractGivenName","abstract":"<p>Defines if owner&rsquo;s given name should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if ownder&rsquo;s date of birth should be extracted</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractNationality":{"name":"extractNationality","abstract":"<p>Defines if owner&rsquo;s nationality should be extracted from Austrian Passport</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractDateOfIssue":{"name":"extractDateOfIssue","abstract":"<p>Defines if date of issue should be extracted from Austrian Passport</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractPassportNumber":{"name":"extractPassportNumber","abstract":"<p>Defines if passport number should be extracted from Austrian Passport</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustriaCombinedRecognizer.html#/c:objc(cs)MBAustriaCombinedRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Austrian Passport</p>","parent_name":"MBAustriaCombinedRecognizer"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)name":{"name":"name","abstract":"<p>The first name of the Australian DL owner.</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)licenceType":{"name":"licenceType","abstract":"<p>The licence type of Australian DL.</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)licenceNumber":{"name":"licenceNumber","abstract":"<p>The licence number of the Australian DL owner.</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Australian DL owner.</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)rawDateOfBirth":{"name":"rawDateOfBirth","abstract":"<p>The date of birth of Australian DL owner in DD.MM.yyyy format.</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)dateOfBirth":{"name":"dateOfBirth","abstract":"<p>The date of birth of Australian DL owner</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)rawDocumentDateOfExpiry":{"name":"rawDocumentDateOfExpiry","abstract":"<p>The document date of expiry of the Australian DL in DD.MM.yyyy format.</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizerResult.html#/c:objc(cs)MBAustraliaDlFrontRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The document date of expiry of the Australian DL</p>","parent_name":"MBAustraliaDlFrontRecognizerResult"},"Classes/MBAustraliaDlFrontRecognizer.html#/c:objc(cs)MBAustraliaDlFrontRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustraliaDlFrontRecognizer"},"Classes/MBAustraliaDlFrontRecognizer.html#/c:objc(cs)MBAustraliaDlFrontRecognizer(py)result":{"name":"result","abstract":"<p>Australia DL Front recognizer result</p>","parent_name":"MBAustraliaDlFrontRecognizer"},"Classes/MBAustraliaDlFrontRecognizer.html#/c:objc(cs)MBAustraliaDlFrontRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if sex of Australian DL owner should be extracted</p>","parent_name":"MBAustraliaDlFrontRecognizer"},"Classes/MBAustraliaDlFrontRecognizer.html#/c:objc(cs)MBAustraliaDlFrontRecognizer(py)extractLicenceNumber":{"name":"extractLicenceNumber","abstract":"<p>Defines if citizenship of Australian DL owner should be extracted</p>","parent_name":"MBAustraliaDlFrontRecognizer"},"Classes/MBAustraliaDlFrontRecognizer.html#/c:objc(cs)MBAustraliaDlFrontRecognizer(py)extractDateOfBirth":{"name":"extractDateOfBirth","abstract":"<p>Defines if date of birth of Australian DL owner should be extracted</p>","parent_name":"MBAustraliaDlFrontRecognizer"},"Classes/MBAustraliaDlFrontRecognizer.html#/c:objc(cs)MBAustraliaDlFrontRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Australian DL</p>","parent_name":"MBAustraliaDlFrontRecognizer"},"Classes/MBAustraliaDlBackRecognizerResult.html#/c:objc(cs)MBAustraliaDlBackRecognizerResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustraliaDlBackRecognizerResult"},"Classes/MBAustraliaDlBackRecognizerResult.html#/c:objc(cs)MBAustraliaDlBackRecognizerResult(py)lastName":{"name":"lastName","abstract":"<p>The last name of the Australian DL owner.</p>","parent_name":"MBAustraliaDlBackRecognizerResult"},"Classes/MBAustraliaDlBackRecognizerResult.html#/c:objc(cs)MBAustraliaDlBackRecognizerResult(py)licenceNumber":{"name":"licenceNumber","abstract":"<p>The licence number of the Australian DL owner.</p>","parent_name":"MBAustraliaDlBackRecognizerResult"},"Classes/MBAustraliaDlBackRecognizerResult.html#/c:objc(cs)MBAustraliaDlBackRecognizerResult(py)address":{"name":"address","abstract":"<p>The address of the Australian DL owner.</p>","parent_name":"MBAustraliaDlBackRecognizerResult"},"Classes/MBAustraliaDlBackRecognizerResult.html#/c:objc(cs)MBAustraliaDlBackRecognizerResult(py)rawDocumentDateOfExpiry":{"name":"rawDocumentDateOfExpiry","abstract":"<p>The document date of expiry of the Australian DL in DD.MM.yyyy format.</p>","parent_name":"MBAustraliaDlBackRecognizerResult"},"Classes/MBAustraliaDlBackRecognizerResult.html#/c:objc(cs)MBAustraliaDlBackRecognizerResult(py)dateOfExpiry":{"name":"dateOfExpiry","abstract":"<p>The document date of expiry of the Australian DL</p>","parent_name":"MBAustraliaDlBackRecognizerResult"},"Classes/MBAustraliaDlBackRecognizer.html#/c:objc(cs)MBAustraliaDlBackRecognizer(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAustraliaDlBackRecognizer"},"Classes/MBAustraliaDlBackRecognizer.html#/c:objc(cs)MBAustraliaDlBackRecognizer(py)result":{"name":"result","abstract":"<p>Australia DL Back recognizer result</p>","parent_name":"MBAustraliaDlBackRecognizer"},"Classes/MBAustraliaDlBackRecognizer.html#/c:objc(cs)MBAustraliaDlBackRecognizer(py)extractLastName":{"name":"extractLastName","abstract":"<p>Defines if last name of Australian DL owner should be extracted</p>","parent_name":"MBAustraliaDlBackRecognizer"},"Classes/MBAustraliaDlBackRecognizer.html#/c:objc(cs)MBAustraliaDlBackRecognizer(py)extractAddress":{"name":"extractAddress","abstract":"<p>Defines if sex of Australian DL owner should be extracted</p>","parent_name":"MBAustraliaDlBackRecognizer"},"Classes/MBAustraliaDlBackRecognizer.html#/c:objc(cs)MBAustraliaDlBackRecognizer(py)extractDateOfExpiry":{"name":"extractDateOfExpiry","abstract":"<p>Defines if date of expiry should be extracted from Australian DL</p>","parent_name":"MBAustraliaDlBackRecognizer"},"Classes/MBAmountParserResult.html#/c:objc(cs)MBAmountParserResult(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAmountParserResult"},"Classes/MBAmountParserResult.html#/c:objc(cs)MBAmountParserResult(py)amount":{"name":"amount","abstract":"<p>Returns the recognized amount number or empty string if recognition failed.</p>","parent_name":"MBAmountParserResult"},"Classes/MBAmountParser.html#/c:objc(cs)MBAmountParser(im)init":{"name":"-init","abstract":"<p>Undocumented</p>","parent_name":"MBAmountParser"},"Classes/MBAmountParser.html#/c:objc(cs)MBAmountParser(py)result":{"name":"result","abstract":"<p>Amount parser result</p>","parent_name":"MBAmountParser"},"Classes/MBAmountParser.html#/c:objc(cs)MBAmountParser(py)allowNegativeAmounts":{"name":"allowNegativeAmounts","abstract":"<p>Indicates whether negative values are accepted as valid amounts.","parent_name":"MBAmountParser"},"Classes/MBAmountParser.html#/c:objc(cs)MBAmountParser(py)allowSpaceSeparators":{"name":"allowSpaceSeparators","abstract":"<p>Indicates whether amounts with space separators between groups of digits(thousands) are allowed.</p>","parent_name":"MBAmountParser"},"Classes/MBAmountParser.html#/c:objc(cs)MBAmountParser(py)allowMissingDecimals":{"name":"allowMissingDecimals","abstract":"<p>Indicates whether amounts without decimal are accepted as valid. For example 1.465 is","parent_name":"MBAmountParser"},"Classes/MBAmountParser.html#/c:objc(cs)MBAmountParser(py)arabicIndicMode":{"name":"arabicIndicMode","abstract":"<p>Indicates whether Arabic-Indic mode is enabled. In Arabic-Indic mode parser can recognize","parent_name":"MBAmountParser"},"Classes/MBAmountParser.html":{"name":"MBAmountParser","abstract":"<p>MBAmountParser is used for extracting amount from OCR result</p>"},"Classes/MBAmountParserResult.html":{"name":"MBAmountParserResult","abstract":"<p>MBAmountParser is used for extracting amount from OCR result</p>"},"Classes/MBAustraliaDlBackRecognizer.html":{"name":"MBAustraliaDlBackRecognizer","abstract":"<p>Class for configuring Australia DL Back Recognizer.</p>"},"Classes/MBAustraliaDlBackRecognizerResult.html":{"name":"MBAustraliaDlBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Australia DL</p>"},"Classes/MBAustraliaDlFrontRecognizer.html":{"name":"MBAustraliaDlFrontRecognizer","abstract":"<p>Class for configuring Australia DL Front Recognizer.</p>"},"Classes/MBAustraliaDlFrontRecognizerResult.html":{"name":"MBAustraliaDlFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Australia DL</p>"},"Classes/MBAustriaCombinedRecognizer.html":{"name":"MBAustriaCombinedRecognizer","abstract":"<p>Austrian ID Combined Recognizer.</p>"},"Classes/MBAustriaCombinedRecognizerResult.html":{"name":"MBAustriaCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Austria ID.</p>"},"Classes/MBAustriaIdBackRecognizer.html":{"name":"MBAustriaIdBackRecognizer","abstract":"<p>Class for configuring Austrian ID Back Recognizer.</p>"},"Classes/MBAustriaIdBackRecognizerResult.html":{"name":"MBAustriaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Austrian ID</p>"},"Classes/MBAustriaIdFrontRecognizer.html":{"name":"MBAustriaIdFrontRecognizer","abstract":"<p>Class for configuring Austrian ID Front Recognizer.</p>"},"Classes/MBAustriaIdFrontRecognizerResult.html":{"name":"MBAustriaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Aus ID</p>"},"Classes/MBAustriaPassportRecognizer.html":{"name":"MBAustriaPassportRecognizer","abstract":"<p>Class for configuring Austrian Passport Recognizer.</p>"},"Classes/MBAustriaPassportRecognizerResult.html":{"name":"MBAustriaPassportRecognizerResult","abstract":"<p>Class representing values obtained when scanning Aus Passport</p>"},"Classes/MBBarcodeOverlaySettings.html":{"name":"MBBarcodeOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes/MBBarcodeOverlayViewController.html":{"name":"MBBarcodeOverlayViewController","abstract":"<p>Undocumented</p>"},"Classes/MBBarcodeRecognizer.html":{"name":"MBBarcodeRecognizer","abstract":"<p>MBBarcodeRecognizer is used for scanning most of 1D barcode formats, and 2D format"},"Classes/MBBarcodeRecognizerResult.html":{"name":"MBBarcodeRecognizerResult","abstract":"<p>Result of MBBarcodeRecognizer; is used for scanning most of 1D barcode formats, and 2D format"},"Classes/MBBaseOcrEngineOptions.html":{"name":"MBBaseOcrEngineOptions","abstract":"<p>Options used for OCR process. These options enable you to customize how some OCR parsers work."},"Classes/MBBaseOcrOverlaySettings.html":{"name":"MBBaseOcrOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes/MBBaseOverlaySettings.html":{"name":"MBBaseOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes.html#/c:objc(cs)MBBaseOverlayViewController":{"name":"MBBaseOverlayViewController","abstract":"<p>Common base class for default overlay view controllers</p>"},"Classes/MBBlinkInputRecognizer.html":{"name":"MBBlinkInputRecognizer","abstract":"<p>A recognizer for BlinkInput API and general OCR recognition</p>"},"Classes/MBBlinkInputRecognizerResult.html":{"name":"MBBlinkInputRecognizerResult","abstract":"<p>A recognizer result for BlinkInput API and general OCR recognition</p>"},"Classes/MBCameraSettings.html":{"name":"MBCameraSettings","abstract":"<p>Settings class containing parameters for camera capture</p>"},"Classes/MBColombiaIdBackRecognizer.html":{"name":"MBColombiaIdBackRecognizer","abstract":"<p>Class for configuring Colombia ID Back Recognizer.</p>"},"Classes/MBColombiaIdBackRecognizerResult.html":{"name":"MBColombiaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Colombia ID</p>"},"Classes/MBColombiaIdFrontRecognizer.html":{"name":"MBColombiaIdFrontRecognizer","abstract":"<p>Class for configuring Colombia ID Front Recognizer.</p>"},"Classes/MBColombiaIdFrontRecognizerResult.html":{"name":"MBColombiaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Colombia ID</p>"},"Classes/MBCroatiaCombinedRecognizer.html":{"name":"MBCroatiaCombinedRecognizer","abstract":"<p>Croatian ID Combined Recognizer.</p>"},"Classes/MBCroatiaCombinedRecognizerResult.html":{"name":"MBCroatiaCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Croatian ID.</p>"},"Classes/MBCroatiaIdBackRecognizer.html":{"name":"MBCroatiaIdBackRecognizer","abstract":"<p>Croatian ID Back Recognizer.</p>"},"Classes/MBCroatiaIdBackRecognizerResult.html":{"name":"MBCroatiaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Croatian ID</p>"},"Classes/MBCroatiaIdFrontRecognizer.html":{"name":"MBCroatiaIdFrontRecognizer","abstract":"<p>Croatian ID Front Recognizer.</p>"},"Classes/MBCroatiaIdFrontRecognizerResult.html":{"name":"MBCroatiaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Croatian ID</p>"},"Classes/MBCustomOverlayViewController.html":{"name":"MBCustomOverlayViewController","abstract":"<p>Custom Overlay View Controller is an abstract class for all custom overlay views placed on top View Controller."},"Classes/MBCzechiaCombinedRecognizer.html":{"name":"MBCzechiaCombinedRecognizer","abstract":"<p>Czech ID Combined Recognizer.</p>"},"Classes/MBCzechiaCombinedRecognizerResult.html":{"name":"MBCzechiaCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Czech ID.</p>"},"Classes/MBCzechiaIdBackRecognizer.html":{"name":"MBCzechiaIdBackRecognizer","abstract":"<p>Class for configuring Cz ID Back Recognizer.</p>"},"Classes/MBCzechiaIdBackRecognizerResult.html":{"name":"MBCzechiaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Cz ID</p>"},"Classes/MBCzechiaIdFrontRecognizer.html":{"name":"MBCzechiaIdFrontRecognizer","abstract":"<p>Class for configuring Cz ID Front Recognizer.</p>"},"Classes/MBCzechiaIdFrontRecognizerResult.html":{"name":"MBCzechiaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Cz ID</p>"},"Classes/MBDPIBasedDewarpPolicy.html":{"name":"MBDPIBasedDewarpPolicy","abstract":"<p>DPI based dewarp policy. Dewarp height will be calculated based on"},"Classes/MBDateParser.html":{"name":"MBDateParser","abstract":"<p>MBDateParser that can extract date from OCR result.</p>"},"Classes/MBDateParserResult.html":{"name":"MBDateParserResult","abstract":"<p>MBDateParser that can extract date from OCR result.</p>"},"Classes/MBDateResult.html":{"name":"MBDateResult","abstract":"<p>This class represents a Date result scanned from the image. It supports obtaining raw NSDates, or raw strings"},"Classes/MBDeepOcrEngineOptions.html":{"name":"MBDeepOcrEngineOptions","abstract":"<p>Options used for OCR process. These options enable you to customize how some OCR parsers work."},"Classes/MBDetector.html":{"name":"MBDetector","abstract":"<p>Base class for all detectors</p>"},"Classes/MBDetectorRecognizer.html":{"name":"MBDetectorRecognizer","abstract":"<p>Recognizer for scanning generic documents using custom MBDetector.</p>"},"Classes/MBDetectorRecognizerResult.html":{"name":"MBDetectorRecognizerResult","abstract":"<p>Result of MBDetectorRecognizer</p>"},"Classes/MBDetectorResult.html":{"name":"MBDetectorResult","abstract":"<p>Base class for all detectors results</p>"},"Classes/MBDewarpPolicy.html":{"name":"MBDewarpPolicy","abstract":"<p>Base class for all dewarp policies</p>"},"Classes/MBDisplayableDetection.html":{"name":"MBDisplayableDetection","abstract":"<p>Represents a detection that can be displayed on screen.</p>"},"Classes/MBDisplayableObject.html":{"name":"MBDisplayableObject","abstract":"<p>Represents any object that can be displayed on screen in terms of drawing.</p>"},"Classes/MBDisplayablePointsDetection.html":{"name":"MBDisplayablePointsDetection","abstract":"<p>Result of the detection of a point detector. Point Detectors are used for QR and similar barcodes</p>"},"Classes/MBDisplayableQuadDetection.html":{"name":"MBDisplayableQuadDetection","abstract":"<p>Represents a detection that can be displayed on screen.</p>"},"Classes/MBDocumentDetector.html":{"name":"MBDocumentDetector","abstract":"<p>Detector that can perform detection of card documents, cheques, papers, etc.</p>"},"Classes/MBDocumentDetectorResult.html":{"name":"MBDocumentDetectorResult","abstract":"<p>Detector that can perform detection of card documents, cheques, papers, etc.</p>"},"Classes/MBDocumentFaceRecognizer.html":{"name":"MBDocumentFaceRecognizer","abstract":"<p>Class for configuring Document Face Recognizer Recognizer.</p>"},"Classes/MBDocumentFaceRecognizerResult.html":{"name":"MBDocumentFaceRecognizerResult","abstract":"<p>Class representing values obtained when scanning Document Face Recognizer</p>"},"Classes/MBDocumentOverlaySettings.html":{"name":"MBDocumentOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes/MBDocumentOverlayViewController.html":{"name":"MBDocumentOverlayViewController","abstract":"<p>Default overlay when using ID card recognizers.</p>"},"Classes/MBDocumentSpecification.html":{"name":"MBDocumentSpecification","abstract":"<p>Document class describes a document which is being detected by DocumentDetector."},"Classes/MBDocumentSubview.html":{"name":"MBDocumentSubview","abstract":"<p>Overlay subview presenting the viewfinder for scanning ID documents</p>"},"Classes/MBDocumentVerificationInstructionsSubview.html":{"name":"MBDocumentVerificationInstructionsSubview","abstract":"<p>Undocumented</p>"},"Classes/MBDocumentVerificationOverlaySettings.html":{"name":"MBDocumentVerificationOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes/MBDocumentVerificationOverlayViewController.html":{"name":"MBDocumentVerificationOverlayViewController","abstract":"<p>Default overlay when using ID card combined recognizers for verification.</p>"},"Classes/MBDocumentVerificationSubview.html":{"name":"MBDocumentVerificationSubview","abstract":"<p>Undocumented</p>"},"Classes/MBDotsResultSubview.html":{"name":"MBDotsResultSubview","abstract":"<p>Overlay subview presenting status of OCR detection. Dots are displayed over locations of detected characters.</p>"},"Classes/MBDotsSubview.html":{"name":"MBDotsSubview","abstract":"<p>A wrapper around CAShapeLayer which is used for presenting a status about barcode detections</p>"},"Classes/MBEgyptIdFrontRecognizer.html":{"name":"MBEgyptIdFrontRecognizer","abstract":"<p>Class for configuring Egypt ID Front Recognizer.</p>"},"Classes/MBEgyptIdFrontRecognizerResult.html":{"name":"MBEgyptIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Egypt ID</p>"},"Classes/MBEmailParser.html":{"name":"MBEmailParser","abstract":"<p>MBEmailParser is used for parsing emails</p>"},"Classes/MBEmailParserResult.html":{"name":"MBEmailParserResult","abstract":"<p>MBEmailParser is used for parsing emails</p>"},"Classes.html#/c:objc(cs)MBEntity":{"name":"MBEntity","abstract":"<p>Base class for all entities processors, recognizers, detectors&hellip;</p>"},"Classes/MBEudlRecognizer.html":{"name":"MBEudlRecognizer","abstract":"<p>Class for configuring EU Driver License Recognizer.</p>"},"Classes/MBEudlRecognizerResult.html":{"name":"MBEudlRecognizerResult","abstract":"<p>Class representing values obtained when scanning EU Driver License</p>"},"Classes/MBFieldByFieldOverlaySettings.html":{"name":"MBFieldByFieldOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes/MBFieldByFieldOverlayViewController.html":{"name":"MBFieldByFieldOverlayViewController","abstract":"<p>View Controller responsible for view hierarchy for Form OCR scannning."},"Classes/MBFixedDewarpPolicy.html":{"name":"MBFixedDewarpPolicy","abstract":"<p>Fixed dewarp policy. Dewarp height will be exactly as defined by its dewarpHeight.</p>"},"Classes/MBFrameGrabberRecognizer.html":{"name":"MBFrameGrabberRecognizer","abstract":"<p>A recognizer that can returns success frame.</p>"},"Classes/MBGermanyCombinedRecognizer.html":{"name":"MBGermanyCombinedRecognizer","abstract":"<p>German ID Combined Recognizer.</p>"},"Classes/MBGermanyCombinedRecognizerResult.html":{"name":"MBGermanyCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of German ID.</p>"},"Classes/MBGermanyIdBackRecognizer.html":{"name":"MBGermanyIdBackRecognizer","abstract":"<p>Class for configuring German ID Back Recognizer.</p>"},"Classes/MBGermanyIdBackRecognizerResult.html":{"name":"MBGermanyIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of German ID</p>"},"Classes/MBGermanyIdFrontRecognizer.html":{"name":"MBGermanyIdFrontRecognizer","abstract":"<p>Class for configuring German ID Front Recognizer.</p>"},"Classes/MBGermanyIdFrontRecognizerResult.html":{"name":"MBGermanyIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of German ID</p>"},"Classes/MBGermanyOldIdRecognizer.html":{"name":"MBGermanyOldIdRecognizer","abstract":"<p>Class for configuring German Old ID Recognizer.</p>"},"Classes/MBGermanyOldIdRecognizerResult.html":{"name":"MBGermanyOldIdRecognizerResult","abstract":"<p>Class representing values obtained when scanning German Old ID</p>"},"Classes/MBGermanyPassportRecognizer.html":{"name":"MBGermanyPassportRecognizer","abstract":"<p>Class for configuring German Passport Recognizer.</p>"},"Classes/MBGermanyPassportRecognizerResult.html":{"name":"MBGermanyPassportRecognizerResult","abstract":"<p>Class representing values obtained when scanning German Passport</p>"},"Classes/MBGlareStatusSubview.html":{"name":"MBGlareStatusSubview","abstract":"<p>Overlay subview presenting the status of glare detection."},"Classes/MBHongKongIdFrontRecognizer.html":{"name":"MBHongKongIdFrontRecognizer","abstract":"<p>Class for configuring Hong Kong ID Front Recognizer.</p>"},"Classes/MBHongKongIdFrontRecognizerResult.html":{"name":"MBHongKongIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Hong Kong ID</p>"},"Classes/MBIbanParser.html":{"name":"MBIbanParser","abstract":"<p>MBAmountParser that can extract IBAN (International Bank Account Number) from OCR result.</p>"},"Classes/MBIbanParserResult.html":{"name":"MBIbanParserResult","abstract":"<p>MBAmountParser that can extract IBAN (International Bank Account Number) from OCR result.</p>"},"Classes/MBIkadRecognizer.html":{"name":"MBIkadRecognizer","abstract":"<p>Class for configuring i Kad Recognizer.</p>"},"Classes/MBIkadRecognizerResult.html":{"name":"MBIkadRecognizerResult","abstract":"<p>Class representing values obtained when scanning i Kad</p>"},"Classes/MBImage.html":{"name":"MBImage","abstract":"<p>Object which represents an image.</p>"},"Classes/MBImageReturnProcessor.html":{"name":"MBImageReturnProcessor","abstract":"<p>Processor that will simply save given image.</p>"},"Classes/MBImageReturnProcessorResult.html":{"name":"MBImageReturnProcessorResult","abstract":"<p>Processor that will simply save given image.</p>"},"Classes/MBIndonesiaIdFrontRecognizer.html":{"name":"MBIndonesiaIdFrontRecognizer","abstract":"<p>Class for configuring Indonesian ID Front Recognizer.</p>"},"Classes/MBIndonesiaIdFrontRecognizerResult.html":{"name":"MBIndonesiaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Indonesian ID</p>"},"Classes/MBJordanCombinedRecognizer.html":{"name":"MBJordanCombinedRecognizer","abstract":"<p>Jordan ID Combined Recognizer.</p>"},"Classes/MBJordanCombinedRecognizerResult.html":{"name":"MBJordanCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Czech ID.</p>"},"Classes/MBJordanIdBackRecognizer.html":{"name":"MBJordanIdBackRecognizer","abstract":"<p>Class for configuring Jordan ID Back Recognizer.</p>"},"Classes/MBJordanIdBackRecognizerResult.html":{"name":"MBJordanIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Jordan ID</p>"},"Classes/MBJordanIdFrontRecognizer.html":{"name":"MBJordanIdFrontRecognizer","abstract":"<p>Class for configuring Jordan ID Front Recognizer.</p>"},"Classes/MBJordanIdFrontRecognizerResult.html":{"name":"MBJordanIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Jordan ID</p>"},"Classes/MBLegacyMRTDRecognizerResult.html":{"name":"MBLegacyMRTDRecognizerResult","abstract":"<p>Undocumented</p>"},"Classes/MBLegacyRecognizer.html":{"name":"MBLegacyRecognizer","abstract":"<p>Undocumented</p>"},"Classes/MBLegacyRecognizerResult.html":{"name":"MBLegacyRecognizerResult","abstract":"<p>Undocumented</p>"},"Classes/MBLicensePlatesParser.html":{"name":"MBLicensePlatesParser","abstract":"<p>MBLicensePlatesParser is used for parsing license plates</p>"},"Classes/MBLicensePlatesParserResult.html":{"name":"MBLicensePlatesParserResult","abstract":"<p>MBLicensePlatesParser is used for parsing license plates</p>"},"Classes/MBMalaysiaDlFrontRecognizer.html":{"name":"MBMalaysiaDlFrontRecognizer","abstract":"<p>Class for configuring Malaysian DL Front Recognizer.</p>"},"Classes/MBMalaysiaDlFrontRecognizerResult.html":{"name":"MBMalaysiaDlFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Malaysian DL</p>"},"Classes/MBMetadata.html":{"name":"MBMetadata","abstract":"<p>Base class for outputting various data via &lsquo;didOutputMetadata:&rsquo; method</p>"},"Classes/MBMicroblinkApp.html":{"name":"MBMicroblinkApp","abstract":"<p>Undocumented</p>"},"Classes/MBMicroblinkSDK.html":{"name":"MBMicroblinkSDK","abstract":"<p>Entry class for all Microblink SDKs - used for setting up license key and to add support for"},"Classes/MBModernViewfinderSubview.html":{"name":"MBModernViewfinderSubview","abstract":"<p>Overlay subview presenting the status of detection."},"Classes/MBMrtdCombinedRecognizer.html":{"name":"MBMrtdCombinedRecognizer","abstract":"<p>MRTD Combined recognizer</p>"},"Classes/MBMrtdCombinedRecognizerResult.html":{"name":"MBMrtdCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Croatian ID.</p>"},"Classes/MBMrtdDetector.html":{"name":"MBMrtdDetector","abstract":"<p>Detector that can perform detection of Machine Readable Travel Documents (MRTD).</p>"},"Classes/MBMrtdDetectorResult.html":{"name":"MBMrtdDetectorResult","abstract":"<p>Detector that can perform detection of Machine Readable Travel Documents (MRTD).</p>"},"Classes/MBMrtdRecognizer.html":{"name":"MBMrtdRecognizer","abstract":"<p>Recognizer that can recognizer Machine Readable Zone (MRZ) of the Machine Readable Travel Document (MRTD)</p>"},"Classes/MBMrtdRecognizerResult.html":{"name":"MBMrtdRecognizerResult","abstract":"<p>Result of MBMrtdDetectorRecognizer</p>"},"Classes/MBMrtdSpecification.html":{"name":"MBMrtdSpecification","abstract":"<p>Mrtd class describes a document which is being detected by MrtdDetector."},"Classes/MBMrzResult.html":{"name":"MBMrzResult","abstract":"<p>Undocumented</p>"},"Classes/MBMyKadBackRecognizer.html":{"name":"MBMyKadBackRecognizer","abstract":"<p>Class for configuring Kad Back Recognizer.</p>"},"Classes/MBMyKadBackRecognizerResult.html":{"name":"MBMyKadBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of MyKad</p>"},"Classes/MBMyKadFrontRecognizer.html":{"name":"MBMyKadFrontRecognizer","abstract":"<p>Class for configuring My Kad Front Recognizer.</p>"},"Classes/MBMyKadFrontRecognizerResult.html":{"name":"MBMyKadFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of My Kad</p>"},"Classes/MBMyTenteraRecognizer.html":{"name":"MBMyTenteraRecognizer","abstract":"<p>Class for configuring My Tentera Recognizer.</p>"},"Classes/MBMyTenteraRecognizerResult.html":{"name":"MBMyTenteraRecognizerResult","abstract":"<p>Class representing values obtained when scanning My Tentera</p>"},"Classes/MBNewZealandDlFrontRecognizer.html":{"name":"MBNewZealandDlFrontRecognizer","abstract":"<p>Class for configuring New Zealand DL Front Recognizer.</p>"},"Classes/MBNewZealandDlFrontRecognizerResult.html":{"name":"MBNewZealandDlFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of New Zealand DL</p>"},"Classes/MBNoUpScalingDewarpPolicy.html":{"name":"MBNoUpScalingDewarpPolicy","abstract":"<p>No upscaling dewarp policy. Dewarp height will be calculated in a way"},"Classes/MBOcrCharKey.html":{"name":"MBOcrCharKey","abstract":"<p>Class representing a char in specific font.</p>"},"Classes/MBOcrEngineOptions.html":{"name":"MBOcrEngineOptions","abstract":"<p>Options used for OCR process. These options enable you to customize how some OCR parsers work."},"Classes/MBOcrLayout.html":{"name":"MBOcrLayout","abstract":"<p>Class describing the layour of the document on which the OCR was preformed.</p>"},"Classes/MBOcrBlock.html":{"name":"MBOcrBlock","abstract":"<p>Class representing an Ocr Block. Block consists of one or more Ocr Lines.</p>"},"Classes/MBOcrLine.html":{"name":"MBOcrLine","abstract":"<p>Class representing an Ocr line. line consists of one or more Ocr chars</p>"},"Classes/MBCharWithVariants.html":{"name":"MBCharWithVariants","abstract":"<p>Undocumented</p>"},"Classes/MBOcrChar.html":{"name":"MBOcrChar","abstract":"<p>Class representing an individual OCR character obtained in the OCR process.</p>"},"Classes/MBPosition.html":{"name":"MBPosition","abstract":"<p>Class representing a position on the image. It&rsquo;s given as a box, with"},"Classes.html#/c:objc(cs)MBOcrResultSubview":{"name":"MBOcrResultSubview","abstract":"<p>Overlay subview presenting status of OCR detection. OCR results are displayed as green characters over detected locations.</p>"},"Classes/MBOverlaySettings.html":{"name":"MBOverlaySettings","abstract":"<p>Settings class containing UI information</p>"},"Classes/MBOverlayViewController.html":{"name":"MBOverlayViewController","abstract":"<p>Overlay View Controller is an abstract class for all overlay views placed on top View Controller.</p>"},"Classes/MBParser.html":{"name":"MBParser","abstract":"<p>Base class for all parsers</p>"},"Classes/MBParserGroupProcessor.html":{"name":"MBParserGroupProcessor","abstract":"<p>A processor for a group</p>"},"Classes/MBParserGroupProcessorResult.html":{"name":"MBParserGroupProcessorResult","abstract":"<p>A recognizer that can scan PDF417 2D barcodes.</p>"},"Classes/MBParserResult.html":{"name":"MBParserResult","abstract":"<p>Base class for all parser results</p>"},"Classes/MBPdf417Recognizer.html":{"name":"MBPdf417Recognizer","abstract":"<p>A recognizer that can scan PDF417 2D barcodes.</p>"},"Classes/MBPdf417RecognizerResult.html":{"name":"MBPdf417RecognizerResult","abstract":"<p>A recognizer that can scan PDF417 2D barcodes.</p>"},"Classes/MBPolandCombinedRecognizer.html":{"name":"MBPolandCombinedRecognizer","abstract":"<p>Polish ID Combined Recognizer.</p>"},"Classes/MBPolandCombinedRecognizerResult.html":{"name":"MBPolandCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Czech ID.</p>"},"Classes/MBPolandIdBackRecognizer.html":{"name":"MBPolandIdBackRecognizer","abstract":"<p>Class for configuring Polish ID Back Recognizer.</p>"},"Classes/MBPolandIdBackRecognizerResult.html":{"name":"MBPolandIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Polish ID</p>"},"Classes/MBPolandIdFrontRecognizer.html":{"name":"MBPolandIdFrontRecognizer","abstract":"<p>Class for configuring Polish ID Front Recognizer.</p>"},"Classes/MBPolandIdFrontRecognizerResult.html":{"name":"MBPolandIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Polish ID</p>"},"Classes/MBProcessor.html":{"name":"MBProcessor","abstract":"<p>Base class for all processors</p>"},"Classes/MBProcessorGroup.html":{"name":"MBProcessorGroup","abstract":"<p>Class that represents a group of processors that will be executed on same dewarped image.</p>"},"Classes/MBProcessorResult.html":{"name":"MBProcessorResult","abstract":"<p>Base class for all processor results</p>"},"Classes/MBQuadDetector.html":{"name":"MBQuadDetector","abstract":"<p>Base class for all detectors that are used for MBQuadrangle detection.</p>"},"Classes/MBQuadDetectorResult.html":{"name":"MBQuadDetectorResult","abstract":"<p>Base class for all detectors that are used for MBQuadrangle detection.</p>"},"Classes/MBQuadWithSizeDetector.html":{"name":"MBQuadWithSizeDetector","abstract":"<p>Base class for all detectors  that are used for MBQuadrangle"},"Classes/MBQuadWithSizeDetectorResult.html":{"name":"MBQuadWithSizeDetectorResult","abstract":"<p>Base class for all detectors  that are used for MBQuadrangle"},"Classes/MBQuadrangle.html":{"name":"MBQuadrangle","abstract":"<p>Class represents the quadrangle (arbitrary geometric object with 4 different corner points</p>"},"Classes/MBRawParser.html":{"name":"MBRawParser","abstract":"<p>MBRawParser that simply returns the string version of raw OCR result, without performing"},"Classes/MBRawParserResult.html":{"name":"MBRawParserResult","abstract":"<p>MBDateParser that can extract date from OCR result.</p>"},"Classes/MBRecognizer.html":{"name":"MBRecognizer","abstract":"<p>Base class for all recognizers</p>"},"Classes/MBRecognizerCollection.html":{"name":"MBRecognizerCollection","abstract":"<p>Settings class containing settings related to scanner behaviour</p>"},"Classes/MBRecognizerResult.html":{"name":"MBRecognizerResult","abstract":"<p>Base class for all recognizer results</p>"},"Classes/MBRecognizerRunner.html":{"name":"MBRecognizerRunner","abstract":"<p>Factory class containing static methods for creating camera view controllers."},"Classes/MBRecognizerRunnerMetadataDelegates.html":{"name":"MBRecognizerRunnerMetadataDelegates","abstract":"<p>Class containing all metadata delegates</p>"},"Classes/MBRecognizerRunnerViewControllerMetadataDelegates.html":{"name":"MBRecognizerRunnerViewControllerMetadataDelegates","abstract":"<p>Class containing all metadata delegates</p>"},"Classes/MBRegexParser.html":{"name":"MBRegexParser","abstract":"<p>Represents a parser which parses OCR result according to given regular expression."},"Classes/MBRegexParserResult.html":{"name":"MBRegexParserResult","abstract":"<p>MBDateParser that can extract date from OCR result.</p>"},"Classes/MBRomaniaIdFrontRecognizer.html":{"name":"MBRomaniaIdFrontRecognizer","abstract":"<p>Class for configuring Romanian ID Front Recognizer.</p>"},"Classes/MBRomaniaIdFrontRecognizerResult.html":{"name":"MBRomaniaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Romanian ID</p>"},"Classes/MBScanElement.html":{"name":"MBScanElement","abstract":"<p>The easiest way to UI for Ocr scanning is by specifying the MBScanElements.</p>"},"Classes/MBSerbiaCombinedRecognizer.html":{"name":"MBSerbiaCombinedRecognizer","abstract":"<p>Serbian ID Combined Recognizer.</p>"},"Classes/MBSerbiaCombinedRecognizerResult.html":{"name":"MBSerbiaCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Czech ID.</p>"},"Classes/MBSerbiaIdBackRecognizer.html":{"name":"MBSerbiaIdBackRecognizer","abstract":"<p>Class for configuring Serbian ID Back Recognizer.</p>"},"Classes/MBSerbiaIdBackRecognizerResult.html":{"name":"MBSerbiaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Serbian ID</p>"},"Classes/MBSerbiaIdFrontRecognizer.html":{"name":"MBSerbiaIdFrontRecognizer","abstract":"<p>Class for configuring Serbian ID Front Recognizer.</p>"},"Classes/MBSerbiaIdFrontRecognizerResult.html":{"name":"MBSerbiaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Serbian ID</p>"},"Classes/MBSimNumberRecognizer.html":{"name":"MBSimNumberRecognizer","abstract":"<p>Recognizer that can perform recognition of barcodes on SIM packaging.</p>"},"Classes/MBSimNumberRecognizerResult.html":{"name":"MBSimNumberRecognizerResult","abstract":"<p>Recognizer that can perform recognition of barcodes on SIM packaging.</p>"},"Classes/MBSingaporeCombinedRecognizer.html":{"name":"MBSingaporeCombinedRecognizer","abstract":"<p>Singapore ID Combined Recognizer.</p>"},"Classes/MBSingaporeCombinedRecognizerResult.html":{"name":"MBSingaporeCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Czech ID.</p>"},"Classes/MBSingaporeIdBackRecognizer.html":{"name":"MBSingaporeIdBackRecognizer","abstract":"<p>Class for configuring Singapore ID Back Recognizer.</p>"},"Classes/MBSingaporeIdBackRecognizerResult.html":{"name":"MBSingaporeIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Singapore ID</p>"},"Classes/MBSingaporeIdFrontRecognizer.html":{"name":"MBSingaporeIdFrontRecognizer","abstract":"<p>Class for configuring Singapore ID Front Recognizer.</p>"},"Classes/MBSingaporeIdFrontRecognizerResult.html":{"name":"MBSingaporeIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Singapore ID</p>"},"Classes/MBSlovakiaCombinedRecognizer.html":{"name":"MBSlovakiaCombinedRecognizer","abstract":"<p>Slovak ID Combined Recognizer.</p>"},"Classes/MBSlovakiaCombinedRecognizerResult.html":{"name":"MBSlovakiaCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Slovak ID.</p>"},"Classes/MBSlovakiaIdBackRecognizer.html":{"name":"MBSlovakiaIdBackRecognizer","abstract":"<p>Class for configuring Slovak ID Back Recognizer.</p>"},"Classes/MBSlovakiaIdBackRecognizerResult.html":{"name":"MBSlovakiaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Slovak ID</p>"},"Classes/MBSlovakiaIdFrontRecognizer.html":{"name":"MBSlovakiaIdFrontRecognizer","abstract":"<p>Class for configuring Slovak ID Front Recognizer.</p>"},"Classes/MBSlovakiaIdFrontRecognizerResult.html":{"name":"MBSlovakiaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Slovak ID</p>"},"Classes/MBSloveniaCombinedRecognizer.html":{"name":"MBSloveniaCombinedRecognizer","abstract":"<p>Slovenian ID Combined Recognizer.</p>"},"Classes/MBSloveniaCombinedRecognizerResult.html":{"name":"MBSloveniaCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of Slovenian ID.</p>"},"Classes/MBSloveniaIdBackRecognizer.html":{"name":"MBSloveniaIdBackRecognizer","abstract":"<p>Class for configuring Slovenian ID Back Recognizer.</p>"},"Classes/MBSloveniaIdBackRecognizerResult.html":{"name":"MBSloveniaIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Slovenian ID</p>"},"Classes/MBSloveniaIdFrontRecognizer.html":{"name":"MBSloveniaIdFrontRecognizer","abstract":"<p>Class for configuring Slovenian ID Front Recognizer.</p>"},"Classes/MBSloveniaIdFrontRecognizerResult.html":{"name":"MBSloveniaIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Slovenian ID</p>"},"Classes/MBSubview.html":{"name":"MBSubview","abstract":"<p>Base class for all overlay subviews</p>"},"Classes/MBSuccessFrameGrabberRecognizer.html":{"name":"MBSuccessFrameGrabberRecognizer","abstract":"<p>A recognizer that can returns success frame.</p>"},"Classes/MBSuccessFrameGrabberRecognizerResult.html":{"name":"MBSuccessFrameGrabberRecognizerResult","abstract":"<p>A recognizer that returns SuccessFrameGrabber result.</p>"},"Classes/MBSwedenDlFrontRecognizer.html":{"name":"MBSwedenDlFrontRecognizer","abstract":"<p>Class for configuring Sweden Dl Front Recognizer.</p>"},"Classes/MBSwedenDlFrontRecognizerResult.html":{"name":"MBSwedenDlFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Sweden Dl</p>"},"Classes/MBSwitzerlandIdBackRecognizer.html":{"name":"MBSwitzerlandIdBackRecognizer","abstract":"<p>Class for configuring Swiss ID Back Recognizer.</p>"},"Classes/MBSwitzerlandIdBackRecognizerResult.html":{"name":"MBSwitzerlandIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of Swiss ID</p>"},"Classes/MBSwitzerlandIdFrontRecognizer.html":{"name":"MBSwitzerlandIdFrontRecognizer","abstract":"<p>Class for configuring Swiss ID Front Recognizer.</p>"},"Classes/MBSwitzerlandIdFrontRecognizerResult.html":{"name":"MBSwitzerlandIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of Swiss ID</p>"},"Classes/MBSwitzerlandPassportRecognizer.html":{"name":"MBSwitzerlandPassportRecognizer","abstract":"<p>Class for configuring Swiss Passport Recognizer.</p>"},"Classes/MBSwitzerlandPassportRecognizerResult.html":{"name":"MBSwitzerlandPassportRecognizerResult","abstract":"<p>Class representing values obtained when scanning Swiss Passport</p>"},"Classes/MBTapToFocusSubview.html":{"name":"MBTapToFocusSubview","abstract":"<p>Overlay subview presenting the effect which happens when the user taps to focus</p>"},"Classes/MBTemplatingClass.html":{"name":"MBTemplatingClass","abstract":"<p>Class that represents a specific class of documents when used within Templating API.</p>"},"Classes/MBTemplatingRecognizer.html":{"name":"MBTemplatingRecognizer","abstract":"<p>Base of all recognizers that support Templating API.</p>"},"Classes/MBTemplatingRecognizerResult.html":{"name":"MBTemplatingRecognizerResult","abstract":"<p>Base of all recognizers result that support Templating API.</p>"},"Classes/MBTopUpParser.html":{"name":"MBTopUpParser","abstract":"<p>MBTopUpParser is used for parsing Top Up numbers</p>"},"Classes/MBTopUpParserResult.html":{"name":"MBTopUpParserResult","abstract":"<p>MBTopUpParser is used for parsing Top Up numbers</p>"},"Classes/MBUnitedArabEmiratesIdBackRecognizer.html":{"name":"MBUnitedArabEmiratesIdBackRecognizer","abstract":"<p>Class for configuring United Arab Emirates ID Back Recognizer.</p>"},"Classes/MBUnitedArabEmiratesIdBackRecognizerResult.html":{"name":"MBUnitedArabEmiratesIdBackRecognizerResult","abstract":"<p>Class representing values obtained when scanning back side of United Arab Emirates ID</p>"},"Classes/MBUnitedArabEmiratesIdFrontRecognizer.html":{"name":"MBUnitedArabEmiratesIdFrontRecognizer","abstract":"<p>Class for configuring United Arab Emirates ID Front Recognizer.</p>"},"Classes/MBUnitedArabEmiratesIdFrontRecognizerResult.html":{"name":"MBUnitedArabEmiratesIdFrontRecognizerResult","abstract":"<p>Class representing values obtained when scanning front side of United Arab Emirates ID</p>"},"Classes/MBUsdlCombinedRecognizer.html":{"name":"MBUsdlCombinedRecognizer","abstract":"<p>USDL Combined Recognizer.</p>"},"Classes/MBUsdlCombinedRecognizerResult.html":{"name":"MBUsdlCombinedRecognizerResult","abstract":"<p>Class representing values obtained when scanning both front and back side of US Driver&rsquo;s License.</p>"},"Classes/MBUsdlRecognizer.html":{"name":"MBUsdlRecognizer","abstract":"<p>A recognizer that can scan USDL.</p>"},"Classes/MBUsdlRecognizerResult.html":{"name":"MBUsdlRecognizerResult","abstract":"<p>A recognizer that can scan PDF417 2D barcodes.</p>"},"Classes/MBViewControllerFactory.html":{"name":"MBViewControllerFactory","abstract":"<p>Factory class containing static methods for creating camera view controllers."},"Classes/MBVinParser.html":{"name":"MBVinParser","abstract":"<p>MBVinParser is used for parsing VIN numbers</p>"},"Classes/MBVinParserResult.html":{"name":"MBVinParserResult","abstract":"<p>MBVinParser is used for parsing VIN numbers</p>"},"Classes/MBVinRecognizer.html":{"name":"MBVinRecognizer","abstract":"<p>Recognizer that can perform recognition of VINs (Vehicle Identification Number).</p>"},"Classes/MBVinRecognizerResult.html":{"name":"MBVinRecognizerResult","abstract":"<p>Recognizer that can perform recognition of VINs (Vehicle Identification Number).</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Constants.html":{"name":"Constants","abstract":"<p>The following constants are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Type Definitions.html":{"name":"Type Definitions","abstract":"<p>The following type definitions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}